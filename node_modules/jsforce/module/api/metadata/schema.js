/**
 * This file is generated from WSDL file by wsdl2schema.ts.
 * Do not modify directly.
 * To generate the file, run "ts-node path/to/wsdl2schema.ts path/to/wsdl.xml path/to/schema.ts"
 */
export const ApiSchemas = {
  CancelDeployResult: {
    type: 'CancelDeployResult',
    props: {
      done: 'boolean',
      id: 'string'
    }
  },
  DeployResult: {
    type: 'DeployResult',
    props: {
      canceledBy: '?string',
      canceledByName: '?string',
      checkOnly: 'boolean',
      completedDate: '?string',
      createdBy: 'string',
      createdByName: 'string',
      createdDate: 'string',
      details: 'DeployDetails',
      done: 'boolean',
      errorMessage: '?string',
      errorStatusCode: '?string',
      id: 'string',
      ignoreWarnings: 'boolean',
      lastModifiedDate: '?string',
      numberComponentErrors: 'number',
      numberComponentsDeployed: 'number',
      numberComponentsTotal: 'number',
      numberTestErrors: 'number',
      numberTestsCompleted: 'number',
      numberTestsTotal: 'number',
      rollbackOnError: 'boolean',
      runTestsEnabled: 'boolean',
      startDate: '?string',
      stateDetail: '?string',
      status: 'string',
      success: 'boolean'
    }
  },
  DeployDetails: {
    type: 'DeployDetails',
    props: {
      componentFailures: ['DeployMessage'],
      componentSuccesses: ['DeployMessage'],
      retrieveResult: '?RetrieveResult',
      runTestResult: '?RunTestsResult'
    }
  },
  DeployMessage: {
    type: 'DeployMessage',
    props: {
      changed: 'boolean',
      columnNumber: '?number',
      componentType: '?string',
      created: 'boolean',
      createdDate: 'string',
      deleted: 'boolean',
      fileName: 'string',
      fullName: 'string',
      id: '?string',
      lineNumber: '?number',
      problem: '?string',
      problemType: '?string',
      success: 'boolean'
    }
  },
  RetrieveResult: {
    type: 'RetrieveResult',
    props: {
      done: 'boolean',
      errorMessage: '?string',
      errorStatusCode: '?string',
      fileProperties: ['FileProperties'],
      id: 'string',
      messages: ['RetrieveMessage'],
      status: 'string',
      success: 'boolean',
      zipFile: 'string'
    }
  },
  FileProperties: {
    type: 'FileProperties',
    props: {
      createdById: 'string',
      createdByName: 'string',
      createdDate: 'string',
      fileName: 'string',
      fullName: 'string',
      id: 'string',
      lastModifiedById: 'string',
      lastModifiedByName: 'string',
      lastModifiedDate: 'string',
      manageableState: '?string',
      namespacePrefix: '?string',
      type: 'string'
    }
  },
  RetrieveMessage: {
    type: 'RetrieveMessage',
    props: {
      fileName: 'string',
      problem: 'string'
    }
  },
  RunTestsResult: {
    type: 'RunTestsResult',
    props: {
      apexLogId: '?string',
      codeCoverage: ['CodeCoverageResult'],
      codeCoverageWarnings: ['CodeCoverageWarning'],
      failures: ['RunTestFailure'],
      flowCoverage: ['FlowCoverageResult'],
      flowCoverageWarnings: ['FlowCoverageWarning'],
      numFailures: 'number',
      numTestsRun: 'number',
      successes: ['RunTestSuccess'],
      totalTime: 'number'
    }
  },
  CodeCoverageResult: {
    type: 'CodeCoverageResult',
    props: {
      dmlInfo: ['CodeLocation'],
      id: 'string',
      locationsNotCovered: ['CodeLocation'],
      methodInfo: ['CodeLocation'],
      name: 'string',
      namespace: '?string',
      numLocations: 'number',
      numLocationsNotCovered: 'number',
      soqlInfo: ['CodeLocation'],
      soslInfo: ['CodeLocation'],
      type: 'string'
    }
  },
  CodeLocation: {
    type: 'CodeLocation',
    props: {
      column: 'number',
      line: 'number',
      numExecutions: 'number',
      time: 'number'
    }
  },
  CodeCoverageWarning: {
    type: 'CodeCoverageWarning',
    props: {
      id: 'string',
      message: 'string',
      name: '?string',
      namespace: '?string'
    }
  },
  RunTestFailure: {
    type: 'RunTestFailure',
    props: {
      id: 'string',
      message: 'string',
      methodName: '?string',
      name: 'string',
      namespace: '?string',
      packageName: 'string',
      seeAllData: '?boolean',
      stackTrace: '?string',
      time: 'number',
      type: 'string'
    }
  },
  FlowCoverageResult: {
    type: 'FlowCoverageResult',
    props: {
      elementsNotCovered: ['string'],
      flowId: 'string',
      flowName: 'string',
      flowNamespace: '?string',
      numElements: 'number',
      numElementsNotCovered: 'number',
      processType: 'string'
    }
  },
  FlowCoverageWarning: {
    type: 'FlowCoverageWarning',
    props: {
      flowId: '?string',
      flowName: '?string',
      flowNamespace: '?string',
      message: 'string'
    }
  },
  RunTestSuccess: {
    type: 'RunTestSuccess',
    props: {
      id: 'string',
      methodName: 'string',
      name: 'string',
      namespace: '?string',
      seeAllData: '?boolean',
      time: 'number'
    }
  },
  Metadata: {
    type: 'Metadata',
    props: {
      fullName: '?string'
    }
  },
  AccountRelationshipShareRule: {
    type: 'AccountRelationshipShareRule',
    props: {
      accessLevel: 'string',
      accountToCriteriaField: 'string',
      description: '?string',
      entityType: 'string',
      masterLabel: 'string',
      staticFormulaCriteria: '?string',
      type: 'string'
    },
    extends: 'Metadata'
  },
  AccountSettings: {
    type: 'AccountSettings',
    props: {
      enableAccountHistoryTracking: '?boolean',
      enableAccountInsightsInMobile: '?boolean',
      enableAccountOwnerReport: '?boolean',
      enableAccountTeams: '?boolean',
      enableContactHistoryTracking: '?boolean',
      enableRelateContactToMultipleAccounts: '?boolean',
      showViewHierarchyLink: '?boolean'
    },
    extends: 'Metadata'
  },
  ActionLinkGroupTemplate: {
    type: 'ActionLinkGroupTemplate',
    props: {
      actionLinkTemplates: ['ActionLinkTemplate'],
      category: 'string',
      executionsAllowed: 'string',
      hoursUntilExpiration: '?number',
      isPublished: 'boolean',
      name: 'string'
    },
    extends: 'Metadata'
  },
  ActionLinkTemplate: {
    type: 'ActionLinkTemplate',
    props: {
      actionUrl: 'string',
      headers: '?string',
      isConfirmationRequired: 'boolean',
      isGroupDefault: 'boolean',
      label: '?string',
      labelKey: 'string',
      linkType: 'string',
      method: 'string',
      position: 'number',
      requestBody: '?string',
      userAlias: '?string',
      userVisibility: 'string'
    }
  },
  ActionPlanTemplate: {
    type: 'ActionPlanTemplate',
    props: {
      actionPlanTemplateItem: ['ActionPlanTemplateItem'],
      description: '?string',
      name: 'string',
      targetEntityType: 'string',
      uniqueName: 'string'
    },
    extends: 'Metadata'
  },
  ActionPlanTemplateItem: {
    type: 'ActionPlanTemplateItem',
    props: {
      actionPlanTemplateItemValue: ['ActionPlanTemplateItemValue'],
      displayOrder: '?number',
      isRequired: '?boolean',
      name: 'string',
      uniqueName: 'string'
    }
  },
  ActionPlanTemplateItemValue: {
    type: 'ActionPlanTemplateItemValue',
    props: {
      name: 'string',
      valueFormula: '?string',
      valueLiteral: '?string'
    }
  },
  ActionsSettings: {
    type: 'ActionsSettings',
    props: {
      enableDefaultQuickActionsOn: '?boolean',
      enableMdpEnabled: '?boolean',
      enableThirdPartyActions: '?boolean'
    },
    extends: 'Metadata'
  },
  ActivitiesSettings: {
    type: 'ActivitiesSettings',
    props: {
      allowUsersToRelateMultipleContactsToTasksAndEvents: '?boolean',
      autoRelateEventAttendees: '?boolean',
      enableActivityReminders: '?boolean',
      enableClickCreateEvents: '?boolean',
      enableDragAndDropScheduling: '?boolean',
      enableEmailTracking: '?boolean',
      enableGroupTasks: '?boolean',
      enableListViewScheduling: '?boolean',
      enableLogNote: '?boolean',
      enableMultidayEvents: '?boolean',
      enableRecurringEvents: '?boolean',
      enableRecurringTasks: '?boolean',
      enableRollUpActivToContactsAcct: '?boolean',
      enableSidebarCalendarShortcut: '?boolean',
      enableSimpleTaskCreateUI: '?boolean',
      enableUNSTaskDelegatedToNotifications: '?boolean',
      enableUserListViewCalendars: '?boolean',
      meetingRequestsLogo: '?string',
      showCustomLogoMeetingRequests: '?boolean',
      showEventDetailsMultiUserCalendar: '?boolean',
      showHomePageHoverLinksForEvents: '?boolean',
      showMyTasksHoverLinks: '?boolean'
    },
    extends: 'Metadata'
  },
  AddressSettings: {
    type: 'AddressSettings',
    props: {
      countriesAndStates: 'CountriesAndStates'
    },
    extends: 'Metadata'
  },
  CountriesAndStates: {
    type: 'CountriesAndStates',
    props: {
      countries: ['Country']
    }
  },
  Country: {
    type: 'Country',
    props: {
      active: 'boolean',
      integrationValue: 'string',
      isoCode: 'string',
      label: 'string',
      orgDefault: 'boolean',
      standard: 'boolean',
      states: ['State'],
      visible: 'boolean'
    }
  },
  State: {
    type: 'State',
    props: {
      active: 'boolean',
      integrationValue: 'string',
      isoCode: 'string',
      label: 'string',
      standard: 'boolean',
      visible: 'boolean'
    }
  },
  AnalyticSnapshot: {
    type: 'AnalyticSnapshot',
    props: {
      description: '?string',
      groupColumn: '?string',
      mappings: ['AnalyticSnapshotMapping'],
      name: 'string',
      runningUser: '?string',
      sourceReport: 'string',
      targetObject: 'string'
    },
    extends: 'Metadata'
  },
  AnalyticSnapshotMapping: {
    type: 'AnalyticSnapshotMapping',
    props: {
      aggregateType: '?string',
      sourceField: 'string',
      sourceType: 'string',
      targetField: 'string'
    }
  },
  AnalyticsSettings: {
    type: 'AnalyticsSettings',
    props: {
      alwaysGenPreviews: '?boolean',
      analyticsAdoptionMetadata: '?boolean',
      canAccessAnalyticsViaAPI: '?boolean',
      canAnnotateDashboards: '?boolean',
      canEnableSavedView: '?boolean',
      canExploreDataConversationally: '?boolean',
      canShareAppsWithCommunities: '?boolean',
      canSubscribeDashboardWidgets: '?boolean',
      canViewThumbnailAssets: '?boolean',
      enableAnalyticsSubtotals: '?boolean',
      enableAutoCompleteCombo: '?boolean',
      enableDashboardComponentSnapshot: '?boolean',
      enableDashboardFlexiTable: '?boolean',
      enableEmailReportsToPortalUsers: '?boolean',
      enableFloatingReportHeaders: '?boolean',
      enableInsights: '?boolean',
      enableLightningReportBuilder: '?boolean',
      enableLotusNotesImages: '?boolean',
      enableMassEnableReportBuilder: '?boolean',
      enableNewChartsEngine: '?boolean',
      enablePowerInsights: '?boolean',
      enableRemoveFooterForRepDisplay: '?boolean',
      enableRemoveFooterFromRepExp: '?boolean',
      enableReportFieldToFieldPref: '?boolean',
      enableReportUniqueRowCountPref: '?boolean',
      enableSFXJoinedReportsEnable: '?boolean',
      enableSmartDataDiscovery: '?boolean',
      enableUseOldChartsLookAndFeel: '?boolean',
      enableWaveReplication: '?boolean',
      enableWaveSharingInheritance: '?boolean',
      enableWaveTemplate: '?boolean',
      enableWaveTrendedDatasetCleanup: '?boolean'
    },
    extends: 'Metadata'
  },
  AnimationRule: {
    type: 'AnimationRule',
    props: {
      animationFrequency: 'string',
      developerName: 'string',
      isActive: 'boolean',
      masterLabel: 'string',
      recordTypeContext: 'string',
      recordTypeName: '?string',
      sobjectType: 'string',
      targetField: 'string',
      targetFieldChangeToValues: 'string'
    },
    extends: 'Metadata'
  },
  ApexSettings: {
    type: 'ApexSettings',
    props: {
      enableAggregateCodeCoverageOnly: '?boolean',
      enableApexAccessRightsPref: '?boolean',
      enableApexApprovalLockUnlock: '?boolean',
      enableApexCtrlImplicitWithSharingPref: '?boolean',
      enableApexPropertyGetterPref: '?boolean',
      enableAuraApexCtrlAuthUserAccessCheckPref: '?boolean',
      enableAuraApexCtrlGuestUserAccessCheckPref: '?boolean',
      enableCompileOnDeploy: '?boolean',
      enableDisableParallelApexTesting: '?boolean',
      enableDoNotEmailDebugLog: '?boolean',
      enableGaplessTestAutoNum: '?boolean',
      enableMngdCtrlActionAccessPref: '?boolean',
      enableNonCertifiedApexMdCrud: '?boolean'
    },
    extends: 'Metadata'
  },
  ApexTestSuite: {
    type: 'ApexTestSuite',
    props: {
      testClassName: ['string']
    },
    extends: 'Metadata'
  },
  AppExperienceSettings: {
    type: 'AppExperienceSettings',
    props: {
      doesHideAllAppsInAppLauncher: '?boolean'
    },
    extends: 'Metadata'
  },
  AppMenu: {
    type: 'AppMenu',
    props: {
      appMenuItems: ['AppMenuItem']
    },
    extends: 'Metadata'
  },
  AppMenuItem: {
    type: 'AppMenuItem',
    props: {
      name: 'string',
      type: 'string'
    }
  },
  AppointmentSchedulingPolicy: {
    type: 'AppointmentSchedulingPolicy',
    props: {
      appointmentStartTimeInterval: 'string',
      masterLabel: 'string',
      shouldConsiderCalendarEvents: 'boolean',
      shouldEnforceExcludedResource: 'boolean',
      shouldEnforceRequiredResource: 'boolean',
      shouldMatchSkill: 'boolean',
      shouldMatchSkillLevel: 'boolean',
      shouldRespectVisitingHours: 'boolean',
      shouldUsePrimaryMembers: 'boolean',
      shouldUseSecondaryMembers: 'boolean'
    },
    extends: 'Metadata'
  },
  ApprovalProcess: {
    type: 'ApprovalProcess',
    props: {
      active: 'boolean',
      allowRecall: '?boolean',
      allowedSubmitters: ['ApprovalSubmitter'],
      approvalPageFields: '?ApprovalPageField',
      approvalStep: ['ApprovalStep'],
      description: '?string',
      emailTemplate: '?string',
      enableMobileDeviceAccess: '?boolean',
      entryCriteria: '?ApprovalEntryCriteria',
      finalApprovalActions: '?ApprovalAction',
      finalApprovalRecordLock: '?boolean',
      finalRejectionActions: '?ApprovalAction',
      finalRejectionRecordLock: '?boolean',
      initialSubmissionActions: '?ApprovalAction',
      label: 'string',
      nextAutomatedApprover: '?NextAutomatedApprover',
      postTemplate: '?string',
      recallActions: '?ApprovalAction',
      recordEditability: 'string',
      showApprovalHistory: '?boolean'
    },
    extends: 'Metadata'
  },
  ApprovalSubmitter: {
    type: 'ApprovalSubmitter',
    props: {
      submitter: '?string',
      type: 'string'
    }
  },
  ApprovalPageField: {
    type: 'ApprovalPageField',
    props: {
      field: ['string']
    }
  },
  ApprovalStep: {
    type: 'ApprovalStep',
    props: {
      allowDelegate: '?boolean',
      approvalActions: '?ApprovalAction',
      assignedApprover: 'ApprovalStepApprover',
      description: '?string',
      entryCriteria: '?ApprovalEntryCriteria',
      ifCriteriaNotMet: '?string',
      label: 'string',
      name: 'string',
      rejectBehavior: '?ApprovalStepRejectBehavior',
      rejectionActions: '?ApprovalAction'
    }
  },
  ApprovalAction: {
    type: 'ApprovalAction',
    props: {
      action: ['WorkflowActionReference']
    }
  },
  WorkflowActionReference: {
    type: 'WorkflowActionReference',
    props: {
      name: 'string',
      type: 'string'
    }
  },
  ApprovalStepApprover: {
    type: 'ApprovalStepApprover',
    props: {
      approver: ['Approver'],
      whenMultipleApprovers: '?string'
    }
  },
  Approver: {
    type: 'Approver',
    props: {
      name: '?string',
      type: 'string'
    }
  },
  ApprovalEntryCriteria: {
    type: 'ApprovalEntryCriteria',
    props: {
      booleanFilter: '?string',
      criteriaItems: ['FilterItem'],
      formula: '?string'
    }
  },
  FilterItem: {
    type: 'FilterItem',
    props: {
      field: 'string',
      operation: 'string',
      value: '?string',
      valueField: '?string'
    }
  },
  DuplicateRuleFilterItem: {
    type: 'DuplicateRuleFilterItem',
    props: {
      sortOrder: 'number',
      table: 'string'
    },
    extends: 'FilterItem'
  },
  ApprovalStepRejectBehavior: {
    type: 'ApprovalStepRejectBehavior',
    props: {
      type: 'string'
    }
  },
  NextAutomatedApprover: {
    type: 'NextAutomatedApprover',
    props: {
      useApproverFieldOfRecordOwner: '?boolean',
      userHierarchyField: 'string'
    }
  },
  ArchiveSettings: {
    type: 'ArchiveSettings',
    props: {
      enableEntityArchivingEnabled: '?boolean'
    },
    extends: 'Metadata'
  },
  AssignmentRule: {
    type: 'AssignmentRule',
    props: {
      active: '?boolean',
      ruleEntry: ['RuleEntry']
    },
    extends: 'Metadata'
  },
  RuleEntry: {
    type: 'RuleEntry',
    props: {
      assignedTo: '?string',
      assignedToType: '?string',
      booleanFilter: '?string',
      businessHours: '?string',
      businessHoursSource: '?string',
      criteriaItems: ['FilterItem'],
      disableEscalationWhenModified: '?boolean',
      escalationAction: ['EscalationAction'],
      escalationStartTime: '?string',
      formula: '?string',
      notifyCcRecipients: '?boolean',
      overrideExistingTeams: '?boolean',
      replyToEmail: '?string',
      senderEmail: '?string',
      senderName: '?string',
      team: ['string'],
      template: '?string'
    }
  },
  EscalationAction: {
    type: 'EscalationAction',
    props: {
      assignedTo: '?string',
      assignedToTemplate: '?string',
      assignedToType: '?string',
      minutesToEscalation: '?number',
      notifyCaseOwner: '?boolean',
      notifyEmail: ['string'],
      notifyTo: '?string',
      notifyToTemplate: '?string'
    }
  },
  AssignmentRules: {
    type: 'AssignmentRules',
    props: {
      assignmentRule: ['AssignmentRule']
    },
    extends: 'Metadata'
  },
  Audience: {
    type: 'Audience',
    props: {
      audienceName: 'string',
      container: 'string',
      criteria: 'AudienceCriteria',
      description: '?string',
      formula: '?string',
      formulaFilterType: '?string',
      targets: '?PersonalizationTargetInfos'
    },
    extends: 'Metadata'
  },
  AudienceCriteria: {
    type: 'AudienceCriteria',
    props: {
      criterion: ['AudienceCriterion']
    }
  },
  AudienceCriterion: {
    type: 'AudienceCriterion',
    props: {
      criteriaNumber: '?number',
      criterionValue: '?AudienceCriteriaValue',
      operator: '?string',
      type: 'string'
    }
  },
  AudienceCriteriaValue: {
    type: 'AudienceCriteriaValue',
    props: {
      city: '?string',
      country: '?string',
      domain: '?string',
      entityField: '?string',
      entityType: '?string',
      fieldValue: '?string',
      isEnabled: '?string',
      permissionName: '?string',
      permissionType: '?string',
      profile: '?string',
      subdivision: '?string'
    }
  },
  PersonalizationTargetInfos: {
    type: 'PersonalizationTargetInfos',
    props: {
      target: ['PersonalizationTargetInfo']
    }
  },
  PersonalizationTargetInfo: {
    type: 'PersonalizationTargetInfo',
    props: {
      groupName: 'string',
      priority: '?number',
      targetType: 'string',
      targetValue: 'string'
    }
  },
  AuraDefinitionBundle: {
    type: 'AuraDefinitionBundle',
    props: {
      SVGContent: '?string',
      apiVersion: '?number',
      controllerContent: '?string',
      description: '?string',
      designContent: '?string',
      documentationContent: '?string',
      helperContent: '?string',
      markup: '?string',
      modelContent: '?string',
      packageVersions: ['PackageVersion'],
      rendererContent: '?string',
      styleContent: '?string',
      testsuiteContent: '?string',
      type: '?string'
    },
    extends: 'Metadata'
  },
  PackageVersion: {
    type: 'PackageVersion',
    props: {
      majorNumber: 'number',
      minorNumber: 'number',
      namespace: 'string'
    }
  },
  AuthProvider: {
    type: 'AuthProvider',
    props: {
      appleTeam: '?string',
      authorizeUrl: '?string',
      consumerKey: '?string',
      consumerSecret: '?string',
      customMetadataTypeRecord: '?string',
      defaultScopes: '?string',
      ecKey: '?string',
      errorUrl: '?string',
      executionUser: '?string',
      friendlyName: 'string',
      iconUrl: '?string',
      idTokenIssuer: '?string',
      includeOrgIdInIdentifier: '?boolean',
      linkKickoffUrl: '?string',
      logoutUrl: '?string',
      oauthKickoffUrl: '?string',
      plugin: '?string',
      portal: '?string',
      providerType: 'string',
      registrationHandler: '?string',
      sendAccessTokenInHeader: '?boolean',
      sendClientCredentialsInHeader: '?boolean',
      sendSecretInApis: '?boolean',
      ssoKickoffUrl: '?string',
      tokenUrl: '?string',
      userInfoUrl: '?string'
    },
    extends: 'Metadata'
  },
  AutoResponseRule: {
    type: 'AutoResponseRule',
    props: {
      active: '?boolean',
      ruleEntry: ['RuleEntry']
    },
    extends: 'Metadata'
  },
  AutoResponseRules: {
    type: 'AutoResponseRules',
    props: {
      autoResponseRule: ['AutoResponseRule']
    },
    extends: 'Metadata'
  },
  BlockchainSettings: {
    type: 'BlockchainSettings',
    props: {
      enableBcp: '?boolean',
      enableBcpCoin: '?boolean'
    },
    extends: 'Metadata'
  },
  Bot: {
    type: 'Bot',
    props: {
      botMlDomain: '?LocalMlDomain',
      botUser: '?string',
      botVersions: ['BotVersion'],
      contextVariables: ['ConversationContextVariable'],
      description: '?string',
      label: '?string'
    },
    extends: 'Metadata'
  },
  LocalMlDomain: {
    type: 'LocalMlDomain',
    props: {
      label: 'string',
      mlIntents: ['MlIntent'],
      mlSlotClasses: ['MlSlotClass'],
      name: 'string'
    }
  },
  MlIntent: {
    type: 'MlIntent',
    props: {
      description: '?string',
      developerName: 'string',
      label: 'string',
      mlIntentUtterances: ['MlIntentUtterance'],
      relatedMlIntents: ['MlRelatedIntent']
    }
  },
  MlIntentUtterance: {
    type: 'MlIntentUtterance',
    props: {
      utterance: 'string'
    }
  },
  MlRelatedIntent: {
    type: 'MlRelatedIntent',
    props: {
      relatedMlIntent: 'string'
    }
  },
  MlSlotClass: {
    type: 'MlSlotClass',
    props: {
      dataType: 'string',
      description: '?string',
      developerName: 'string',
      extractionRegex: '?string',
      extractionType: '?string',
      label: 'string',
      mlSlotClassValues: ['MlSlotClassValue']
    }
  },
  MlSlotClassValue: {
    type: 'MlSlotClassValue',
    props: {
      synonymGroup: '?SynonymGroup',
      value: 'string'
    }
  },
  SynonymGroup: {
    type: 'SynonymGroup',
    props: {
      languages: ['string'],
      terms: ['string']
    }
  },
  BotVersion: {
    type: 'BotVersion',
    props: {
      botDialogGroups: ['BotDialogGroup'],
      botDialogs: ['BotDialog'],
      conversationVariables: ['ConversationVariable'],
      entryDialog: 'string',
      mainMenuDialog: 'string',
      responseDelayMilliseconds: '?number'
    },
    extends: 'Metadata'
  },
  BotDialogGroup: {
    type: 'BotDialogGroup',
    props: {
      description: '?string',
      developerName: 'string',
      label: 'string'
    }
  },
  BotDialog: {
    type: 'BotDialog',
    props: {
      botDialogGroup: '?string',
      botSteps: ['BotStep'],
      description: '?string',
      developerName: 'string',
      label: 'string',
      mlIntent: '?string',
      mlIntentTrainingEnabled: '?boolean',
      showInFooterMenu: '?boolean'
    }
  },
  BotStep: {
    type: 'BotStep',
    props: {
      booleanFilter: '?string',
      botInvocation: '?BotInvocation',
      botMessages: ['BotMessage'],
      botNavigation: '?BotNavigation',
      botStepConditions: ['BotStepCondition'],
      botSteps: ['BotStep'],
      botVariableOperation: '?BotVariableOperation',
      conversationRecordLookup: '?ConversationRecordLookup',
      conversationSystemMessage: '?ConversationSystemMessage',
      type: 'string'
    }
  },
  BotInvocation: {
    type: 'BotInvocation',
    props: {
      invocationActionName: '?string',
      invocationActionType: '?string',
      invocationMappings: ['BotInvocationMapping']
    }
  },
  BotInvocationMapping: {
    type: 'BotInvocationMapping',
    props: {
      parameterName: 'string',
      type: 'string',
      value: '?string',
      variableName: '?string',
      variableType: '?string'
    }
  },
  BotMessage: {
    type: 'BotMessage',
    props: {
      message: 'string'
    }
  },
  BotNavigation: {
    type: 'BotNavigation',
    props: {
      botNavigationLinks: ['BotNavigationLink'],
      type: 'string'
    }
  },
  BotNavigationLink: {
    type: 'BotNavigationLink',
    props: {
      label: '?string',
      targetBotDialog: 'string'
    }
  },
  BotStepCondition: {
    type: 'BotStepCondition',
    props: {
      leftOperandName: 'string',
      leftOperandType: 'string',
      operatorType: 'string',
      rightOperandValue: '?string'
    }
  },
  BotVariableOperation: {
    type: 'BotVariableOperation',
    props: {
      botInvocation: '?BotInvocation',
      botMessages: ['BotMessage'],
      botQuickReplyOptions: ['BotQuickReplyOption'],
      botVariableOperands: ['BotVariableOperand'],
      invalidInputBotNavigation: '?BotNavigation',
      quickReplyOptionTemplate: '?string',
      quickReplyType: '?string',
      quickReplyWidgetType: '?string',
      sourceVariableName: '?string',
      sourceVariableType: '?string',
      type: 'string'
    }
  },
  BotQuickReplyOption: {
    type: 'BotQuickReplyOption',
    props: {
      literalValue: 'string'
    }
  },
  BotVariableOperand: {
    type: 'BotVariableOperand',
    props: {
      disableAutoFill: '?boolean',
      sourceName: '?string',
      sourceType: '?string',
      sourceValue: '?string',
      targetName: 'string',
      targetType: 'string'
    }
  },
  ConversationRecordLookup: {
    type: 'ConversationRecordLookup',
    props: {
      SObjectType: 'string',
      lookupFields: ['ConversationRecordLookupField'],
      maxLookupResults: 'number',
      sourceVariableName: 'string',
      sourceVariableType: 'string',
      targetVariableName: 'string'
    }
  },
  ConversationRecordLookupField: {
    type: 'ConversationRecordLookupField',
    props: {
      fieldName: 'string'
    }
  },
  ConversationSystemMessage: {
    type: 'ConversationSystemMessage',
    props: {
      systemMessageMappings: ['ConversationSystemMessageMapping'],
      type: 'string'
    }
  },
  ConversationSystemMessageMapping: {
    type: 'ConversationSystemMessageMapping',
    props: {
      mappingType: 'string',
      parameterType: 'string',
      variableName: 'string'
    }
  },
  ConversationVariable: {
    type: 'ConversationVariable',
    props: {
      SObjectType: '?string',
      collectionType: '?string',
      dataType: 'string',
      developerName: 'string',
      label: 'string'
    }
  },
  ConversationContextVariable: {
    type: 'ConversationContextVariable',
    props: {
      SObjectType: '?string',
      contextVariableMappings: ['ConversationContextVariableMapping'],
      dataType: 'string',
      developerName: 'string',
      label: 'string'
    }
  },
  ConversationContextVariableMapping: {
    type: 'ConversationContextVariableMapping',
    props: {
      SObjectType: 'string',
      fieldName: 'string',
      messageType: 'string'
    }
  },
  BotSettings: {
    type: 'BotSettings',
    props: {
      enableBots: '?boolean'
    },
    extends: 'Metadata'
  },
  BrandingSet: {
    type: 'BrandingSet',
    props: {
      brandingSetProperty: ['BrandingSetProperty'],
      description: '?string',
      masterLabel: 'string',
      type: '?string'
    },
    extends: 'Metadata'
  },
  BrandingSetProperty: {
    type: 'BrandingSetProperty',
    props: {
      propertyName: 'string',
      propertyValue: '?string'
    }
  },
  BusinessHoursEntry: {
    type: 'BusinessHoursEntry',
    props: {
      active: '?boolean',
      default: 'boolean',
      fridayEndTime: '?string',
      fridayStartTime: '?string',
      mondayEndTime: '?string',
      mondayStartTime: '?string',
      name: '?string',
      saturdayEndTime: '?string',
      saturdayStartTime: '?string',
      sundayEndTime: '?string',
      sundayStartTime: '?string',
      thursdayEndTime: '?string',
      thursdayStartTime: '?string',
      timeZoneId: '?string',
      tuesdayEndTime: '?string',
      tuesdayStartTime: '?string',
      wednesdayEndTime: '?string',
      wednesdayStartTime: '?string'
    },
    extends: 'Metadata'
  },
  BusinessHoursSettings: {
    type: 'BusinessHoursSettings',
    props: {
      businessHours: ['BusinessHoursEntry'],
      holidays: ['Holiday']
    },
    extends: 'Metadata'
  },
  Holiday: {
    type: 'Holiday',
    props: {
      activityDate: '?string',
      businessHours: ['string'],
      description: '?string',
      endTime: '?string',
      isRecurring: '?boolean',
      name: '?string',
      recurrenceDayOfMonth: '?number',
      recurrenceDayOfWeek: ['string'],
      recurrenceDayOfWeekMask: '?number',
      recurrenceEndDate: '?string',
      recurrenceInstance: '?string',
      recurrenceInterval: '?number',
      recurrenceMonthOfYear: '?string',
      recurrenceStartDate: '?string',
      recurrenceType: '?string',
      startTime: '?string'
    }
  },
  BusinessProcess: {
    type: 'BusinessProcess',
    props: {
      description: '?string',
      isActive: '?boolean',
      values: ['PicklistValue']
    },
    extends: 'Metadata'
  },
  PicklistValue: {
    type: 'PicklistValue',
    props: {
      color: '?string',
      default: 'boolean',
      description: '?string',
      isActive: '?boolean',
      allowEmail: '?boolean',
      closed: '?boolean',
      controllingFieldValues: ['string'],
      converted: '?boolean',
      cssExposed: '?boolean',
      forecastCategory: '?string',
      highPriority: '?boolean',
      probability: '?number',
      reverseRole: '?string',
      reviewed: '?boolean',
      won: '?boolean'
    },
    extends: 'Metadata'
  },
  CMSConnectSource: {
    type: 'CMSConnectSource',
    props: {
      cmsConnectAsset: ['CMSConnectAsset'],
      cmsConnectLanguage: ['CMSConnectLanguage'],
      cmsConnectPersonalization: '?CMSConnectPersonalization',
      cmsConnectResourceType: ['CMSConnectResourceType'],
      connectionType: 'string',
      cssScope: '?string',
      developerName: 'string',
      languageEnabled: '?string',
      masterLabel: 'string',
      namedCredential: '?string',
      personalizationEnabled: '?string',
      rootPath: '?string',
      sortOrder: 'number',
      status: 'string',
      type: 'string',
      websiteUrl: '?string'
    },
    extends: 'Metadata'
  },
  CMSConnectAsset: {
    type: 'CMSConnectAsset',
    props: {
      assetPath: 'string',
      assetType: 'string',
      sortOrder: 'number'
    }
  },
  CMSConnectLanguage: {
    type: 'CMSConnectLanguage',
    props: {
      cmsLanguage: 'string',
      language: 'string'
    }
  },
  CMSConnectPersonalization: {
    type: 'CMSConnectPersonalization',
    props: {
      connectorPage: 'string',
      connectorPageAsset: 'string'
    }
  },
  CMSConnectResourceType: {
    type: 'CMSConnectResourceType',
    props: {
      cmsConnectResourceDefinition: ['CMSConnectResourceDefinition'],
      developerName: 'string',
      masterLabel: 'string',
      resourceType: 'string'
    }
  },
  CMSConnectResourceDefinition: {
    type: 'CMSConnectResourceDefinition',
    props: {
      developerName: 'string',
      masterLabel: 'string',
      options: 'number',
      payloadType: 'string',
      resourceIdPath: '?string',
      resourceNamePath: '?string',
      resourcePath: 'string',
      rootNodePath: '?string'
    }
  },
  CallCenter: {
    type: 'CallCenter',
    props: {
      adapterUrl: '?string',
      customSettings: '?string',
      displayName: 'string',
      displayNameLabel: 'string',
      internalNameLabel: 'string',
      sections: ['CallCenterSection'],
      version: '?string'
    },
    extends: 'Metadata'
  },
  CallCenterSection: {
    type: 'CallCenterSection',
    props: {
      items: ['CallCenterItem'],
      label: 'string',
      name: 'string'
    }
  },
  CallCenterItem: {
    type: 'CallCenterItem',
    props: {
      label: 'string',
      name: 'string',
      value: 'string'
    }
  },
  CampaignInfluenceModel: {
    type: 'CampaignInfluenceModel',
    props: {
      isActive: '?boolean',
      isDefaultModel: 'boolean',
      isModelLocked: 'boolean',
      modelDescription: '?string',
      name: 'string',
      recordPreference: '?string'
    },
    extends: 'Metadata'
  },
  CampaignSettings: {
    type: 'CampaignSettings',
    props: {
      enableAutoCampInfluenceDisabled: '?boolean',
      enableB2bmaCampaignInfluence2: '?boolean',
      enableCampaignHistoryTrackEnabled: '?boolean',
      enableCampaignInfluence2: '?boolean',
      enableCampaignMemberTWCF: '?boolean',
      enableSuppressNoValueCI2: '?boolean'
    },
    extends: 'Metadata'
  },
  CanvasMetadata: {
    type: 'CanvasMetadata',
    props: {
      accessMethod: 'string',
      canvasOptions: '?string',
      canvasUrl: 'string',
      lifecycleClass: '?string',
      locationOptions: '?string',
      samlInitiationMethod: '?string'
    },
    extends: 'Metadata'
  },
  CaseClassificationSettings: {
    type: 'CaseClassificationSettings',
    props: {
      caseClassificationRecommendations: '?boolean',
      reRunAttributeBasedRules: '?boolean',
      runAssignmentRules: '?boolean'
    },
    extends: 'Metadata'
  },
  CaseSettings: {
    type: 'CaseSettings',
    props: {
      caseAssignNotificationTemplate: '?string',
      caseAutoProcUser: '?boolean',
      caseCloseNotificationTemplate: '?string',
      caseCommentNotificationTemplate: '?string',
      caseCreateNotificationTemplate: '?string',
      caseFeedItemSettings: ['FeedItemSettings'],
      caseFeedReadUnreadLtng: '?boolean',
      caseMergeInLightning: '?boolean',
      closeCaseThroughStatusChange: '?boolean',
      defaultCaseFeedLayoutOn: '?boolean',
      defaultCaseOwner: '?string',
      defaultCaseOwnerType: '?string',
      defaultCaseUser: '?string',
      emailActionDefaultsHandlerClass: '?string',
      emailToCase: '?EmailToCaseSettings',
      enableCaseFeed: '?boolean',
      enableCollapseEmailThread: '?boolean',
      enableDraftEmails: '?boolean',
      enableEarlyEscalationRuleTriggers: '?boolean',
      enableEmailActionDefaultsHandler: '?boolean',
      enableSuggestedArticlesApplication: '?boolean',
      enableSuggestedArticlesCustomerPortal: '?boolean',
      enableSuggestedArticlesPartnerPortal: '?boolean',
      enableSuggestedSolutions: '?boolean',
      escalateCaseBefore: '?boolean',
      genericMessageEnabled: '?boolean',
      keepRecordTypeOnAssignmentRule: '?boolean',
      notifyContactOnCaseComment: '?boolean',
      notifyDefaultCaseOwner: '?boolean',
      notifyOwnerOnCaseComment: '?boolean',
      notifyOwnerOnCaseOwnerChange: '?boolean',
      predictiveSupportEnabled: '?boolean',
      showEmailAttachmentsInCaseAttachmentsRL: '?boolean',
      showFewerCloseActions: '?boolean',
      systemUserEmail: '?string',
      useSystemEmailAddress: '?boolean',
      useSystemUserAsDefaultCaseUser: '?boolean',
      webToCase: '?WebToCaseSettings'
    },
    extends: 'Metadata'
  },
  FeedItemSettings: {
    type: 'FeedItemSettings',
    props: {
      characterLimit: '?number',
      displayFormat: '?string',
      feedItemType: 'string'
    }
  },
  EmailToCaseSettings: {
    type: 'EmailToCaseSettings',
    props: {
      enableE2CAttachmentAsFile: '?boolean',
      enableE2CSourceTracking: '?boolean',
      enableEmailToCase: '?boolean',
      enableHtmlEmail: '?boolean',
      enableOnDemandEmailToCase: '?boolean',
      enableThreadIDInBody: '?boolean',
      enableThreadIDInSubject: '?boolean',
      notifyOwnerOnNewCaseEmail: '?boolean',
      overEmailLimitAction: '?string',
      preQuoteSignature: '?boolean',
      routingAddresses: ['EmailToCaseRoutingAddress'],
      unauthorizedSenderAction: '?string'
    }
  },
  EmailToCaseRoutingAddress: {
    type: 'EmailToCaseRoutingAddress',
    props: {
      addressType: '?string',
      authorizedSenders: '?string',
      caseOrigin: '?string',
      caseOwner: '?string',
      caseOwnerType: '?string',
      casePriority: '?string',
      createTask: '?boolean',
      emailAddress: '?string',
      emailServicesAddress: '?string',
      isVerified: '?boolean',
      routingName: '?string',
      saveEmailHeaders: '?boolean',
      taskStatus: '?string'
    }
  },
  WebToCaseSettings: {
    type: 'WebToCaseSettings',
    props: {
      caseOrigin: '?string',
      defaultResponseTemplate: '?string',
      enableWebToCase: '?boolean'
    }
  },
  CaseSubjectParticle: {
    type: 'CaseSubjectParticle',
    props: {
      index: 'number',
      textField: '?string',
      type: 'string'
    },
    extends: 'Metadata'
  },
  ChannelLayout: {
    type: 'ChannelLayout',
    props: {
      enabledChannels: ['string'],
      label: 'string',
      layoutItems: ['ChannelLayoutItem'],
      recordType: '?string'
    },
    extends: 'Metadata'
  },
  ChannelLayoutItem: {
    type: 'ChannelLayoutItem',
    props: {
      field: 'string'
    }
  },
  ChatterAnswersSettings: {
    type: 'ChatterAnswersSettings',
    props: {
      emailFollowersOnBestAnswer: '?boolean',
      emailFollowersOnReply: '?boolean',
      emailOwnerOnPrivateReply: '?boolean',
      emailOwnerOnReply: '?boolean',
      enableAnswerViaEmail: '?boolean',
      enableChatterAnswers: 'boolean',
      enableFacebookSSO: '?boolean',
      enableInlinePublisher: '?boolean',
      enableReputation: '?boolean',
      enableRichTextEditor: '?boolean',
      facebookAuthProvider: '?string',
      showInPortals: '?boolean'
    },
    extends: 'Metadata'
  },
  ChatterEmailsMDSettings: {
    type: 'ChatterEmailsMDSettings',
    props: {
      enableChatterDigestEmailsApiOnly: '?boolean',
      enableChatterEmailAttachment: '?boolean',
      enableCollaborationEmail: '?boolean',
      enableDisplayAppDownloadBadges: '?boolean',
      enableEmailReplyToChatter: '?boolean',
      enableEmailToChatter: '?boolean'
    },
    extends: 'Metadata'
  },
  ChatterExtension: {
    type: 'ChatterExtension',
    props: {
      compositionComponent: 'string',
      description: 'string',
      extensionName: 'string',
      headerText: '?string',
      hoverText: '?string',
      icon: 'string',
      isProtected: '?boolean',
      masterLabel: 'string',
      renderComponent: 'string',
      type: 'string'
    },
    extends: 'Metadata'
  },
  ChatterSettings: {
    type: 'ChatterSettings',
    props: {
      allowChatterGroupArchiving: '?boolean',
      allowRecordsInChatterGroup: '?boolean',
      allowSharingInChatterGroup: '?boolean',
      enableApprovalRequest: '?boolean',
      enableChatter: '?boolean',
      enableChatterEmoticons: '?boolean',
      enableFeedEdit: '?boolean',
      enableFeedPinning: '?boolean',
      enableFeedsDraftPosts: '?boolean',
      enableFeedsRichText: '?boolean',
      enableInviteCsnUsers: '?boolean',
      enableOutOfOfficeEnabledPref: '?boolean',
      enableRichLinkPreviewsInFeed: '?boolean',
      enableTodayRecsInFeed: '?boolean',
      unlistedGroupsEnabled: '?boolean'
    },
    extends: 'Metadata'
  },
  CleanDataService: {
    type: 'CleanDataService',
    props: {
      cleanRules: ['CleanRule'],
      description: 'string',
      masterLabel: 'string',
      matchEngine: 'string'
    },
    extends: 'Metadata'
  },
  CleanRule: {
    type: 'CleanRule',
    props: {
      bulkEnabled: 'boolean',
      bypassTriggers: 'boolean',
      bypassWorkflow: 'boolean',
      description: 'string',
      developerName: 'string',
      fieldMappings: ['FieldMapping'],
      masterLabel: 'string',
      matchRule: 'string',
      sourceSobjectType: 'string',
      status: 'string',
      targetSobjectType: 'string'
    }
  },
  FieldMapping: {
    type: 'FieldMapping',
    props: {
      SObjectType: 'string',
      developerName: 'string',
      fieldMappingRows: ['FieldMappingRow'],
      masterLabel: 'string'
    }
  },
  FieldMappingRow: {
    type: 'FieldMappingRow',
    props: {
      SObjectType: 'string',
      fieldMappingFields: ['FieldMappingField'],
      fieldName: 'string',
      mappingOperation: 'string'
    }
  },
  FieldMappingField: {
    type: 'FieldMappingField',
    props: {
      dataServiceField: 'string',
      dataServiceObjectName: 'string',
      priority: 'number'
    }
  },
  CommandAction: {
    type: 'CommandAction',
    props: {
      actionType: 'string',
      description: '?string',
      intents: ['CommandActionIntent'],
      label: 'string',
      parameters: ['CommandActionParam'],
      responseTemplates: ['CommandActionResponse'],
      target: '?string'
    },
    extends: 'Metadata'
  },
  CommandActionIntent: {
    type: 'CommandActionIntent',
    props: {
      phrase: 'string',
      responseTemplates: ['CommandActionResponse']
    }
  },
  CommandActionResponse: {
    type: 'CommandActionResponse',
    props: {
      template: 'string'
    }
  },
  CommandActionParam: {
    type: 'CommandActionParam',
    props: {
      defaultValue: '?string',
      description: '?string',
      name: 'string',
      required: '?boolean',
      type: 'string'
    }
  },
  CommunitiesSettings: {
    type: 'CommunitiesSettings',
    props: {
      canModerateAllFeedPosts: '?boolean',
      canModerateInternalFeedPosts: '?boolean',
      embeddedVisualforcePages: '?boolean',
      enableCommunityWorkspaces: '?boolean',
      enableCspContactVisibilityPref: '?boolean',
      enableCspNotesOnAccConPref: '?boolean',
      enableEnablePRM: '?boolean',
      enableExternalAccHierPref: '?boolean',
      enableGuestRecordReassignOrgPref: '?boolean',
      enableInviteChatterGuestEnabled: '?boolean',
      enableNetPortalUserReportOpts: '?boolean',
      enableNetworksEnabled: '?boolean',
      enableOotbProfExtUserOpsEnable: '?boolean',
      enablePRMAccRelPref: '?boolean',
      enablePowerCustomerCaseStatus: '?boolean',
      enableRelaxPartnerAccountFieldPref: '?boolean',
      enableUsernameUniqForOrgPref: '?boolean'
    },
    extends: 'Metadata'
  },
  Community: {
    type: 'Community',
    props: {
      active: '?boolean',
      chatterAnswersFacebookSsoUrl: '?string',
      communityFeedPage: '?string',
      dataCategoryName: '?string',
      description: '?string',
      emailFooterDocument: '?string',
      emailHeaderDocument: '?string',
      emailNotificationUrl: '?string',
      enableChatterAnswers: '?boolean',
      enablePrivateQuestions: '?boolean',
      expertsGroup: '?string',
      portal: '?string',
      reputationLevels: '?ReputationLevels',
      showInPortal: '?boolean',
      site: '?string'
    },
    extends: 'Metadata'
  },
  ReputationLevels: {
    type: 'ReputationLevels',
    props: {
      chatterAnswersReputationLevels: ['ChatterAnswersReputationLevel'],
      ideaReputationLevels: ['IdeaReputationLevel']
    }
  },
  ChatterAnswersReputationLevel: {
    type: 'ChatterAnswersReputationLevel',
    props: {
      name: 'string',
      value: 'number'
    }
  },
  IdeaReputationLevel: {
    type: 'IdeaReputationLevel',
    props: {
      name: 'string',
      value: 'number'
    }
  },
  CommunityTemplateDefinition: {
    type: 'CommunityTemplateDefinition',
    props: {
      baseTemplate: '?string',
      bundlesInfo: ['CommunityTemplateBundleInfo'],
      category: 'string',
      defaultBrandingSet: '?string',
      defaultThemeDefinition: 'string',
      description: '?string',
      enableExtendedCleanUpOnDelete: '?boolean',
      masterLabel: 'string',
      navigationLinkSet: ['NavigationLinkSet'],
      pageSetting: ['CommunityTemplatePageSetting'],
      publisher: '?string'
    },
    extends: 'Metadata'
  },
  CommunityTemplateBundleInfo: {
    type: 'CommunityTemplateBundleInfo',
    props: {
      description: '?string',
      image: '?string',
      order: 'number',
      title: 'string',
      type: 'string'
    }
  },
  CommunityThemeBundleInfo: {
    type: 'CommunityThemeBundleInfo',
    props: {},
    extends: 'CommunityTemplateBundleInfo'
  },
  NavigationLinkSet: {
    type: 'NavigationLinkSet',
    props: {
      navigationMenuItem: ['NavigationMenuItem']
    }
  },
  NavigationMenuItem: {
    type: 'NavigationMenuItem',
    props: {
      defaultListViewId: '?string',
      label: 'string',
      menuItemBranding: '?NavigationMenuItemBranding',
      position: 'number',
      publiclyAvailable: '?boolean',
      subMenu: '?NavigationSubMenu',
      target: '?string',
      targetPreference: '?string',
      type: 'string'
    }
  },
  NavigationMenuItemBranding: {
    type: 'NavigationMenuItemBranding',
    props: {
      tileImage: '?string'
    }
  },
  NavigationSubMenu: {
    type: 'NavigationSubMenu',
    props: {
      navigationMenuItem: ['NavigationMenuItem']
    }
  },
  CommunityTemplatePageSetting: {
    type: 'CommunityTemplatePageSetting',
    props: {
      page: 'string',
      themeLayout: 'string'
    }
  },
  CommunityThemeDefinition: {
    type: 'CommunityThemeDefinition',
    props: {
      bundlesInfo: ['CommunityThemeBundleInfo'],
      customThemeLayoutType: ['CommunityCustomThemeLayoutType'],
      defaultBrandingSet: '?string',
      description: '?string',
      enableExtendedCleanUpOnDelete: '?boolean',
      masterLabel: 'string',
      publisher: '?string',
      themeRouteOverride: ['CommunityThemeRouteOverride'],
      themeSetting: ['CommunityThemeSetting']
    },
    extends: 'Metadata'
  },
  CommunityCustomThemeLayoutType: {
    type: 'CommunityCustomThemeLayoutType',
    props: {
      description: '?string',
      label: 'string'
    }
  },
  CommunityThemeRouteOverride: {
    type: 'CommunityThemeRouteOverride',
    props: {
      customThemeLayoutType: '?string',
      pageAttributes: 'string',
      pageType: 'string',
      themeLayoutType: '?string'
    }
  },
  CommunityThemeSetting: {
    type: 'CommunityThemeSetting',
    props: {
      customThemeLayoutType: '?string',
      themeLayout: 'string',
      themeLayoutType: '?string'
    }
  },
  CompactLayout: {
    type: 'CompactLayout',
    props: {
      fields: ['string'],
      label: 'string'
    },
    extends: 'Metadata'
  },
  CompanySettings: {
    type: 'CompanySettings',
    props: {
      enableCustomFiscalYear: 'boolean',
      fiscalYear: '?FiscalYearSettings'
    },
    extends: 'Metadata'
  },
  FiscalYearSettings: {
    type: 'FiscalYearSettings',
    props: {
      fiscalYearNameBasedOn: '?string',
      startMonth: '?string'
    }
  },
  ConnectedApp: {
    type: 'ConnectedApp',
    props: {
      attributes: ['ConnectedAppAttribute'],
      canvas: '?CanvasMetadata',
      canvasConfig: '?ConnectedAppCanvasConfig',
      contactEmail: 'string',
      contactPhone: '?string',
      description: '?string',
      iconUrl: '?string',
      infoUrl: '?string',
      ipRanges: ['ConnectedAppIpRange'],
      label: 'string',
      logoUrl: '?string',
      mobileAppConfig: '?ConnectedAppMobileDetailConfig',
      mobileStartUrl: '?string',
      oauthConfig: '?ConnectedAppOauthConfig',
      permissionSetName: ['string'],
      plugin: '?string',
      pluginExecutionUser: '?string',
      profileName: ['string'],
      samlConfig: '?ConnectedAppSamlConfig',
      startUrl: '?string'
    },
    extends: 'Metadata'
  },
  ConnectedAppAttribute: {
    type: 'ConnectedAppAttribute',
    props: {
      formula: 'string',
      key: 'string'
    }
  },
  ConnectedAppCanvasConfig: {
    type: 'ConnectedAppCanvasConfig',
    props: {
      accessMethod: 'string',
      canvasUrl: 'string',
      lifecycleClass: '?string',
      locations: ['string'],
      options: ['string'],
      samlInitiationMethod: '?string'
    }
  },
  ConnectedAppIpRange: {
    type: 'ConnectedAppIpRange',
    props: {
      description: '?string',
      end: 'string',
      start: 'string'
    }
  },
  ConnectedAppMobileDetailConfig: {
    type: 'ConnectedAppMobileDetailConfig',
    props: {
      applicationBinaryFile: '?string',
      applicationBinaryFileName: '?string',
      applicationBundleIdentifier: '?string',
      applicationFileLength: '?number',
      applicationIconFile: '?string',
      applicationIconFileName: '?string',
      applicationInstallUrl: '?string',
      devicePlatform: 'string',
      deviceType: '?string',
      minimumOsVersion: '?string',
      privateApp: '?boolean',
      version: 'string'
    }
  },
  ConnectedAppOauthConfig: {
    type: 'ConnectedAppOauthConfig',
    props: {
      callbackUrl: 'string',
      certificate: '?string',
      consumerKey: '?string',
      consumerSecret: '?string',
      idTokenConfig: '?ConnectedAppOauthIdToken',
      isAdminApproved: '?boolean',
      scopes: ['string'],
      singleLogoutUrl: '?string'
    }
  },
  ConnectedAppOauthIdToken: {
    type: 'ConnectedAppOauthIdToken',
    props: {
      idTokenAudience: '?string',
      idTokenIncludeAttributes: '?boolean',
      idTokenIncludeCustomPerms: '?boolean',
      idTokenIncludeStandardClaims: '?boolean',
      idTokenValidity: '?number'
    }
  },
  ConnectedAppSamlConfig: {
    type: 'ConnectedAppSamlConfig',
    props: {
      acsUrl: 'string',
      certificate: '?string',
      encryptionCertificate: '?string',
      encryptionType: '?string',
      entityUrl: 'string',
      issuer: '?string',
      samlIdpSLOBindingEnum: '?string',
      samlNameIdFormat: '?string',
      samlSloUrl: '?string',
      samlSubjectCustomAttr: '?string',
      samlSubjectType: 'string'
    }
  },
  ConnectedAppSettings: {
    type: 'ConnectedAppSettings',
    props: {
      enableAdminApprovedAppsOnly: '?boolean',
      enableSkipUserProvisioningWizardWelcomePage: '?boolean'
    },
    extends: 'Metadata'
  },
  ContentSettings: {
    type: 'ContentSettings',
    props: {
      enableChatterFileLink: '?boolean',
      enableContent: '?boolean',
      enableContentAutoAssign: '?boolean',
      enableContentDistForPortalUsers: '?boolean',
      enableContentDistPwOptionsBit1: '?boolean',
      enableContentDistPwOptionsBit2: '?boolean',
      enableContentDistribution: '?boolean',
      enableContentSupportMultiLanguage: '?boolean',
      enableContentWorkspaceAccess: '?boolean',
      enableFileShareSetByRecord: '?boolean',
      enableFilesUsrShareNetRestricted: '?boolean',
      enableJPGPreviews: '?boolean',
      enableLibraryManagedFiles: '?boolean',
      enableSiteGuestUserToUploadFiles: '?boolean',
      enableUploadFilesOnAttachments: '?boolean',
      skipContentAssetTriggers: '?boolean',
      skipContentAssetTriggersOnDeploy: '?boolean'
    },
    extends: 'Metadata'
  },
  ContractSettings: {
    type: 'ContractSettings',
    props: {
      autoCalculateEndDate: '?boolean',
      autoExpirationDelay: '?string',
      autoExpirationRecipient: '?string',
      autoExpireContracts: '?boolean',
      enableContractHistoryTracking: '?boolean',
      notifyOwnersOnContractExpiration: '?boolean'
    },
    extends: 'Metadata'
  },
  CorsWhitelistOrigin: {
    type: 'CorsWhitelistOrigin',
    props: {
      urlPattern: 'string'
    },
    extends: 'Metadata'
  },
  CspTrustedSite: {
    type: 'CspTrustedSite',
    props: {
      context: '?string',
      description: '?string',
      endpointUrl: 'string',
      isActive: 'boolean'
    },
    extends: 'Metadata'
  },
  CurrencySettings: {
    type: 'CurrencySettings',
    props: {
      enableCurrencyEffectiveDates: '?boolean',
      enableCurrencySymbolWithMultiCurrency: '?boolean',
      enableMultiCurrency: '?boolean',
      isMultiCurrencyActivationAllowed: '?boolean',
      isParenCurrencyConvDisabled: '?boolean'
    },
    extends: 'Metadata'
  },
  CustomApplication: {
    type: 'CustomApplication',
    props: {
      actionOverrides: ['AppActionOverride'],
      brand: '?AppBrand',
      consoleConfig: '?ServiceCloudConsoleConfig',
      defaultLandingTab: '?string',
      description: '?string',
      formFactors: ['string'],
      isNavAutoTempTabsDisabled: '?boolean',
      isNavPersonalizationDisabled: '?boolean',
      isServiceCloudConsole: '?boolean',
      label: '?string',
      logo: '?string',
      navType: '?string',
      preferences: '?AppPreferences',
      profileActionOverrides: ['AppProfileActionOverride'],
      setupExperience: '?string',
      subscriberTabs: ['string'],
      tabs: ['string'],
      uiType: '?string',
      utilityBar: '?string',
      workspaceConfig: '?AppWorkspaceConfig'
    },
    extends: 'Metadata'
  },
  AppActionOverride: {
    type: 'AppActionOverride',
    props: {
      pageOrSobjectType: 'string'
    },
    extends: 'ActionOverride'
  },
  ActionOverride: {
    type: 'ActionOverride',
    props: {
      actionName: '?string',
      comment: '?string',
      content: '?string',
      formFactor: '?string',
      skipRecordTypeSelect: '?boolean',
      type: '?string'
    }
  },
  AppBrand: {
    type: 'AppBrand',
    props: {
      footerColor: '?string',
      headerColor: '?string',
      logo: '?string',
      logoVersion: '?number',
      shouldOverrideOrgTheme: '?boolean'
    }
  },
  ServiceCloudConsoleConfig: {
    type: 'ServiceCloudConsoleConfig',
    props: {
      componentList: '?AppComponentList',
      detailPageRefreshMethod: 'string',
      footerColor: '?string',
      headerColor: '?string',
      keyboardShortcuts: 'KeyboardShortcuts',
      listPlacement: 'ListPlacement',
      listRefreshMethod: 'string',
      liveAgentConfig: '?LiveAgentConfig',
      primaryTabColor: '?string',
      pushNotifications: ['PushNotification'],
      tabLimitConfig: '?TabLimitConfig',
      whitelistedDomains: ['string']
    }
  },
  AppComponentList: {
    type: 'AppComponentList',
    props: {
      alignment: 'string',
      components: ['string']
    }
  },
  KeyboardShortcuts: {
    type: 'KeyboardShortcuts',
    props: {
      customShortcuts: ['CustomShortcut'],
      defaultShortcuts: ['DefaultShortcut']
    }
  },
  CustomShortcut: {
    type: 'CustomShortcut',
    props: {
      description: '?string',
      eventName: 'string'
    },
    extends: 'DefaultShortcut'
  },
  DefaultShortcut: {
    type: 'DefaultShortcut',
    props: {
      action: 'string',
      active: 'boolean',
      keyCommand: 'string'
    }
  },
  ListPlacement: {
    type: 'ListPlacement',
    props: {
      height: '?number',
      location: 'string',
      units: '?string',
      width: '?number'
    }
  },
  LiveAgentConfig: {
    type: 'LiveAgentConfig',
    props: {
      enableLiveChat: '?boolean',
      openNewAccountSubtab: '?boolean',
      openNewCaseSubtab: '?boolean',
      openNewContactSubtab: '?boolean',
      openNewLeadSubtab: '?boolean',
      openNewVFPageSubtab: '?boolean',
      pageNamesToOpen: ['string'],
      showKnowledgeArticles: '?boolean'
    }
  },
  PushNotification: {
    type: 'PushNotification',
    props: {
      fieldNames: ['string'],
      objectName: 'string'
    }
  },
  TabLimitConfig: {
    type: 'TabLimitConfig',
    props: {
      maxNumberOfPrimaryTabs: '?string',
      maxNumberOfSubTabs: '?string'
    }
  },
  AppPreferences: {
    type: 'AppPreferences',
    props: {
      enableCustomizeMyTabs: 'boolean',
      enableKeyboardShortcuts: 'boolean',
      enableListViewHover: 'boolean',
      enableListViewReskin: 'boolean',
      enableMultiMonitorComponents: 'boolean',
      enablePinTabs: 'boolean',
      enableTabHover: 'boolean',
      enableTabLimits: 'boolean',
      saveUserSessions: 'boolean'
    }
  },
  AppProfileActionOverride: {
    type: 'AppProfileActionOverride',
    props: {
      profile: 'string'
    },
    extends: 'ProfileActionOverride'
  },
  ProfileActionOverride: {
    type: 'ProfileActionOverride',
    props: {
      actionName: 'string',
      content: '?string',
      formFactor: 'string',
      pageOrSobjectType: 'string',
      recordType: '?string',
      type: 'string'
    }
  },
  AppWorkspaceConfig: {
    type: 'AppWorkspaceConfig',
    props: {
      mappings: ['WorkspaceMapping']
    }
  },
  WorkspaceMapping: {
    type: 'WorkspaceMapping',
    props: {
      fieldName: '?string',
      tab: 'string'
    }
  },
  CustomApplicationComponent: {
    type: 'CustomApplicationComponent',
    props: {
      buttonIconUrl: '?string',
      buttonStyle: '?string',
      buttonText: '?string',
      buttonWidth: '?number',
      height: '?number',
      isHeightFixed: 'boolean',
      isHidden: 'boolean',
      isWidthFixed: 'boolean',
      visualforcePage: 'string',
      width: '?number'
    },
    extends: 'Metadata'
  },
  CustomFeedFilter: {
    type: 'CustomFeedFilter',
    props: {
      criteria: ['FeedFilterCriterion'],
      description: '?string',
      isProtected: '?boolean',
      label: 'string'
    },
    extends: 'Metadata'
  },
  FeedFilterCriterion: {
    type: 'FeedFilterCriterion',
    props: {
      feedItemType: 'string',
      feedItemVisibility: '?string',
      relatedSObjectType: '?string'
    }
  },
  CustomField: {
    type: 'CustomField',
    props: {
      businessOwnerGroup: '?string',
      businessOwnerUser: '?string',
      businessStatus: '?string',
      caseSensitive: '?boolean',
      complianceGroup: '?string',
      customDataType: '?string',
      defaultValue: '?string',
      deleteConstraint: '?string',
      deprecated: '?boolean',
      description: '?string',
      displayFormat: '?string',
      encryptionScheme: '?string',
      escapeMarkup: '?boolean',
      externalDeveloperName: '?string',
      externalId: '?boolean',
      fieldManageability: '?string',
      formula: '?string',
      formulaTreatBlanksAs: '?string',
      inlineHelpText: '?string',
      isAIPredictionField: '?boolean',
      isConvertLeadDisabled: '?boolean',
      isFilteringDisabled: '?boolean',
      isNameField: '?boolean',
      isSortingDisabled: '?boolean',
      label: '?string',
      length: '?number',
      lookupFilter: '?LookupFilter',
      maskChar: '?string',
      maskType: '?string',
      metadataRelationshipControllingField: '?string',
      populateExistingRows: '?boolean',
      precision: '?number',
      referenceTargetField: '?string',
      referenceTo: '?string',
      relationshipLabel: '?string',
      relationshipName: '?string',
      relationshipOrder: '?number',
      reparentableMasterDetail: '?boolean',
      required: '?boolean',
      restrictedAdminField: '?boolean',
      scale: '?number',
      securityClassification: '?string',
      startingNumber: '?number',
      stripMarkup: '?boolean',
      summarizedField: '?string',
      summaryFilterItems: ['FilterItem'],
      summaryForeignKey: '?string',
      summaryOperation: '?string',
      trackFeedHistory: '?boolean',
      trackHistory: '?boolean',
      trackTrending: '?boolean',
      translateData: '?boolean',
      type: '?string',
      unique: '?boolean',
      valueSet: '?ValueSet',
      visibleLines: '?number',
      writeRequiresMasterRead: '?boolean'
    },
    extends: 'Metadata'
  },
  LookupFilter: {
    type: 'LookupFilter',
    props: {
      active: 'boolean',
      booleanFilter: '?string',
      description: '?string',
      errorMessage: '?string',
      filterItems: ['FilterItem'],
      infoMessage: '?string',
      isOptional: 'boolean'
    }
  },
  ValueSet: {
    type: 'ValueSet',
    props: {
      controllingField: '?string',
      restricted: '?boolean',
      valueSetDefinition: '?ValueSetValuesDefinition',
      valueSetName: '?string',
      valueSettings: ['ValueSettings']
    }
  },
  ValueSetValuesDefinition: {
    type: 'ValueSetValuesDefinition',
    props: {
      sorted: 'boolean',
      value: ['CustomValue']
    }
  },
  CustomValue: {
    type: 'CustomValue',
    props: {
      color: '?string',
      default: 'boolean',
      description: '?string',
      isActive: '?boolean',
      label: '?string'
    },
    extends: 'Metadata'
  },
  StandardValue: {
    type: 'StandardValue',
    props: {
      allowEmail: '?boolean',
      closed: '?boolean',
      converted: '?boolean',
      cssExposed: '?boolean',
      forecastCategory: '?string',
      groupingString: '?string',
      highPriority: '?boolean',
      probability: '?number',
      reverseRole: '?string',
      reviewed: '?boolean',
      won: '?boolean'
    },
    extends: 'CustomValue'
  },
  ValueSettings: {
    type: 'ValueSettings',
    props: {
      controllingFieldValue: ['string'],
      valueName: 'string'
    }
  },
  CustomHelpMenuSection: {
    type: 'CustomHelpMenuSection',
    props: {
      customHelpMenuItems: ['CustomHelpMenuItem'],
      masterLabel: 'string'
    },
    extends: 'Metadata'
  },
  CustomHelpMenuItem: {
    type: 'CustomHelpMenuItem',
    props: {
      linkUrl: 'string',
      masterLabel: 'string',
      sortOrder: 'number'
    }
  },
  CustomLabel: {
    type: 'CustomLabel',
    props: {
      categories: '?string',
      language: 'string',
      protected: 'boolean',
      shortDescription: 'string',
      value: 'string'
    },
    extends: 'Metadata'
  },
  CustomLabels: {
    type: 'CustomLabels',
    props: {
      labels: ['CustomLabel']
    },
    extends: 'Metadata'
  },
  CustomMetadata: {
    type: 'CustomMetadata',
    props: {
      description: '?string',
      label: '?string',
      protected: '?boolean',
      values: ['CustomMetadataValue']
    },
    extends: 'Metadata'
  },
  CustomMetadataValue: {
    type: 'CustomMetadataValue',
    props: {
      field: 'string',
      value: '?any'
    }
  },
  CustomNotificationType: {
    type: 'CustomNotificationType',
    props: {
      customNotifTypeName: 'string',
      description: '?string',
      desktop: 'boolean',
      masterLabel: 'string',
      mobile: 'boolean'
    },
    extends: 'Metadata'
  },
  CustomObject: {
    type: 'CustomObject',
    props: {
      actionOverrides: ['ActionOverride'],
      allowInChatterGroups: '?boolean',
      articleTypeChannelDisplay: '?ArticleTypeChannelDisplay',
      businessProcesses: ['BusinessProcess'],
      compactLayoutAssignment: '?string',
      compactLayouts: ['CompactLayout'],
      customHelp: '?string',
      customHelpPage: '?string',
      customSettingsType: '?string',
      deploymentStatus: '?string',
      deprecated: '?boolean',
      description: '?string',
      enableActivities: '?boolean',
      enableBulkApi: '?boolean',
      enableDataTranslation: '?boolean',
      enableDivisions: '?boolean',
      enableEnhancedLookup: '?boolean',
      enableFeeds: '?boolean',
      enableHistory: '?boolean',
      enableLicensing: '?boolean',
      enableReports: '?boolean',
      enableSearch: '?boolean',
      enableSharing: '?boolean',
      enableStreamingApi: '?boolean',
      eventType: '?string',
      externalDataSource: '?string',
      externalName: '?string',
      externalRepository: '?string',
      externalSharingModel: '?string',
      fieldSets: ['FieldSet'],
      fields: ['CustomField'],
      gender: '?string',
      historyRetentionPolicy: '?HistoryRetentionPolicy',
      household: '?boolean',
      indexes: ['Index'],
      label: '?string',
      listViews: ['ListView'],
      nameField: '?CustomField',
      pluralLabel: '?string',
      profileSearchLayouts: ['ProfileSearchLayouts'],
      publishBehavior: '?string',
      recordTypeTrackFeedHistory: '?boolean',
      recordTypeTrackHistory: '?boolean',
      recordTypes: ['RecordType'],
      searchLayouts: '?SearchLayouts',
      sharingModel: '?string',
      sharingReasons: ['SharingReason'],
      sharingRecalculations: ['SharingRecalculation'],
      startsWith: '?string',
      validationRules: ['ValidationRule'],
      visibility: '?string',
      webLinks: ['WebLink']
    },
    extends: 'Metadata'
  },
  ArticleTypeChannelDisplay: {
    type: 'ArticleTypeChannelDisplay',
    props: {
      articleTypeTemplates: ['ArticleTypeTemplate']
    }
  },
  ArticleTypeTemplate: {
    type: 'ArticleTypeTemplate',
    props: {
      channel: 'string',
      page: '?string',
      template: 'string'
    }
  },
  FieldSet: {
    type: 'FieldSet',
    props: {
      availableFields: ['FieldSetItem'],
      description: 'string',
      displayedFields: ['FieldSetItem'],
      label: 'string'
    },
    extends: 'Metadata'
  },
  FieldSetItem: {
    type: 'FieldSetItem',
    props: {
      field: '?string',
      isFieldManaged: '?boolean',
      isRequired: '?boolean'
    }
  },
  HistoryRetentionPolicy: {
    type: 'HistoryRetentionPolicy',
    props: {
      archiveAfterMonths: 'number',
      archiveRetentionYears: 'number',
      description: '?string'
    }
  },
  Index: {
    type: 'Index',
    props: {
      fields: ['IndexField'],
      label: 'string'
    },
    extends: 'Metadata'
  },
  IndexField: {
    type: 'IndexField',
    props: {
      name: 'string',
      sortDirection: 'string'
    }
  },
  ListView: {
    type: 'ListView',
    props: {
      booleanFilter: '?string',
      columns: ['string'],
      division: '?string',
      filterScope: 'string',
      filters: ['ListViewFilter'],
      label: 'string',
      language: '?string',
      queue: '?string',
      sharedTo: '?SharedTo'
    },
    extends: 'Metadata'
  },
  ListViewFilter: {
    type: 'ListViewFilter',
    props: {
      field: 'string',
      operation: 'string',
      value: '?string'
    }
  },
  SharedTo: {
    type: 'SharedTo',
    props: {
      allCustomerPortalUsers: '?string',
      allInternalUsers: '?string',
      allPartnerUsers: '?string',
      channelProgramGroup: ['string'],
      channelProgramGroups: ['string'],
      group: ['string'],
      groups: ['string'],
      guestUser: ['string'],
      managerSubordinates: ['string'],
      managers: ['string'],
      portalRole: ['string'],
      portalRoleAndSubordinates: ['string'],
      queue: ['string'],
      role: ['string'],
      roleAndSubordinates: ['string'],
      roleAndSubordinatesInternal: ['string'],
      roles: ['string'],
      rolesAndSubordinates: ['string'],
      territories: ['string'],
      territoriesAndSubordinates: ['string'],
      territory: ['string'],
      territoryAndSubordinates: ['string']
    }
  },
  ProfileSearchLayouts: {
    type: 'ProfileSearchLayouts',
    props: {
      fields: ['string'],
      profileName: '?string'
    }
  },
  RecordType: {
    type: 'RecordType',
    props: {
      active: 'boolean',
      businessProcess: '?string',
      compactLayoutAssignment: '?string',
      description: '?string',
      label: 'string',
      picklistValues: ['RecordTypePicklistValue']
    },
    extends: 'Metadata'
  },
  RecordTypePicklistValue: {
    type: 'RecordTypePicklistValue',
    props: {
      picklist: 'string',
      values: ['PicklistValue']
    }
  },
  SearchLayouts: {
    type: 'SearchLayouts',
    props: {
      customTabListAdditionalFields: ['string'],
      excludedStandardButtons: ['string'],
      listViewButtons: ['string'],
      lookupDialogsAdditionalFields: ['string'],
      lookupFilterFields: ['string'],
      lookupPhoneDialogsAdditionalFields: ['string'],
      massQuickActions: ['string'],
      searchFilterFields: ['string'],
      searchResultsAdditionalFields: ['string'],
      searchResultsCustomButtons: ['string']
    }
  },
  SharingReason: {
    type: 'SharingReason',
    props: {
      label: 'string'
    },
    extends: 'Metadata'
  },
  SharingRecalculation: {
    type: 'SharingRecalculation',
    props: {
      className: 'string'
    }
  },
  ValidationRule: {
    type: 'ValidationRule',
    props: {
      active: 'boolean',
      description: '?string',
      errorConditionFormula: 'string',
      errorDisplayField: '?string',
      errorMessage: 'string'
    },
    extends: 'Metadata'
  },
  WebLink: {
    type: 'WebLink',
    props: {
      availability: 'string',
      description: '?string',
      displayType: 'string',
      encodingKey: '?string',
      hasMenubar: '?boolean',
      hasScrollbars: '?boolean',
      hasToolbar: '?boolean',
      height: '?number',
      isResizable: '?boolean',
      linkType: 'string',
      masterLabel: '?string',
      openType: 'string',
      page: '?string',
      position: '?string',
      protected: 'boolean',
      requireRowSelection: '?boolean',
      scontrol: '?string',
      showsLocation: '?boolean',
      showsStatus: '?boolean',
      url: '?string',
      width: '?number'
    },
    extends: 'Metadata'
  },
  CustomObjectTranslation: {
    type: 'CustomObjectTranslation',
    props: {
      caseValues: ['ObjectNameCaseValue'],
      fieldSets: ['FieldSetTranslation'],
      fields: ['CustomFieldTranslation'],
      gender: '?string',
      layouts: ['LayoutTranslation'],
      nameFieldLabel: '?string',
      quickActions: ['QuickActionTranslation'],
      recordTypes: ['RecordTypeTranslation'],
      sharingReasons: ['SharingReasonTranslation'],
      standardFields: ['StandardFieldTranslation'],
      startsWith: '?string',
      validationRules: ['ValidationRuleTranslation'],
      webLinks: ['WebLinkTranslation'],
      workflowTasks: ['WorkflowTaskTranslation']
    },
    extends: 'Metadata'
  },
  ObjectNameCaseValue: {
    type: 'ObjectNameCaseValue',
    props: {
      article: '?string',
      caseType: '?string',
      plural: '?boolean',
      possessive: '?string',
      value: 'string'
    }
  },
  FieldSetTranslation: {
    type: 'FieldSetTranslation',
    props: {
      label: 'string',
      name: 'string'
    }
  },
  CustomFieldTranslation: {
    type: 'CustomFieldTranslation',
    props: {
      caseValues: ['ObjectNameCaseValue'],
      gender: '?string',
      help: '?string',
      label: '?string',
      lookupFilter: '?LookupFilterTranslation',
      name: 'string',
      picklistValues: ['PicklistValueTranslation'],
      relationshipLabel: '?string',
      startsWith: '?string'
    }
  },
  LookupFilterTranslation: {
    type: 'LookupFilterTranslation',
    props: {
      errorMessage: 'string',
      informationalMessage: 'string'
    }
  },
  PicklistValueTranslation: {
    type: 'PicklistValueTranslation',
    props: {
      masterLabel: 'string',
      translation: '?string'
    }
  },
  LayoutTranslation: {
    type: 'LayoutTranslation',
    props: {
      layout: 'string',
      layoutType: '?string',
      sections: ['LayoutSectionTranslation']
    }
  },
  LayoutSectionTranslation: {
    type: 'LayoutSectionTranslation',
    props: {
      label: 'string',
      section: 'string'
    }
  },
  QuickActionTranslation: {
    type: 'QuickActionTranslation',
    props: {
      label: 'string',
      name: 'string'
    }
  },
  RecordTypeTranslation: {
    type: 'RecordTypeTranslation',
    props: {
      description: '?string',
      label: 'string',
      name: 'string'
    }
  },
  SharingReasonTranslation: {
    type: 'SharingReasonTranslation',
    props: {
      label: 'string',
      name: 'string'
    }
  },
  StandardFieldTranslation: {
    type: 'StandardFieldTranslation',
    props: {
      label: '?string',
      name: 'string'
    }
  },
  ValidationRuleTranslation: {
    type: 'ValidationRuleTranslation',
    props: {
      errorMessage: 'string',
      name: 'string'
    }
  },
  WebLinkTranslation: {
    type: 'WebLinkTranslation',
    props: {
      label: 'string',
      name: 'string'
    }
  },
  WorkflowTaskTranslation: {
    type: 'WorkflowTaskTranslation',
    props: {
      description: '?string',
      name: 'string',
      subject: '?string'
    }
  },
  CustomPageWebLink: {
    type: 'CustomPageWebLink',
    props: {
      availability: 'string',
      description: '?string',
      displayType: 'string',
      encodingKey: '?string',
      hasMenubar: '?boolean',
      hasScrollbars: '?boolean',
      hasToolbar: '?boolean',
      height: '?number',
      isResizable: '?boolean',
      linkType: 'string',
      masterLabel: '?string',
      openType: 'string',
      page: '?string',
      position: '?string',
      protected: 'boolean',
      requireRowSelection: '?boolean',
      scontrol: '?string',
      showsLocation: '?boolean',
      showsStatus: '?boolean',
      url: '?string',
      width: '?number'
    },
    extends: 'Metadata'
  },
  CustomPermission: {
    type: 'CustomPermission',
    props: {
      connectedApp: '?string',
      description: '?string',
      label: 'string',
      requiredPermission: ['CustomPermissionDependencyRequired']
    },
    extends: 'Metadata'
  },
  CustomPermissionDependencyRequired: {
    type: 'CustomPermissionDependencyRequired',
    props: {
      customPermission: 'string',
      dependency: 'boolean'
    }
  },
  CustomSite: {
    type: 'CustomSite',
    props: {
      active: 'boolean',
      allowHomePage: 'boolean',
      allowStandardAnswersPages: '?boolean',
      allowStandardIdeasPages: 'boolean',
      allowStandardLookups: 'boolean',
      allowStandardPortalPages: 'boolean',
      allowStandardSearch: 'boolean',
      analyticsTrackingCode: '?string',
      authorizationRequiredPage: '?string',
      bandwidthExceededPage: '?string',
      browserXssProtection: 'boolean',
      changePasswordPage: '?string',
      chatterAnswersForgotPasswordConfirmPage: '?string',
      chatterAnswersForgotPasswordPage: '?string',
      chatterAnswersHelpPage: '?string',
      chatterAnswersLoginPage: '?string',
      chatterAnswersRegistrationPage: '?string',
      clickjackProtectionLevel: 'string',
      contentSniffingProtection: 'boolean',
      cspUpgradeInsecureRequests: 'boolean',
      customWebAddresses: ['SiteWebAddress'],
      description: '?string',
      enableAuraRequests: '?boolean',
      favoriteIcon: '?string',
      fileNotFoundPage: '?string',
      forgotPasswordPage: '?string',
      genericErrorPage: '?string',
      guestProfile: '?string',
      inMaintenancePage: '?string',
      inactiveIndexPage: '?string',
      indexPage: 'string',
      masterLabel: 'string',
      myProfilePage: '?string',
      portal: '?string',
      referrerPolicyOriginWhenCrossOrigin: 'boolean',
      requireHttps: 'boolean',
      requireInsecurePortalAccess: 'boolean',
      robotsTxtPage: '?string',
      rootComponent: '?string',
      selfRegPage: '?string',
      serverIsDown: '?string',
      siteAdmin: '?string',
      siteRedirectMappings: ['SiteRedirectMapping'],
      siteTemplate: '?string',
      siteType: 'string',
      subdomain: '?string',
      urlPathPrefix: '?string'
    },
    extends: 'Metadata'
  },
  SiteWebAddress: {
    type: 'SiteWebAddress',
    props: {
      certificate: '?string',
      domainName: 'string',
      primary: 'boolean'
    }
  },
  SiteRedirectMapping: {
    type: 'SiteRedirectMapping',
    props: {
      action: 'string',
      isActive: '?boolean',
      source: 'string',
      target: 'string'
    }
  },
  CustomTab: {
    type: 'CustomTab',
    props: {
      actionOverrides: ['ActionOverride'],
      auraComponent: '?string',
      customObject: '?boolean',
      description: '?string',
      flexiPage: '?string',
      frameHeight: '?number',
      hasSidebar: '?boolean',
      icon: '?string',
      label: '?string',
      lwcComponent: '?string',
      motif: '?string',
      page: '?string',
      scontrol: '?string',
      splashPageLink: '?string',
      url: '?string',
      urlEncodingKey: '?string'
    },
    extends: 'Metadata'
  },
  Dashboard: {
    type: 'Dashboard',
    props: {
      backgroundEndColor: 'string',
      backgroundFadeDirection: 'string',
      backgroundStartColor: 'string',
      chartTheme: '?string',
      colorPalette: '?string',
      dashboardChartTheme: '?string',
      dashboardColorPalette: '?string',
      dashboardFilters: ['DashboardFilter'],
      dashboardGridLayout: '?DashboardGridLayout',
      dashboardResultRefreshedDate: '?string',
      dashboardResultRunningUser: '?string',
      dashboardType: '?string',
      description: '?string',
      folderName: '?string',
      isGridLayout: '?boolean',
      leftSection: '?DashboardComponentSection',
      middleSection: '?DashboardComponentSection',
      numSubscriptions: '?number',
      rightSection: '?DashboardComponentSection',
      runningUser: '?string',
      textColor: 'string',
      title: 'string',
      titleColor: 'string',
      titleSize: 'number'
    },
    extends: 'Metadata'
  },
  DashboardFilter: {
    type: 'DashboardFilter',
    props: {
      dashboardFilterOptions: ['DashboardFilterOption'],
      name: 'string'
    }
  },
  DashboardFilterOption: {
    type: 'DashboardFilterOption',
    props: {
      operator: 'string',
      values: ['string']
    }
  },
  DashboardGridLayout: {
    type: 'DashboardGridLayout',
    props: {
      dashboardGridComponents: ['DashboardGridComponent'],
      numberOfColumns: 'number',
      rowHeight: 'number'
    }
  },
  DashboardGridComponent: {
    type: 'DashboardGridComponent',
    props: {
      colSpan: 'number',
      columnIndex: 'number',
      dashboardComponent: 'DashboardComponent',
      rowIndex: 'number',
      rowSpan: 'number'
    }
  },
  DashboardComponent: {
    type: 'DashboardComponent',
    props: {
      autoselectColumnsFromReport: '?boolean',
      chartAxisRange: '?string',
      chartAxisRangeMax: '?number',
      chartAxisRangeMin: '?number',
      chartSummary: ['ChartSummary'],
      componentChartTheme: '?string',
      componentType: 'string',
      dashboardFilterColumns: ['DashboardFilterColumn'],
      dashboardTableColumn: ['DashboardTableColumn'],
      decimalPrecision: '?number',
      displayUnits: '?string',
      drillDownUrl: '?string',
      drillEnabled: '?boolean',
      drillToDetailEnabled: '?boolean',
      enableHover: '?boolean',
      expandOthers: '?boolean',
      flexComponentProperties: '?DashboardFlexTableComponentProperties',
      footer: '?string',
      gaugeMax: '?number',
      gaugeMin: '?number',
      groupingColumn: ['string'],
      groupingSortProperties: '?DashboardComponentGroupingSortProperties',
      header: '?string',
      indicatorBreakpoint1: '?number',
      indicatorBreakpoint2: '?number',
      indicatorHighColor: '?string',
      indicatorLowColor: '?string',
      indicatorMiddleColor: '?string',
      legendPosition: '?string',
      maxValuesDisplayed: '?number',
      metricLabel: '?string',
      page: '?string',
      pageHeightInPixels: '?number',
      report: '?string',
      scontrol: '?string',
      scontrolHeightInPixels: '?number',
      showPercentage: '?boolean',
      showPicturesOnCharts: '?boolean',
      showPicturesOnTables: '?boolean',
      showRange: '?boolean',
      showTotal: '?boolean',
      showValues: '?boolean',
      sortBy: '?string',
      title: '?string',
      useReportChart: '?boolean'
    }
  },
  ChartSummary: {
    type: 'ChartSummary',
    props: {
      aggregate: '?string',
      axisBinding: '?string',
      column: 'string'
    }
  },
  DashboardFilterColumn: {
    type: 'DashboardFilterColumn',
    props: {
      column: 'string'
    }
  },
  DashboardTableColumn: {
    type: 'DashboardTableColumn',
    props: {
      aggregateType: '?string',
      calculatePercent: '?boolean',
      column: 'string',
      decimalPlaces: '?number',
      showSubTotal: '?boolean',
      showTotal: '?boolean',
      sortBy: '?string'
    }
  },
  DashboardFlexTableComponentProperties: {
    type: 'DashboardFlexTableComponentProperties',
    props: {
      decimalPrecision: '?number',
      flexTableColumn: ['DashboardComponentColumn'],
      flexTableSortInfo: '?DashboardComponentSortInfo',
      hideChatterPhotos: '?boolean'
    }
  },
  DashboardComponentColumn: {
    type: 'DashboardComponentColumn',
    props: {
      breakPoint1: '?number',
      breakPoint2: '?number',
      breakPointOrder: '?number',
      highRangeColor: '?number',
      lowRangeColor: '?number',
      midRangeColor: '?number',
      reportColumn: 'string',
      showSubTotal: '?boolean',
      showTotal: '?boolean',
      type: 'string'
    }
  },
  DashboardComponentSortInfo: {
    type: 'DashboardComponentSortInfo',
    props: {
      sortColumn: '?string',
      sortOrder: '?string'
    }
  },
  DashboardComponentGroupingSortProperties: {
    type: 'DashboardComponentGroupingSortProperties',
    props: {
      groupingSorts: ['DashboardComponentGroupingSort']
    }
  },
  DashboardComponentGroupingSort: {
    type: 'DashboardComponentGroupingSort',
    props: {
      groupingLevel: 'string',
      inheritedReportGroupingSort: '?string',
      sortColumn: '?string',
      sortOrder: '?string'
    }
  },
  DashboardComponentSection: {
    type: 'DashboardComponentSection',
    props: {
      columnSize: 'string',
      components: ['DashboardComponent']
    }
  },
  DataCategoryGroup: {
    type: 'DataCategoryGroup',
    props: {
      active: 'boolean',
      dataCategory: 'DataCategory',
      description: '?string',
      label: 'string',
      objectUsage: '?ObjectUsage'
    },
    extends: 'Metadata'
  },
  DataCategory: {
    type: 'DataCategory',
    props: {
      dataCategory: ['DataCategory'],
      label: 'string',
      name: 'string'
    }
  },
  ObjectUsage: {
    type: 'ObjectUsage',
    props: {
      object: ['string']
    }
  },
  DataDotComSettings: {
    type: 'DataDotComSettings',
    props: {
      enableAccountExportButtonOff: '?boolean',
      enableAccountImportButtonOff: '?boolean',
      enableAllowDupeContactFromLead: '?boolean',
      enableAllowDupeLeadFromContact: '?boolean',
      enableCleanUpgradeRequested: '?boolean',
      enableContactExportButtonOff: '?boolean',
      enableContactImportButtonOff: '?boolean'
    },
    extends: 'Metadata'
  },
  DelegateGroup: {
    type: 'DelegateGroup',
    props: {
      customObjects: ['string'],
      groups: ['string'],
      label: 'string',
      loginAccess: 'boolean',
      permissionSets: ['string'],
      profiles: ['string'],
      roles: ['string']
    },
    extends: 'Metadata'
  },
  DeploymentSettings: {
    type: 'DeploymentSettings',
    props: {
      doesSkipAsyncApexValidation: '?boolean'
    },
    extends: 'Metadata'
  },
  DevHubSettings: {
    type: 'DevHubSettings',
    props: {
      enableShapeExportPref: '?boolean'
    },
    extends: 'Metadata'
  },
  DiscoverySettings: {
    type: 'DiscoverySettings',
    props: {
      enableEinsteinAnswersPref: '?boolean'
    },
    extends: 'Metadata'
  },
  DocumentType: {
    type: 'DocumentType',
    props: {
      description: 'string',
      isActive: 'boolean',
      masterLabel: 'string'
    },
    extends: 'Metadata'
  },
  DuplicateRule: {
    type: 'DuplicateRule',
    props: {
      actionOnInsert: 'string',
      actionOnUpdate: 'string',
      alertText: '?string',
      description: '?string',
      duplicateRuleFilter: '?DuplicateRuleFilter',
      duplicateRuleMatchRules: ['?', 'DuplicateRuleMatchRule'],
      isActive: 'boolean',
      masterLabel: 'string',
      operationsOnInsert: ['string'],
      operationsOnUpdate: ['string'],
      securityOption: 'string',
      sortOrder: 'number'
    },
    extends: 'Metadata'
  },
  DuplicateRuleFilter: {
    type: 'DuplicateRuleFilter',
    props: {
      booleanFilter: '?string',
      duplicateRuleFilterItems: ['DuplicateRuleFilterItem']
    }
  },
  DuplicateRuleMatchRule: {
    type: 'DuplicateRuleMatchRule',
    props: {
      matchRuleSObjectType: 'string',
      matchingRule: 'string',
      objectMapping: '?ObjectMapping'
    }
  },
  ObjectMapping: {
    type: 'ObjectMapping',
    props: {
      inputObject: 'string',
      mappingFields: ['ObjectMappingField'],
      outputObject: 'string'
    }
  },
  ObjectMappingField: {
    type: 'ObjectMappingField',
    props: {
      inputField: 'string',
      outputField: 'string'
    }
  },
  EACSettings: {
    type: 'EACSettings',
    props: {
      enableEACForEveryonePref: '?boolean',
      enableInboxActivitySharing: '?boolean',
      enableInsightsInTimeline: '?boolean',
      enableInsightsInTimelineEacStd: '?boolean'
    },
    extends: 'Metadata'
  },
  EmailAdministrationSettings: {
    type: 'EmailAdministrationSettings',
    props: {
      enableComplianceBcc: '?boolean',
      enableEmailConsentManagement: '?boolean',
      enableEmailSenderIdCompliance: '?boolean',
      enableEmailSpfCompliance: '?boolean',
      enableEmailToSalesforce: '?boolean',
      enableEmailWorkflowApproval: '?boolean',
      enableEnhancedEmailEnabled: '?boolean',
      enableHandleBouncedEmails: '?boolean',
      enableHtmlEmail: '?boolean',
      enableListEmailLogActivities: '?boolean',
      enableResendBouncedEmails: '?boolean',
      enableRestrictTlsToDomains: '?boolean',
      enableSendThroughGmailPref: '?boolean',
      enableSendViaExchangePref: '?boolean',
      enableSendViaGmailPref: '?boolean',
      enableSetMatchingEmailsOnBounce: '?boolean',
      enableUseOrgFootersForExtTrans: '?boolean',
      sendEmailsEvenWhenAutomationUpdatesSameRecord: '?boolean',
      sendMassEmailNotification: '?boolean',
      sendTextOnlySystemEmails: '?boolean'
    },
    extends: 'Metadata'
  },
  EmailIntegrationSettings: {
    type: 'EmailIntegrationSettings',
    props: {
      doesEmailLogAsEmailMessageInOutlook: '?boolean',
      doesGmailStayConnectedToSalesforce: '?boolean',
      enableContactAndEventSync: '?boolean',
      enableEmailTrackingInMobile: '?boolean',
      enableEngageForOutlook: '?boolean',
      enableGmailIntegration: '?boolean',
      enableOutlookIntegration: '?boolean',
      enableProductivityFeatures: '?boolean',
      enableSupplementalContactInfoInMobile: '?boolean',
      isLayoutCustomizationAllowed: '?boolean',
      shouldUseTrustedDomainsList: '?boolean'
    },
    extends: 'Metadata'
  },
  EmailServicesFunction: {
    type: 'EmailServicesFunction',
    props: {
      apexClass: 'string',
      attachmentOption: 'string',
      authenticationFailureAction: 'string',
      authorizationFailureAction: 'string',
      authorizedSenders: '?string',
      emailServicesAddresses: ['EmailServicesAddress'],
      errorRoutingAddress: '?string',
      functionInactiveAction: 'string',
      functionName: 'string',
      isActive: '?boolean',
      isAuthenticationRequired: '?boolean',
      isErrorRoutingEnabled: '?boolean',
      isTextAttachmentsAsBinary: '?boolean',
      isTlsRequired: '?boolean',
      overLimitAction: 'string'
    },
    extends: 'Metadata'
  },
  EmailServicesAddress: {
    type: 'EmailServicesAddress',
    props: {
      authorizedSenders: '?string',
      developerName: 'string',
      isActive: '?boolean',
      localPart: 'string',
      runAsUser: 'string'
    }
  },
  EmailTemplateSettings: {
    type: 'EmailTemplateSettings',
    props: {
      enableLwcEmailTemplateBuilder: '?boolean',
      enableTemplateEnhancedFolderPref: '?boolean'
    },
    extends: 'Metadata'
  },
  EmbeddedServiceBranding: {
    type: 'EmbeddedServiceBranding',
    props: {
      contrastInvertedColor: '?string',
      contrastPrimaryColor: '?string',
      embeddedServiceConfig: 'string',
      font: '?string',
      height: '?number',
      masterLabel: 'string',
      navBarColor: '?string',
      primaryColor: '?string',
      secondaryColor: '?string',
      width: '?number'
    },
    extends: 'Metadata'
  },
  EmbeddedServiceConfig: {
    type: 'EmbeddedServiceConfig',
    props: {
      areGuestUsersAllowed: '?boolean',
      authMethod: '?string',
      embeddedServiceAppointmentSettings: '?EmbeddedServiceAppointmentSettings',
      embeddedServiceCustomComponents: ['EmbeddedServiceCustomComponent'],
      embeddedServiceCustomLabels: ['EmbeddedServiceCustomLabel'],
      embeddedServiceFlowConfig: '?EmbeddedServiceFlowConfig',
      embeddedServiceFlows: ['EmbeddedServiceFlow'],
      embeddedServiceLayouts: ['EmbeddedServiceLayout'],
      masterLabel: 'string',
      shouldHideAuthDialog: '?boolean',
      site: 'string'
    },
    extends: 'Metadata'
  },
  EmbeddedServiceAppointmentSettings: {
    type: 'EmbeddedServiceAppointmentSettings',
    props: {
      appointmentConfirmImg: '?string',
      enabled: 'boolean',
      homeImg: '?string',
      logoImg: '?string',
      shouldShowExistingAppointment: '?boolean',
      shouldShowNewAppointment: '?boolean'
    }
  },
  EmbeddedServiceCustomComponent: {
    type: 'EmbeddedServiceCustomComponent',
    props: {
      componentBundleType: '?string',
      customComponent: '?string',
      customComponentType: '?string'
    }
  },
  EmbeddedServiceCustomLabel: {
    type: 'EmbeddedServiceCustomLabel',
    props: {
      customLabel: '?string',
      feature: '?string',
      labelKey: '?string'
    }
  },
  EmbeddedServiceFlowConfig: {
    type: 'EmbeddedServiceFlowConfig',
    props: {
      enabled: 'boolean'
    },
    extends: 'Metadata'
  },
  EmbeddedServiceFlow: {
    type: 'EmbeddedServiceFlow',
    props: {
      flow: 'string',
      flowType: 'string',
      isAuthenticationRequired: 'boolean'
    }
  },
  EmbeddedServiceLayout: {
    type: 'EmbeddedServiceLayout',
    props: {
      embeddedServiceLayoutRules: ['EmbeddedServiceLayoutRule'],
      layout: 'string',
      layoutType: '?string'
    }
  },
  EmbeddedServiceLayoutRule: {
    type: 'EmbeddedServiceLayoutRule',
    props: {
      appointmentStatus: 'string'
    }
  },
  EmbeddedServiceLiveAgent: {
    type: 'EmbeddedServiceLiveAgent',
    props: {
      avatarImg: '?string',
      embeddedServiceConfig: 'string',
      embeddedServiceQuickActions: ['EmbeddedServiceQuickAction'],
      enabled: 'boolean',
      fontSize: 'string',
      headerBackgroundImg: '?string',
      isOfflineCaseEnabled: '?boolean',
      isQueuePositionEnabled: '?boolean',
      liveAgentChatUrl: '?string',
      liveAgentContentUrl: '?string',
      liveChatButton: 'string',
      liveChatDeployment: 'string',
      masterLabel: 'string',
      offlineCaseBackgroundImg: '?string',
      prechatBackgroundImg: '?string',
      prechatEnabled: 'boolean',
      prechatJson: '?string',
      scenario: 'string',
      smallCompanyLogoImg: '?string',
      waitingStateBackgroundImg: '?string'
    },
    extends: 'Metadata'
  },
  EmbeddedServiceQuickAction: {
    type: 'EmbeddedServiceQuickAction',
    props: {
      embeddedServiceLiveAgent: 'string',
      order: 'number',
      quickActionDefinition: 'string',
      quickActionType: '?string'
    }
  },
  EmbeddedServiceMenuSettings: {
    type: 'EmbeddedServiceMenuSettings',
    props: {
      branding: '?string',
      embeddedServiceMenuItems: ['EmbeddedServiceMenuItem'],
      isEnabled: '?boolean',
      masterLabel: '?string',
      site: '?string'
    },
    extends: 'Metadata'
  },
  EmbeddedServiceMenuItem: {
    type: 'EmbeddedServiceMenuItem',
    props: {
      channel: '?string',
      channelType: '?string',
      displayOrder: '?number',
      phoneNumber: '?string'
    }
  },
  EncryptionKeySettings: {
    type: 'EncryptionKeySettings',
    props: {
      canOptOutOfDerivationWithBYOK: '?boolean',
      enableCacheOnlyKeys: '?boolean',
      enableReplayDetection: '?boolean'
    },
    extends: 'Metadata'
  },
  EnhancedNotesSettings: {
    type: 'EnhancedNotesSettings',
    props: {
      enableEnhancedNotes: '?boolean',
      enableTasksOnEnhancedNotes: '?boolean'
    },
    extends: 'Metadata'
  },
  EntitlementProcess: {
    type: 'EntitlementProcess',
    props: {
      SObjectType: '?string',
      active: '?boolean',
      businessHours: '?string',
      description: '?string',
      entryStartDateField: '?string',
      exitCriteriaBooleanFilter: '?string',
      exitCriteriaFilterItems: ['FilterItem'],
      exitCriteriaFormula: '?string',
      isRecordTypeApplied: '?boolean',
      isVersionDefault: '?boolean',
      milestones: ['EntitlementProcessMilestoneItem'],
      name: '?string',
      recordType: '?string',
      versionMaster: '?string',
      versionNotes: '?string',
      versionNumber: '?number'
    },
    extends: 'Metadata'
  },
  EntitlementProcessMilestoneItem: {
    type: 'EntitlementProcessMilestoneItem',
    props: {
      businessHours: '?string',
      criteriaBooleanFilter: '?string',
      milestoneCriteriaFilterItems: ['FilterItem'],
      milestoneCriteriaFormula: '?string',
      milestoneName: '?string',
      minutesCustomClass: '?string',
      minutesToComplete: '?number',
      successActions: ['WorkflowActionReference'],
      timeTriggers: ['EntitlementProcessMilestoneTimeTrigger'],
      useCriteriaStartTime: '?boolean'
    }
  },
  EntitlementProcessMilestoneTimeTrigger: {
    type: 'EntitlementProcessMilestoneTimeTrigger',
    props: {
      actions: ['WorkflowActionReference'],
      timeLength: '?number',
      workflowTimeTriggerUnit: 'string'
    }
  },
  EntitlementSettings: {
    type: 'EntitlementSettings',
    props: {
      assetLookupLimitedToActiveEntitlementsOnAccount: '?boolean',
      assetLookupLimitedToActiveEntitlementsOnContact: '?boolean',
      assetLookupLimitedToSameAccount: '?boolean',
      assetLookupLimitedToSameContact: '?boolean',
      enableEntitlementVersioning: 'boolean',
      enableEntitlements: 'boolean',
      enableMilestoneFeedItem: '?boolean',
      enableMilestoneStoppedTime: '?boolean',
      entitlementLookupLimitedToActiveStatus: '?boolean',
      entitlementLookupLimitedToSameAccount: '?boolean',
      entitlementLookupLimitedToSameAsset: '?boolean',
      entitlementLookupLimitedToSameContact: '?boolean',
      ignoreMilestoneBusinessHours: '?boolean'
    },
    extends: 'Metadata'
  },
  EntitlementTemplate: {
    type: 'EntitlementTemplate',
    props: {
      businessHours: '?string',
      casesPerEntitlement: '?number',
      entitlementProcess: '?string',
      isPerIncident: '?boolean',
      term: '?number',
      type: '?string'
    },
    extends: 'Metadata'
  },
  EntityImplements: {
    type: 'EntityImplements',
    props: {
      fieldMap: ['FieldImplements'],
      interface: '?string',
      isDefault: '?boolean'
    },
    extends: 'Metadata'
  },
  FieldImplements: {
    type: 'FieldImplements',
    props: {
      field: '?string',
      interfaceField: '?string'
    }
  },
  EscalationRule: {
    type: 'EscalationRule',
    props: {
      active: '?boolean',
      ruleEntry: ['RuleEntry']
    },
    extends: 'Metadata'
  },
  EscalationRules: {
    type: 'EscalationRules',
    props: {
      escalationRule: ['EscalationRule']
    },
    extends: 'Metadata'
  },
  EssentialsSettings: {
    type: 'EssentialsSettings',
    props: {
      emailConnectorEnabled: '?boolean',
      essentialsAppEnabled: '?boolean'
    },
    extends: 'Metadata'
  },
  EssentialsTrialOrgSettings: {
    type: 'EssentialsTrialOrgSettings',
    props: {
      enableSampleDataDeleted: '?boolean'
    },
    extends: 'Metadata'
  },
  EventSettings: {
    type: 'EventSettings',
    props: {
      enableApexLimitEvents: '?boolean',
      enableDeleteMonitoringData: '?boolean',
      enableDynamicStreamingChannel: '?boolean',
      enableEventLogWaveIntegration: '?boolean',
      enableLoginForensics: '?boolean',
      enableStreamingApi: '?boolean',
      enableTerminateOldestSession: '?boolean',
      enableTransactionSecurityPolicies: '?boolean'
    },
    extends: 'Metadata'
  },
  ExperienceBundleSettings: {
    type: 'ExperienceBundleSettings',
    props: {
      enableExperienceBundleMetadata: '?boolean'
    },
    extends: 'Metadata'
  },
  ExternalDataSource: {
    type: 'ExternalDataSource',
    props: {
      authProvider: '?string',
      certificate: '?string',
      customConfiguration: '?string',
      customHttpHeaders: ['CustomHttpHeader'],
      endpoint: '?string',
      isWritable: '?boolean',
      label: 'string',
      oauthRefreshToken: '?string',
      oauthScope: '?string',
      oauthToken: '?string',
      password: '?string',
      principalType: 'string',
      protocol: 'string',
      repository: '?string',
      type: 'string',
      username: '?string',
      version: '?string'
    },
    extends: 'Metadata'
  },
  CustomHttpHeader: {
    type: 'CustomHttpHeader',
    props: {
      description: '?string',
      headerFieldName: 'string',
      headerFieldValue: 'string',
      isActive: '?boolean'
    }
  },
  ExternalServiceRegistration: {
    type: 'ExternalServiceRegistration',
    props: {
      description: '?string',
      label: 'string',
      namedCredential: '?string',
      schema: '?string',
      schemaType: '?string',
      schemaUrl: '?string',
      status: 'string'
    },
    extends: 'Metadata'
  },
  ExternalServicesSettings: {
    type: 'ExternalServicesSettings',
    props: {
      enableEnhancedExternalServices: '?boolean'
    },
    extends: 'Metadata'
  },
  FieldServiceSettings: {
    type: 'FieldServiceSettings',
    props: {
      capacityUsageCalcClassId: '?string',
      doesAllowEditSaForCrew: '?boolean',
      doesShareSaParentWoWithAr: '?boolean',
      doesShareSaWithAr: '?boolean',
      enableWorkOrders: '?boolean',
      fieldServiceNotificationsOrgPref: '?boolean',
      fieldServiceOrgPref: '?boolean',
      isGeoCodeSyncEnabled: '?boolean',
      isLocationHistoryEnabled: '?boolean',
      serviceAppointmentsDueDateOffsetOrgValue: '?number',
      workOrderLineItemSearchFields: ['string'],
      workOrderSearchFields: ['string']
    },
    extends: 'Metadata'
  },
  FileUploadAndDownloadSecuritySettings: {
    type: 'FileUploadAndDownloadSecuritySettings',
    props: {
      dispositions: ['FileTypeDispositionAssignmentBean'],
      noHtmlUploadAsAttachment: 'boolean'
    },
    extends: 'Metadata'
  },
  FileTypeDispositionAssignmentBean: {
    type: 'FileTypeDispositionAssignmentBean',
    props: {
      behavior: 'string',
      fileType: 'string',
      securityRiskFileType: 'boolean'
    }
  },
  FilesConnectSettings: {
    type: 'FilesConnectSettings',
    props: {
      enableContentHubAllowed: '?boolean',
      enableContentHubCvtLinksAllowed: '?boolean',
      enableContentHubEOSearchLayout: '?boolean'
    },
    extends: 'Metadata'
  },
  FlexiPage: {
    type: 'FlexiPage',
    props: {
      description: '?string',
      flexiPageRegions: ['FlexiPageRegion'],
      masterLabel: 'string',
      parentFlexiPage: '?string',
      platformActionlist: '?PlatformActionList',
      quickActionList: '?QuickActionList',
      sobjectType: '?string',
      template: 'FlexiPageTemplateInstance',
      type: 'string'
    },
    extends: 'Metadata'
  },
  FlexiPageRegion: {
    type: 'FlexiPageRegion',
    props: {
      appendable: '?string',
      componentInstances: ['ComponentInstance'],
      mode: '?string',
      name: 'string',
      prependable: '?string',
      replaceable: '?string',
      type: 'string'
    }
  },
  ComponentInstance: {
    type: 'ComponentInstance',
    props: {
      componentInstanceProperties: ['ComponentInstanceProperty'],
      componentName: 'string',
      visibilityRule: '?UiFormulaRule'
    }
  },
  ComponentInstanceProperty: {
    type: 'ComponentInstanceProperty',
    props: {
      name: '?string',
      type: '?string',
      value: '?string'
    }
  },
  UiFormulaRule: {
    type: 'UiFormulaRule',
    props: {
      booleanFilter: '?string',
      criteria: ['UiFormulaCriterion']
    }
  },
  UiFormulaCriterion: {
    type: 'UiFormulaCriterion',
    props: {
      leftValue: 'string',
      operator: 'string',
      rightValue: '?string'
    }
  },
  PlatformActionList: {
    type: 'PlatformActionList',
    props: {
      actionListContext: 'string',
      platformActionListItems: ['PlatformActionListItem'],
      relatedSourceEntity: '?string'
    },
    extends: 'Metadata'
  },
  PlatformActionListItem: {
    type: 'PlatformActionListItem',
    props: {
      actionName: 'string',
      actionType: 'string',
      sortOrder: 'number',
      subtype: '?string'
    }
  },
  QuickActionList: {
    type: 'QuickActionList',
    props: {
      quickActionListItems: ['QuickActionListItem']
    }
  },
  QuickActionListItem: {
    type: 'QuickActionListItem',
    props: {
      quickActionName: 'string'
    }
  },
  FlexiPageTemplateInstance: {
    type: 'FlexiPageTemplateInstance',
    props: {
      name: 'string',
      properties: ['ComponentInstanceProperty']
    }
  },
  Flow: {
    type: 'Flow',
    props: {
      actionCalls: ['FlowActionCall'],
      apexPluginCalls: ['FlowApexPluginCall'],
      assignments: ['FlowAssignment'],
      choices: ['FlowChoice'],
      constants: ['FlowConstant'],
      decisions: ['FlowDecision'],
      description: '?string',
      dynamicChoiceSets: ['FlowDynamicChoiceSet'],
      formulas: ['FlowFormula'],
      interviewLabel: '?string',
      isAdditionalPermissionRequiredToRun: '?boolean',
      isTemplate: '?boolean',
      label: 'string',
      loops: ['FlowLoop'],
      processMetadataValues: ['FlowMetadataValue'],
      processType: '?string',
      recordCreates: ['FlowRecordCreate'],
      recordDeletes: ['FlowRecordDelete'],
      recordLookups: ['FlowRecordLookup'],
      recordUpdates: ['FlowRecordUpdate'],
      screens: ['FlowScreen'],
      stages: ['FlowStage'],
      start: '?FlowStart',
      startElementReference: '?string',
      status: '?string',
      steps: ['FlowStep'],
      subflows: ['FlowSubflow'],
      textTemplates: ['FlowTextTemplate'],
      variables: ['FlowVariable'],
      waits: ['FlowWait']
    },
    extends: 'Metadata'
  },
  FlowActionCall: {
    type: 'FlowActionCall',
    props: {
      actionName: 'string',
      actionType: 'string',
      connector: '?FlowConnector',
      faultConnector: '?FlowConnector',
      inputParameters: ['FlowActionCallInputParameter'],
      outputParameters: ['FlowActionCallOutputParameter']
    },
    extends: 'FlowNode'
  },
  FlowNode: {
    type: 'FlowNode',
    props: {
      label: '?string',
      locationX: 'number',
      locationY: 'number'
    },
    extends: 'FlowElement'
  },
  FlowElement: {
    type: 'FlowElement',
    props: {
      description: '?string',
      name: '?string'
    },
    extends: 'FlowBaseElement'
  },
  FlowBaseElement: {
    type: 'FlowBaseElement',
    props: {
      processMetadataValues: ['FlowMetadataValue']
    }
  },
  FlowMetadataValue: {
    type: 'FlowMetadataValue',
    props: {
      name: 'string',
      value: '?FlowElementReferenceOrValue'
    }
  },
  FlowElementReferenceOrValue: {
    type: 'FlowElementReferenceOrValue',
    props: {
      booleanValue: '?boolean',
      dateTimeValue: '?string',
      dateValue: '?string',
      elementReference: '?string',
      numberValue: '?number',
      stringValue: '?string'
    }
  },
  FlowActionCallInputParameter: {
    type: 'FlowActionCallInputParameter',
    props: {
      name: 'string',
      value: '?FlowElementReferenceOrValue'
    },
    extends: 'FlowBaseElement'
  },
  FlowActionCallOutputParameter: {
    type: 'FlowActionCallOutputParameter',
    props: {
      assignToReference: 'string',
      name: 'string'
    },
    extends: 'FlowBaseElement'
  },
  FlowApexPluginCallInputParameter: {
    type: 'FlowApexPluginCallInputParameter',
    props: {
      name: 'string',
      value: '?FlowElementReferenceOrValue'
    },
    extends: 'FlowBaseElement'
  },
  FlowApexPluginCallOutputParameter: {
    type: 'FlowApexPluginCallOutputParameter',
    props: {
      assignToReference: 'string',
      name: 'string'
    },
    extends: 'FlowBaseElement'
  },
  FlowAssignmentItem: {
    type: 'FlowAssignmentItem',
    props: {
      assignToReference: 'string',
      operator: 'string',
      value: '?FlowElementReferenceOrValue'
    },
    extends: 'FlowBaseElement'
  },
  FlowChoiceUserInput: {
    type: 'FlowChoiceUserInput',
    props: {
      isRequired: '?boolean',
      promptText: '?string',
      validationRule: '?FlowInputValidationRule'
    },
    extends: 'FlowBaseElement'
  },
  FlowInputValidationRule: {
    type: 'FlowInputValidationRule',
    props: {
      errorMessage: 'string',
      formulaExpression: 'string'
    }
  },
  FlowCondition: {
    type: 'FlowCondition',
    props: {
      leftValueReference: 'string',
      operator: 'string',
      rightValue: '?FlowElementReferenceOrValue'
    },
    extends: 'FlowBaseElement'
  },
  FlowConnector: {
    type: 'FlowConnector',
    props: {
      targetReference: 'string'
    },
    extends: 'FlowBaseElement'
  },
  FlowInputFieldAssignment: {
    type: 'FlowInputFieldAssignment',
    props: {
      field: 'string',
      value: '?FlowElementReferenceOrValue'
    },
    extends: 'FlowBaseElement'
  },
  FlowOutputFieldAssignment: {
    type: 'FlowOutputFieldAssignment',
    props: {
      assignToReference: 'string',
      field: 'string'
    },
    extends: 'FlowBaseElement'
  },
  FlowRecordFilter: {
    type: 'FlowRecordFilter',
    props: {
      field: 'string',
      operator: 'string',
      value: '?FlowElementReferenceOrValue'
    },
    extends: 'FlowBaseElement'
  },
  FlowScreenFieldInputParameter: {
    type: 'FlowScreenFieldInputParameter',
    props: {
      name: 'string',
      value: '?FlowElementReferenceOrValue'
    },
    extends: 'FlowBaseElement'
  },
  FlowScreenFieldOutputParameter: {
    type: 'FlowScreenFieldOutputParameter',
    props: {
      assignToReference: 'string',
      name: 'string'
    },
    extends: 'FlowBaseElement'
  },
  FlowScreenRule: {
    type: 'FlowScreenRule',
    props: {
      conditionLogic: '?string',
      conditions: ['FlowCondition'],
      label: 'string',
      ruleActions: ['FlowScreenRuleAction']
    },
    extends: 'FlowBaseElement'
  },
  FlowScreenRuleAction: {
    type: 'FlowScreenRuleAction',
    props: {
      attribute: 'string',
      fieldReference: 'string',
      value: '?FlowElementReferenceOrValue'
    },
    extends: 'FlowBaseElement'
  },
  FlowSubflowInputAssignment: {
    type: 'FlowSubflowInputAssignment',
    props: {
      name: 'string',
      value: '?FlowElementReferenceOrValue'
    },
    extends: 'FlowBaseElement'
  },
  FlowSubflowOutputAssignment: {
    type: 'FlowSubflowOutputAssignment',
    props: {
      assignToReference: 'string',
      name: 'string'
    },
    extends: 'FlowBaseElement'
  },
  FlowVisibilityRule: {
    type: 'FlowVisibilityRule',
    props: {
      conditionLogic: '?string',
      conditions: ['FlowCondition']
    },
    extends: 'FlowBaseElement'
  },
  FlowWaitEventInputParameter: {
    type: 'FlowWaitEventInputParameter',
    props: {
      name: 'string',
      value: '?FlowElementReferenceOrValue'
    },
    extends: 'FlowBaseElement'
  },
  FlowWaitEventOutputParameter: {
    type: 'FlowWaitEventOutputParameter',
    props: {
      assignToReference: 'string',
      name: 'string'
    },
    extends: 'FlowBaseElement'
  },
  FlowChoice: {
    type: 'FlowChoice',
    props: {
      choiceText: 'string',
      dataType: 'string',
      userInput: '?FlowChoiceUserInput',
      value: '?FlowElementReferenceOrValue'
    },
    extends: 'FlowElement'
  },
  FlowConstant: {
    type: 'FlowConstant',
    props: {
      dataType: 'string',
      value: '?FlowElementReferenceOrValue'
    },
    extends: 'FlowElement'
  },
  FlowDynamicChoiceSet: {
    type: 'FlowDynamicChoiceSet',
    props: {
      dataType: 'string',
      displayField: 'string',
      filters: ['FlowRecordFilter'],
      limit: '?number',
      object: 'string',
      outputAssignments: ['FlowOutputFieldAssignment'],
      picklistField: '?string',
      picklistObject: '?string',
      sortField: '?string',
      sortOrder: '?string',
      valueField: '?string'
    },
    extends: 'FlowElement'
  },
  FlowFormula: {
    type: 'FlowFormula',
    props: {
      dataType: '?string',
      expression: 'string',
      scale: '?number'
    },
    extends: 'FlowElement'
  },
  FlowRule: {
    type: 'FlowRule',
    props: {
      conditionLogic: 'string',
      conditions: ['FlowCondition'],
      connector: '?FlowConnector',
      label: 'string'
    },
    extends: 'FlowElement'
  },
  FlowScreenField: {
    type: 'FlowScreenField',
    props: {
      choiceReferences: ['string'],
      dataType: '?string',
      defaultSelectedChoiceReference: '?string',
      defaultValue: '?FlowElementReferenceOrValue',
      extensionName: '?string',
      fieldText: '?string',
      fieldType: 'string',
      helpText: '?string',
      inputParameters: ['FlowScreenFieldInputParameter'],
      isRequired: '?boolean',
      isVisible: '?boolean',
      outputParameters: ['FlowScreenFieldOutputParameter'],
      scale: '?number',
      storeOutputAutomatically: '?boolean',
      validationRule: '?FlowInputValidationRule',
      visibilityRule: '?FlowVisibilityRule'
    },
    extends: 'FlowElement'
  },
  FlowStage: {
    type: 'FlowStage',
    props: {
      isActive: 'boolean',
      label: 'string',
      stageOrder: 'number'
    },
    extends: 'FlowElement'
  },
  FlowTextTemplate: {
    type: 'FlowTextTemplate',
    props: {
      text: 'string'
    },
    extends: 'FlowElement'
  },
  FlowVariable: {
    type: 'FlowVariable',
    props: {
      apexClass: '?string',
      dataType: 'string',
      isCollection: '?boolean',
      isInput: '?boolean',
      isOutput: '?boolean',
      objectType: '?string',
      scale: '?number',
      value: '?FlowElementReferenceOrValue'
    },
    extends: 'FlowElement'
  },
  FlowWaitEvent: {
    type: 'FlowWaitEvent',
    props: {
      conditionLogic: '?string',
      conditions: ['FlowCondition'],
      connector: 'FlowConnector',
      eventType: 'string',
      inputParameters: ['FlowWaitEventInputParameter'],
      label: 'string',
      outputParameters: ['FlowWaitEventOutputParameter']
    },
    extends: 'FlowElement'
  },
  FlowApexPluginCall: {
    type: 'FlowApexPluginCall',
    props: {
      apexClass: 'string',
      connector: '?FlowConnector',
      faultConnector: '?FlowConnector',
      inputParameters: ['FlowApexPluginCallInputParameter'],
      outputParameters: ['FlowApexPluginCallOutputParameter']
    },
    extends: 'FlowNode'
  },
  FlowAssignment: {
    type: 'FlowAssignment',
    props: {
      assignmentItems: ['FlowAssignmentItem'],
      connector: '?FlowConnector'
    },
    extends: 'FlowNode'
  },
  FlowDecision: {
    type: 'FlowDecision',
    props: {
      defaultConnector: '?FlowConnector',
      defaultConnectorLabel: '?string',
      rules: ['FlowRule']
    },
    extends: 'FlowNode'
  },
  FlowLoop: {
    type: 'FlowLoop',
    props: {
      assignNextValueToReference: 'string',
      collectionReference: 'string',
      iterationOrder: '?string',
      nextValueConnector: '?FlowConnector',
      noMoreValuesConnector: '?FlowConnector'
    },
    extends: 'FlowNode'
  },
  FlowRecordCreate: {
    type: 'FlowRecordCreate',
    props: {
      assignRecordIdToReference: '?string',
      connector: '?FlowConnector',
      faultConnector: '?FlowConnector',
      inputAssignments: ['FlowInputFieldAssignment'],
      inputReference: '?string',
      object: '?string'
    },
    extends: 'FlowNode'
  },
  FlowRecordDelete: {
    type: 'FlowRecordDelete',
    props: {
      connector: '?FlowConnector',
      faultConnector: '?FlowConnector',
      filters: ['FlowRecordFilter'],
      inputReference: '?string',
      object: '?string'
    },
    extends: 'FlowNode'
  },
  FlowRecordLookup: {
    type: 'FlowRecordLookup',
    props: {
      assignNullValuesIfNoRecordsFound: '?boolean',
      connector: '?FlowConnector',
      faultConnector: '?FlowConnector',
      filters: ['FlowRecordFilter'],
      getFirstRecordOnly: '?boolean',
      object: 'string',
      outputAssignments: ['FlowOutputFieldAssignment'],
      outputReference: '?string',
      queriedFields: ['string'],
      sortField: '?string',
      sortOrder: '?string',
      storeOutputAutomatically: '?boolean'
    },
    extends: 'FlowNode'
  },
  FlowRecordUpdate: {
    type: 'FlowRecordUpdate',
    props: {
      connector: '?FlowConnector',
      faultConnector: '?FlowConnector',
      filters: ['FlowRecordFilter'],
      inputAssignments: ['FlowInputFieldAssignment'],
      inputReference: '?string',
      object: '?string'
    },
    extends: 'FlowNode'
  },
  FlowScreen: {
    type: 'FlowScreen',
    props: {
      allowBack: '?boolean',
      allowFinish: '?boolean',
      allowPause: '?boolean',
      connector: '?FlowConnector',
      fields: ['FlowScreenField'],
      helpText: '?string',
      pausedText: '?string',
      rules: ['FlowScreenRule'],
      showFooter: '?boolean',
      showHeader: '?boolean'
    },
    extends: 'FlowNode'
  },
  FlowStart: {
    type: 'FlowStart',
    props: {
      connector: '?FlowConnector',
      filters: ['FlowRecordFilter'],
      object: '?string',
      schedule: '?FlowSchedule',
      triggerType: '?string'
    },
    extends: 'FlowNode'
  },
  FlowSchedule: {
    type: 'FlowSchedule',
    props: {
      frequency: '?string',
      startDate: '?string',
      startTime: '?string'
    }
  },
  FlowStep: {
    type: 'FlowStep',
    props: {
      connectors: ['FlowConnector']
    },
    extends: 'FlowNode'
  },
  FlowSubflow: {
    type: 'FlowSubflow',
    props: {
      connector: '?FlowConnector',
      flowName: 'string',
      inputAssignments: ['FlowSubflowInputAssignment'],
      outputAssignments: ['FlowSubflowOutputAssignment']
    },
    extends: 'FlowNode'
  },
  FlowWait: {
    type: 'FlowWait',
    props: {
      defaultConnector: '?FlowConnector',
      defaultConnectorLabel: 'string',
      faultConnector: '?FlowConnector',
      waitEvents: ['FlowWaitEvent']
    },
    extends: 'FlowNode'
  },
  FlowCategory: {
    type: 'FlowCategory',
    props: {
      description: '?string',
      flowCategoryItems: ['FlowCategoryItems'],
      masterLabel: 'string'
    },
    extends: 'Metadata'
  },
  FlowCategoryItems: {
    type: 'FlowCategoryItems',
    props: {
      flow: 'string'
    }
  },
  FlowDefinition: {
    type: 'FlowDefinition',
    props: {
      activeVersionNumber: '?number',
      description: '?string',
      masterLabel: '?string'
    },
    extends: 'Metadata'
  },
  FlowSettings: {
    type: 'FlowSettings',
    props: {
      enableFlowBREncodedFixEnabled: '?boolean',
      enableFlowDeployAsActiveEnabled: '?boolean',
      enableFlowFieldFilterEnabled: '?boolean',
      enableFlowFormulasFixEnabled: '?boolean',
      enableFlowInterviewSharingEnabled: '?boolean',
      enableFlowNullPreviousValueFix: '?boolean',
      enableFlowPauseEnabled: '?boolean',
      enableFlowUseApexExceptionEmail: '?boolean',
      enableInvocableFlowFixEnabled: '?boolean',
      enableLightningRuntimeEnabled: '?boolean',
      enableUseFlowBuilder: '?boolean',
      isAccessToInvokedApexRequired: '?boolean',
      isEnhancedFlowListViewVisible: '?boolean',
      isManageFlowRequiredForAutomationCharts: '?boolean'
    },
    extends: 'Metadata'
  },
  Folder: {
    type: 'Folder',
    props: {
      accessType: '?string',
      folderShares: ['FolderShare'],
      name: 'string',
      publicFolderAccess: '?string',
      sharedTo: '?SharedTo'
    },
    extends: 'Metadata'
  },
  FolderShare: {
    type: 'FolderShare',
    props: {
      accessLevel: 'string',
      sharedTo: 'string',
      sharedToType: 'string'
    }
  },
  DashboardFolder: {
    type: 'DashboardFolder',
    props: {},
    extends: 'Folder'
  },
  DocumentFolder: {
    type: 'DocumentFolder',
    props: {},
    extends: 'Folder'
  },
  EmailFolder: {
    type: 'EmailFolder',
    props: {},
    extends: 'Folder'
  },
  ReportFolder: {
    type: 'ReportFolder',
    props: {},
    extends: 'Folder'
  },
  ForecastingSettings: {
    type: 'ForecastingSettings',
    props: {
      defaultToPersonalCurrency: '?boolean',
      enableForecasts: '?boolean',
      forecastingCategoryMappings: ['ForecastingCategoryMapping'],
      forecastingDisplayedFamilySettings: ['ForecastingDisplayedFamilySettings'],
      forecastingTypeSettings: ['ForecastingTypeSettings']
    },
    extends: 'Metadata'
  },
  ForecastingCategoryMapping: {
    type: 'ForecastingCategoryMapping',
    props: {
      forecastingItemCategoryApiName: 'string',
      weightedSourceCategories: ['WeightedSourceCategory']
    }
  },
  WeightedSourceCategory: {
    type: 'WeightedSourceCategory',
    props: {
      sourceCategoryApiName: 'string',
      weight: 'number'
    }
  },
  ForecastingDisplayedFamilySettings: {
    type: 'ForecastingDisplayedFamilySettings',
    props: {
      productFamily: '?string'
    }
  },
  ForecastingTypeSettings: {
    type: 'ForecastingTypeSettings',
    props: {
      active: 'boolean',
      adjustmentsSettings: 'AdjustmentsSettings',
      displayedCategoryApiNames: ['string'],
      forecastRangeSettings: 'ForecastRangeSettings',
      forecastedCategoryApiNames: ['string'],
      forecastingDateType: 'string',
      hasProductFamily: 'boolean',
      isAmount: 'boolean',
      isAvailable: 'boolean',
      isQuantity: 'boolean',
      managerAdjustableCategoryApiNames: ['string'],
      masterLabel: 'string',
      name: 'string',
      opportunityListFieldsLabelMappings: ['OpportunityListFieldsLabelMapping'],
      opportunityListFieldsSelectedSettings: 'OpportunityListFieldsSelectedSettings',
      opportunityListFieldsUnselectedSettings: 'OpportunityListFieldsUnselectedSettings',
      opportunitySplitName: '?string',
      ownerAdjustableCategoryApiNames: ['string'],
      quotasSettings: 'QuotasSettings',
      territory2ModelName: '?string'
    }
  },
  AdjustmentsSettings: {
    type: 'AdjustmentsSettings',
    props: {
      enableAdjustments: 'boolean',
      enableOwnerAdjustments: 'boolean'
    }
  },
  ForecastRangeSettings: {
    type: 'ForecastRangeSettings',
    props: {
      beginning: 'number',
      displaying: 'number',
      periodType: 'string'
    }
  },
  OpportunityListFieldsLabelMapping: {
    type: 'OpportunityListFieldsLabelMapping',
    props: {
      field: 'string',
      label: 'string'
    }
  },
  OpportunityListFieldsSelectedSettings: {
    type: 'OpportunityListFieldsSelectedSettings',
    props: {
      field: ['string']
    }
  },
  OpportunityListFieldsUnselectedSettings: {
    type: 'OpportunityListFieldsUnselectedSettings',
    props: {
      field: ['string']
    }
  },
  QuotasSettings: {
    type: 'QuotasSettings',
    props: {
      showQuotas: 'boolean'
    }
  },
  Form: {
    type: 'Form',
    props: {
      description: '?string',
      formSections: ['FormSection'],
      masterLabel: 'string'
    },
    extends: 'Metadata'
  },
  FormSection: {
    type: 'FormSection',
    props: {
      formColumns: ['FormColumn'],
      masterLabel: 'string',
      tabOrderType: 'string'
    },
    extends: 'Metadata'
  },
  FormColumn: {
    type: 'FormColumn',
    props: {
      formItems: ['FormItem']
    }
  },
  FormItem: {
    type: 'FormItem',
    props: {
      emptySpace: '?boolean',
      expression: '?string',
      formLayoutableItem: '?string',
      helpText: '?string'
    }
  },
  FormulaSettings: {
    type: 'FormulaSettings',
    props: {
      enableDSTAwareDatevalue: '?boolean'
    },
    extends: 'Metadata'
  },
  GlobalValueSet: {
    type: 'GlobalValueSet',
    props: {
      customValue: ['CustomValue'],
      description: '?string',
      masterLabel: 'string',
      sorted: 'boolean'
    },
    extends: 'Metadata'
  },
  GlobalValueSetTranslation: {
    type: 'GlobalValueSetTranslation',
    props: {
      valueTranslation: ['ValueTranslation']
    },
    extends: 'Metadata'
  },
  ValueTranslation: {
    type: 'ValueTranslation',
    props: {
      masterLabel: 'string',
      translation: '?string'
    }
  },
  GoogleAppsSettings: {
    type: 'GoogleAppsSettings',
    props: {
      enableGmailButtons: '?boolean',
      enableGmailButtonsAndLinks: '?boolean',
      enableGmailLinks: '?boolean',
      enableGoogleDocs: '?boolean',
      enableGoogleDocsTab: '?boolean',
      enableGoogleTalk: '?boolean',
      googleAppsDomain: '?string',
      googleAppsDomainLinked: '?boolean',
      googleAppsDomainValidated: '?boolean'
    },
    extends: 'Metadata'
  },
  Group: {
    type: 'Group',
    props: {
      doesIncludeBosses: '?boolean',
      name: 'string'
    },
    extends: 'Metadata'
  },
  HighVelocitySalesSettings: {
    type: 'HighVelocitySalesSettings',
    props: {
      enableDispositionCategory: '?boolean',
      enableEngagementWaveAnalyticsPref: '?boolean',
      enableHighVelocitySales: '?boolean',
      enableHighVelocitySalesSetup: '?boolean'
    },
    extends: 'Metadata'
  },
  HomePageComponent: {
    type: 'HomePageComponent',
    props: {
      body: '?string',
      height: '?number',
      links: ['string'],
      page: '?string',
      pageComponentType: 'string',
      showLabel: '?boolean',
      showScrollbars: '?boolean',
      width: '?string'
    },
    extends: 'Metadata'
  },
  HomePageLayout: {
    type: 'HomePageLayout',
    props: {
      narrowComponents: ['string'],
      wideComponents: ['string']
    },
    extends: 'Metadata'
  },
  IdeasSettings: {
    type: 'IdeasSettings',
    props: {
      enableChatterProfile: '?boolean',
      enableHtmlIdea: '?boolean',
      enableIdeaMultipleCategory: '?boolean',
      enableIdeaThemes: '?boolean',
      enableIdeas: '?boolean',
      enableIdeasControllerExtensions: '?boolean',
      enableIdeasReputation: '?boolean',
      halfLife: '?number',
      ideasProfilePage: '?string'
    },
    extends: 'Metadata'
  },
  IndustriesManufacturingSettings: {
    type: 'IndustriesManufacturingSettings',
    props: {
      enableIndManufacturing: '?boolean',
      enableIndustriesMfgAccountForecast: '?boolean'
    },
    extends: 'Metadata'
  },
  IndustriesSettings: {
    type: 'IndustriesSettings',
    props: {
      allowMultipleProducersToWorkOnSamePolicy: '?boolean',
      enableAccessToMasterListOfCoverageTypes: '?boolean',
      enableBlockResourceAvailabilityOrgPref: '?boolean',
      enableEventManagementOrgPref: '?boolean',
      enableHCReferralScoring: '?boolean',
      enableManyToManyRelationships: '?boolean',
      enableMortgageRlaTotalsOrgPref: '?boolean',
      enableMultiResourceOrgPref: '?boolean',
      enableObjectDetection: '?boolean',
      enableOverbookingOrgPref: '?boolean',
      enableProviderSearchSyncOrgPref: '?boolean',
      enableReferralScoring: '?boolean',
      enableSentimentAnalysis: '?boolean'
    },
    extends: 'Metadata'
  },
  InstalledPackage: {
    type: 'InstalledPackage',
    props: {
      activateRSS: 'boolean',
      password: '?string',
      versionNumber: 'string'
    },
    extends: 'Metadata'
  },
  IntegrationHubSettings: {
    type: 'IntegrationHubSettings',
    props: {
      canonicalName: '?string',
      canonicalNameBindingChar: '?string',
      description: '?string',
      isEnabled: '?boolean',
      isProtected: '?boolean',
      masterLabel: 'string',
      setupData: '?string',
      setupDefinition: '?string',
      setupNamespace: '?string',
      setupSimpleName: 'string',
      uUID: '?string',
      version: '?string',
      versionBuild: '?number',
      versionMajor: '?number',
      versionMinor: '?number',
      versionSetUuid: '?string'
    },
    extends: 'Metadata'
  },
  IntegrationHubSettingsType: {
    type: 'IntegrationHubSettingsType',
    props: {
      canonicalName: '?string',
      canonicalNameBindingChar: '?string',
      description: '?string',
      isEnabled: '?boolean',
      isProtected: '?boolean',
      masterLabel: 'string',
      setupNamespace: '?string',
      setupSimpleName: 'string',
      uUID: '?string',
      version: '?string',
      versionBuild: '?number',
      versionMajor: '?number',
      versionMinor: '?number',
      versionSetUuid: '?string'
    },
    extends: 'Metadata'
  },
  InvocableActionSettings: {
    type: 'InvocableActionSettings',
    props: {
      isPartialSaveAllowed: '?boolean'
    },
    extends: 'Metadata'
  },
  IoTSettings: {
    type: 'IoTSettings',
    props: {
      enableIoT: '?boolean',
      enableIoTInsightsPilot: '?boolean',
      enableIoTUsageEmail: '?boolean'
    },
    extends: 'Metadata'
  },
  IsvHammerSettings: {
    type: 'IsvHammerSettings',
    props: {
      enableIsvHammerSubIsOptedOut: '?boolean'
    },
    extends: 'Metadata'
  },
  KeywordList: {
    type: 'KeywordList',
    props: {
      description: '?string',
      keywords: ['Keyword'],
      masterLabel: 'string'
    },
    extends: 'Metadata'
  },
  Keyword: {
    type: 'Keyword',
    props: {
      keyword: 'string'
    }
  },
  KnowledgeSettings: {
    type: 'KnowledgeSettings',
    props: {
      answers: '?KnowledgeAnswerSettings',
      cases: '?KnowledgeCaseSettings',
      defaultLanguage: '?string',
      enableChatterQuestionKBDeflection: '?boolean',
      enableCreateEditOnArticlesTab: '?boolean',
      enableExternalMediaContent: '?boolean',
      enableKnowledge: '?boolean',
      enableKnowledgeArticleTextHighlights: '?boolean',
      enableKnowledgeKeywordAutoComplete: '?boolean',
      enableKnowledgeTitleAutoComplete: '?boolean',
      enableLightningKbAutoLoadRichTextField: '?boolean',
      enableLightningKnowledge: '?boolean',
      languages: '?KnowledgeLanguageSettings',
      showArticleSummariesCustomerPortal: '?boolean',
      showArticleSummariesInternalApp: '?boolean',
      showArticleSummariesPartnerPortal: '?boolean',
      showValidationStatusField: '?boolean',
      suggestedArticles: '?KnowledgeSuggestedArticlesSettings'
    },
    extends: 'Metadata'
  },
  KnowledgeAnswerSettings: {
    type: 'KnowledgeAnswerSettings',
    props: {
      assignTo: '?string',
      defaultArticleType: '?string',
      enableArticleCreation: '?boolean'
    }
  },
  KnowledgeCaseSettings: {
    type: 'KnowledgeCaseSettings',
    props: {
      articlePDFCreationProfile: '?string',
      articlePublicSharingCommunities: '?KnowledgeCommunitiesSettings',
      articlePublicSharingSites: '?KnowledgeSitesSettings',
      articlePublicSharingSitesChatterAnswers: '?KnowledgeSitesSettings',
      assignTo: '?string',
      customizationClass: '?string',
      defaultContributionArticleType: '?string',
      editor: '?string',
      enableArticleCreation: '?boolean',
      enableArticlePublicSharingSites: '?boolean',
      enableCaseDataCategoryMapping: '?boolean',
      useProfileForPDFCreation: '?boolean'
    }
  },
  KnowledgeCommunitiesSettings: {
    type: 'KnowledgeCommunitiesSettings',
    props: {
      community: ['string']
    }
  },
  KnowledgeSitesSettings: {
    type: 'KnowledgeSitesSettings',
    props: {
      site: ['string']
    }
  },
  KnowledgeLanguageSettings: {
    type: 'KnowledgeLanguageSettings',
    props: {
      language: ['KnowledgeLanguage']
    }
  },
  KnowledgeLanguage: {
    type: 'KnowledgeLanguage',
    props: {
      active: '?boolean',
      defaultAssignee: '?string',
      defaultAssigneeType: '?string',
      defaultReviewer: '?string',
      defaultReviewerType: '?string',
      name: 'string'
    }
  },
  KnowledgeSuggestedArticlesSettings: {
    type: 'KnowledgeSuggestedArticlesSettings',
    props: {
      caseFields: '?KnowledgeCaseFieldsSettings',
      useSuggestedArticlesForCase: '?boolean',
      workOrderFields: '?KnowledgeWorkOrderFieldsSettings',
      workOrderLineItemFields: '?KnowledgeWorkOrderLineItemFieldsSettings'
    }
  },
  KnowledgeCaseFieldsSettings: {
    type: 'KnowledgeCaseFieldsSettings',
    props: {
      field: ['KnowledgeCaseField']
    }
  },
  KnowledgeCaseField: {
    type: 'KnowledgeCaseField',
    props: {
      name: '?string'
    }
  },
  KnowledgeWorkOrderFieldsSettings: {
    type: 'KnowledgeWorkOrderFieldsSettings',
    props: {
      field: ['KnowledgeWorkOrderField']
    }
  },
  KnowledgeWorkOrderField: {
    type: 'KnowledgeWorkOrderField',
    props: {
      name: '?string'
    }
  },
  KnowledgeWorkOrderLineItemFieldsSettings: {
    type: 'KnowledgeWorkOrderLineItemFieldsSettings',
    props: {
      field: ['KnowledgeWorkOrderLineItemField']
    }
  },
  KnowledgeWorkOrderLineItemField: {
    type: 'KnowledgeWorkOrderLineItemField',
    props: {
      name: '?string'
    }
  },
  LanguageSettings: {
    type: 'LanguageSettings',
    props: {
      enableCanadaIcuFormat: '?boolean',
      enableEndUserLanguages: '?boolean',
      enableICULocaleDateFormat: '?boolean',
      enablePlatformLanguages: '?boolean',
      enableTranslationWorkbench: '?boolean',
      useLanguageFallback: '?boolean'
    },
    extends: 'Metadata'
  },
  Layout: {
    type: 'Layout',
    props: {
      customButtons: ['string'],
      customConsoleComponents: '?CustomConsoleComponents',
      emailDefault: '?boolean',
      excludeButtons: ['string'],
      feedLayout: '?FeedLayout',
      headers: ['string'],
      layoutSections: ['LayoutSection'],
      miniLayout: '?MiniLayout',
      multilineLayoutFields: ['string'],
      platformActionList: '?PlatformActionList',
      quickActionList: '?QuickActionList',
      relatedContent: '?RelatedContent',
      relatedLists: ['RelatedListItem'],
      relatedObjects: ['string'],
      runAssignmentRulesDefault: '?boolean',
      showEmailCheckbox: '?boolean',
      showHighlightsPanel: '?boolean',
      showInteractionLogPanel: '?boolean',
      showKnowledgeComponent: '?boolean',
      showRunAssignmentRulesCheckbox: '?boolean',
      showSolutionSection: '?boolean',
      showSubmitAndAttachButton: '?boolean',
      summaryLayout: '?SummaryLayout'
    },
    extends: 'Metadata'
  },
  CustomConsoleComponents: {
    type: 'CustomConsoleComponents',
    props: {
      primaryTabComponents: '?PrimaryTabComponents',
      subtabComponents: '?SubtabComponents'
    }
  },
  PrimaryTabComponents: {
    type: 'PrimaryTabComponents',
    props: {
      containers: ['Container']
    }
  },
  Container: {
    type: 'Container',
    props: {
      height: '?number',
      isContainerAutoSizeEnabled: 'boolean',
      region: 'string',
      sidebarComponents: ['SidebarComponent'],
      style: 'string',
      unit: 'string',
      width: '?number'
    }
  },
  SidebarComponent: {
    type: 'SidebarComponent',
    props: {
      componentType: 'string',
      createAction: '?string',
      enableLinking: '?boolean',
      height: '?number',
      label: '?string',
      lookup: '?string',
      page: '?string',
      relatedLists: ['RelatedList'],
      unit: '?string',
      updateAction: '?string',
      width: '?number'
    }
  },
  RelatedList: {
    type: 'RelatedList',
    props: {
      hideOnDetail: 'boolean',
      name: 'string'
    }
  },
  SubtabComponents: {
    type: 'SubtabComponents',
    props: {
      containers: ['Container']
    }
  },
  FeedLayout: {
    type: 'FeedLayout',
    props: {
      autocollapsePublisher: '?boolean',
      compactFeed: '?boolean',
      feedFilterPosition: '?string',
      feedFilters: ['FeedLayoutFilter'],
      fullWidthFeed: '?boolean',
      hideSidebar: '?boolean',
      highlightExternalFeedItems: '?boolean',
      leftComponents: ['FeedLayoutComponent'],
      rightComponents: ['FeedLayoutComponent'],
      useInlineFiltersInConsole: '?boolean'
    }
  },
  FeedLayoutFilter: {
    type: 'FeedLayoutFilter',
    props: {
      feedFilterName: '?string',
      feedFilterType: 'string',
      feedItemType: '?string'
    }
  },
  FeedLayoutComponent: {
    type: 'FeedLayoutComponent',
    props: {
      componentType: 'string',
      height: '?number',
      page: '?string'
    }
  },
  LayoutSection: {
    type: 'LayoutSection',
    props: {
      customLabel: '?boolean',
      detailHeading: '?boolean',
      editHeading: '?boolean',
      label: '?string',
      layoutColumns: ['LayoutColumn'],
      style: 'string'
    }
  },
  LayoutColumn: {
    type: 'LayoutColumn',
    props: {
      layoutItems: ['LayoutItem'],
      reserved: '?string'
    }
  },
  LayoutItem: {
    type: 'LayoutItem',
    props: {
      analyticsCloudComponent: '?AnalyticsCloudComponentLayoutItem',
      behavior: '?string',
      canvas: '?string',
      component: '?string',
      customLink: '?string',
      emptySpace: '?boolean',
      field: '?string',
      height: '?number',
      page: '?string',
      reportChartComponent: '?ReportChartComponentLayoutItem',
      scontrol: '?string',
      showLabel: '?boolean',
      showScrollbars: '?boolean',
      width: '?string'
    }
  },
  AnalyticsCloudComponentLayoutItem: {
    type: 'AnalyticsCloudComponentLayoutItem',
    props: {
      assetType: 'string',
      devName: 'string',
      error: '?string',
      filter: '?string',
      height: '?number',
      hideOnError: '?boolean',
      showHeader: '?boolean',
      showSharing: '?boolean',
      showTitle: '?boolean',
      width: '?string'
    }
  },
  ReportChartComponentLayoutItem: {
    type: 'ReportChartComponentLayoutItem',
    props: {
      cacheData: '?boolean',
      contextFilterableField: '?string',
      error: '?string',
      hideOnError: '?boolean',
      includeContext: '?boolean',
      reportName: 'string',
      showTitle: '?boolean',
      size: '?string'
    }
  },
  MiniLayout: {
    type: 'MiniLayout',
    props: {
      fields: ['string'],
      relatedLists: ['RelatedListItem']
    }
  },
  RelatedListItem: {
    type: 'RelatedListItem',
    props: {
      customButtons: ['string'],
      excludeButtons: ['string'],
      fields: ['string'],
      relatedList: 'string',
      sortField: '?string',
      sortOrder: '?string'
    }
  },
  RelatedContent: {
    type: 'RelatedContent',
    props: {
      relatedContentItems: ['RelatedContentItem']
    }
  },
  RelatedContentItem: {
    type: 'RelatedContentItem',
    props: {
      layoutItem: 'LayoutItem'
    }
  },
  SummaryLayout: {
    type: 'SummaryLayout',
    props: {
      masterLabel: 'string',
      sizeX: 'number',
      sizeY: '?number',
      sizeZ: '?number',
      summaryLayoutItems: ['SummaryLayoutItem'],
      summaryLayoutStyle: 'string'
    }
  },
  SummaryLayoutItem: {
    type: 'SummaryLayoutItem',
    props: {
      customLink: '?string',
      field: '?string',
      posX: 'number',
      posY: '?number',
      posZ: '?number'
    }
  },
  LeadConfigSettings: {
    type: 'LeadConfigSettings',
    props: {
      doesEnableLeadConvertDefaultSubjectBlankTaskCreation: '?boolean',
      doesHideOpportunityInConvertLeadWindow: '?boolean',
      doesPreserveLeadStatus: '?boolean',
      doesSelectNoOpportunityOnConvertLead: '?boolean',
      doesTrackHistory: '?boolean',
      enableConversionsOnMobile: '?boolean',
      enableOrgWideMergeAndDelete: '?boolean',
      shouldLeadConvertRequireValidation: '?boolean'
    },
    extends: 'Metadata'
  },
  LeadConvertSettings: {
    type: 'LeadConvertSettings',
    props: {
      allowOwnerChange: '?boolean',
      objectMapping: ['ObjectMapping'],
      opportunityCreationOptions: '?string'
    },
    extends: 'Metadata'
  },
  Letterhead: {
    type: 'Letterhead',
    props: {
      available: 'boolean',
      backgroundColor: 'string',
      bodyColor: 'string',
      bottomLine: 'LetterheadLine',
      description: '?string',
      footer: 'LetterheadHeaderFooter',
      header: 'LetterheadHeaderFooter',
      middleLine: 'LetterheadLine',
      name: 'string',
      topLine: 'LetterheadLine'
    },
    extends: 'Metadata'
  },
  LetterheadLine: {
    type: 'LetterheadLine',
    props: {
      color: 'string',
      height: 'number'
    }
  },
  LetterheadHeaderFooter: {
    type: 'LetterheadHeaderFooter',
    props: {
      backgroundColor: 'string',
      height: 'number',
      horizontalAlignment: '?string',
      logo: '?string',
      verticalAlignment: '?string'
    }
  },
  LicenseDefinition: {
    type: 'LicenseDefinition',
    props: {
      aggregationGroup: 'string',
      description: '?string',
      isPublished: 'boolean',
      label: 'string',
      licensedCustomPermissions: ['LicensedCustomPermissions'],
      licensingAuthority: 'string',
      licensingAuthorityProvider: 'string',
      minPlatformVersion: 'number',
      origin: 'string',
      revision: 'number',
      trialLicenseDuration: 'number',
      trialLicenseQuantity: 'number'
    },
    extends: 'Metadata'
  },
  LicensedCustomPermissions: {
    type: 'LicensedCustomPermissions',
    props: {
      customPermission: 'string',
      licenseDefinition: 'string'
    }
  },
  LightningBolt: {
    type: 'LightningBolt',
    props: {
      category: 'string',
      lightningBoltFeatures: ['LightningBoltFeatures'],
      lightningBoltImages: ['LightningBoltImages'],
      lightningBoltItems: ['LightningBoltItems'],
      masterLabel: 'string',
      publisher: 'string',
      summary: 'string'
    },
    extends: 'Metadata'
  },
  LightningBoltFeatures: {
    type: 'LightningBoltFeatures',
    props: {
      description: '?string',
      order: 'number',
      title: 'string'
    }
  },
  LightningBoltImages: {
    type: 'LightningBoltImages',
    props: {
      image: 'string',
      order: 'number'
    }
  },
  LightningBoltItems: {
    type: 'LightningBoltItems',
    props: {
      name: 'string',
      type: 'string'
    }
  },
  LightningComponentBundle: {
    type: 'LightningComponentBundle',
    props: {
      apiVersion: '?number',
      description: '?string',
      isExplicitImport: '?boolean',
      isExposed: '?boolean',
      lwcResources: '?LwcResources',
      masterLabel: '?string',
      runtimeNamespace: '?string',
      targetConfigs: '?string',
      targets: '?Targets'
    },
    extends: 'Metadata'
  },
  LwcResources: {
    type: 'LwcResources',
    props: {
      lwcResource: ['LwcResource']
    }
  },
  LwcResource: {
    type: 'LwcResource',
    props: {
      filePath: 'string',
      source: 'string'
    }
  },
  Targets: {
    type: 'Targets',
    props: {
      target: ['string']
    }
  },
  LightningExperienceSettings: {
    type: 'LightningExperienceSettings',
    props: {
      enableAccessCheckCrucPref: '?boolean',
      enableApiUserLtngOutAccessPref: '?boolean',
      enableAuraCDNPref: '?boolean',
      enableFeedbackInMobile: '?boolean',
      enableIE11DeprecationMsgHidden: '?boolean',
      enableIE11LEXCrucPref: '?boolean',
      enableInAppTooltips: '?boolean',
      enableLEXOnIpadEnabled: '?boolean',
      enableLexEndUsersNoSwitching: '?boolean',
      enableNavPersonalizationOptOut: '?boolean',
      enableRemoveThemeBrandBanner: '?boolean',
      enableS1BannerPref: '?boolean',
      enableS1BrowserEnabled: '?boolean',
      enableS1DesktopEnabled: '?boolean',
      enableS1UiLoggingEnabled: '?boolean',
      enableTryLightningOptOut: '?boolean',
      enableUseS1AlohaDesktop: '?boolean',
      enableUsersAreLightningOnly: '?boolean'
    },
    extends: 'Metadata'
  },
  LightningExperienceTheme: {
    type: 'LightningExperienceTheme',
    props: {
      defaultBrandingSet: 'string',
      description: '?string',
      masterLabel: 'string',
      shouldOverrideLoadingImage: '?boolean'
    },
    extends: 'Metadata'
  },
  LightningMessageChannel: {
    type: 'LightningMessageChannel',
    props: {
      description: '?string',
      isExposed: '?boolean',
      lightningMessageFields: ['LightningMessageField'],
      masterLabel: 'string'
    },
    extends: 'Metadata'
  },
  LightningMessageField: {
    type: 'LightningMessageField',
    props: {
      description: '?string',
      fieldName: 'string'
    }
  },
  LightningOnboardingConfig: {
    type: 'LightningOnboardingConfig',
    props: {
      collaborationGroup: '?string',
      customQuestion: 'string',
      feedbackFormDaysFrequency: 'number',
      isCustom: 'boolean',
      masterLabel: 'string',
      sendFeedbackToSalesforce: 'boolean'
    },
    extends: 'Metadata'
  },
  LiveAgentSettings: {
    type: 'LiveAgentSettings',
    props: {
      enableLiveAgent: '?boolean',
      enableQuickTextEnabled: '?boolean'
    },
    extends: 'Metadata'
  },
  LiveChatAgentConfig: {
    type: 'LiveChatAgentConfig',
    props: {
      assignments: '?AgentConfigAssignments',
      autoGreeting: '?string',
      capacity: '?number',
      criticalWaitTime: '?number',
      customAgentName: '?string',
      enableAgentFileTransfer: '?boolean',
      enableAgentSneakPeek: '?boolean',
      enableAssistanceFlag: '?boolean',
      enableAutoAwayOnDecline: '?boolean',
      enableAutoAwayOnPushTimeout: '?boolean',
      enableChatConferencing: '?boolean',
      enableChatMonitoring: '?boolean',
      enableChatTransferToAgent: '?boolean',
      enableChatTransferToButton: '?boolean',
      enableChatTransferToSkill: '?boolean',
      enableLogoutSound: '?boolean',
      enableNotifications: '?boolean',
      enableRequestSound: '?boolean',
      enableSneakPeek: '?boolean',
      enableVisitorBlocking: '?boolean',
      enableWhisperMessage: '?boolean',
      label: 'string',
      supervisorDefaultAgentStatusFilter: '?string',
      supervisorDefaultButtonFilter: '?string',
      supervisorDefaultSkillFilter: '?string',
      supervisorSkills: '?SupervisorAgentConfigSkills',
      transferableButtons: '?AgentConfigButtons',
      transferableSkills: '?AgentConfigSkills'
    },
    extends: 'Metadata'
  },
  AgentConfigAssignments: {
    type: 'AgentConfigAssignments',
    props: {
      profiles: '?AgentConfigProfileAssignments',
      users: '?AgentConfigUserAssignments'
    }
  },
  AgentConfigProfileAssignments: {
    type: 'AgentConfigProfileAssignments',
    props: {
      profile: ['string']
    }
  },
  AgentConfigUserAssignments: {
    type: 'AgentConfigUserAssignments',
    props: {
      user: ['string']
    }
  },
  SupervisorAgentConfigSkills: {
    type: 'SupervisorAgentConfigSkills',
    props: {
      skill: ['string']
    }
  },
  AgentConfigButtons: {
    type: 'AgentConfigButtons',
    props: {
      button: ['string']
    }
  },
  AgentConfigSkills: {
    type: 'AgentConfigSkills',
    props: {
      skill: ['string']
    }
  },
  LiveChatButton: {
    type: 'LiveChatButton',
    props: {
      animation: '?string',
      autoGreeting: '?string',
      chasitorIdleTimeout: '?number',
      chasitorIdleTimeoutWarning: '?number',
      chatPage: '?string',
      customAgentName: '?string',
      deployments: '?LiveChatButtonDeployments',
      enableQueue: '?boolean',
      inviteEndPosition: '?string',
      inviteImage: '?string',
      inviteStartPosition: '?string',
      isActive: '?boolean',
      label: 'string',
      numberOfReroutingAttempts: '?number',
      offlineImage: '?string',
      onlineImage: '?string',
      optionsCustomRoutingIsEnabled: '?boolean',
      optionsHasChasitorIdleTimeout: 'boolean',
      optionsHasInviteAfterAccept: '?boolean',
      optionsHasInviteAfterReject: '?boolean',
      optionsHasRerouteDeclinedRequest: '?boolean',
      optionsIsAutoAccept: '?boolean',
      optionsIsInviteAutoRemove: '?boolean',
      overallQueueLength: '?number',
      perAgentQueueLength: '?number',
      postChatPage: '?string',
      postChatUrl: '?string',
      preChatFormPage: '?string',
      preChatFormUrl: '?string',
      pushTimeOut: '?number',
      routingType: 'string',
      site: '?string',
      skills: '?LiveChatButtonSkills',
      timeToRemoveInvite: '?number',
      type: 'string',
      windowLanguage: '?string'
    },
    extends: 'Metadata'
  },
  LiveChatButtonDeployments: {
    type: 'LiveChatButtonDeployments',
    props: {
      deployment: ['string']
    }
  },
  LiveChatButtonSkills: {
    type: 'LiveChatButtonSkills',
    props: {
      skill: ['string']
    }
  },
  LiveChatDeployment: {
    type: 'LiveChatDeployment',
    props: {
      brandingImage: '?string',
      connectionTimeoutDuration: '?number',
      connectionWarningDuration: '?number',
      displayQueuePosition: '?boolean',
      domainWhiteList: '?LiveChatDeploymentDomainWhitelist',
      enablePrechatApi: '?boolean',
      enableTranscriptSave: '?boolean',
      label: 'string',
      mobileBrandingImage: '?string',
      site: '?string',
      windowTitle: 'string'
    },
    extends: 'Metadata'
  },
  LiveChatDeploymentDomainWhitelist: {
    type: 'LiveChatDeploymentDomainWhitelist',
    props: {
      domain: ['string']
    }
  },
  LiveChatSensitiveDataRule: {
    type: 'LiveChatSensitiveDataRule',
    props: {
      actionType: 'string',
      description: '?string',
      enforceOn: 'number',
      isEnabled: 'boolean',
      pattern: 'string',
      priority: 'number',
      replacement: '?string'
    },
    extends: 'Metadata'
  },
  LiveMessageSettings: {
    type: 'LiveMessageSettings',
    props: {
      enableLiveMessage: '?boolean'
    },
    extends: 'Metadata'
  },
  MacroSettings: {
    type: 'MacroSettings',
    props: {
      enableAdvancedSearch: '?boolean',
      macrosInFolders: '?boolean'
    },
    extends: 'Metadata'
  },
  ManagedContentType: {
    type: 'ManagedContentType',
    props: {
      description: '?string',
      developerName: 'string',
      managedContentNodeTypes: ['ManagedContentNodeType'],
      masterLabel: 'string'
    },
    extends: 'Metadata'
  },
  ManagedContentNodeType: {
    type: 'ManagedContentNodeType',
    props: {
      helpText: '?string',
      isLocalizable: '?boolean',
      isRequired: '?boolean',
      nodeLabel: 'string',
      nodeName: 'string',
      nodeType: 'string',
      placeholderText: '?string'
    }
  },
  ManagedTopic: {
    type: 'ManagedTopic',
    props: {
      managedTopicType: 'string',
      name: 'string',
      parentName: 'string',
      position: 'number',
      topicDescription: 'string'
    },
    extends: 'Metadata'
  },
  ManagedTopics: {
    type: 'ManagedTopics',
    props: {
      managedTopic: ['ManagedTopic']
    },
    extends: 'Metadata'
  },
  MapsAndLocationSettings: {
    type: 'MapsAndLocationSettings',
    props: {
      enableAddressAutoComplete: '?boolean',
      enableMapsAndLocation: '?boolean'
    },
    extends: 'Metadata'
  },
  MatchingRule: {
    type: 'MatchingRule',
    props: {
      booleanFilter: '?string',
      description: '?string',
      label: 'string',
      matchingRuleItems: ['MatchingRuleItem'],
      ruleStatus: 'string'
    },
    extends: 'Metadata'
  },
  MatchingRuleItem: {
    type: 'MatchingRuleItem',
    props: {
      blankValueBehavior: '?string',
      fieldName: 'string',
      matchingMethod: 'string'
    }
  },
  MatchingRules: {
    type: 'MatchingRules',
    props: {
      matchingRules: ['MatchingRule']
    },
    extends: 'Metadata'
  },
  MetadataWithContent: {
    type: 'MetadataWithContent',
    props: {
      content: '?string'
    },
    extends: 'Metadata'
  },
  AccessControlPolicy: {
    type: 'AccessControlPolicy',
    props: {
      active: 'boolean',
      deploymentStatus: 'string',
      description: '?string',
      masterLabel: 'string',
      targetEntity: 'string',
      version: 'number'
    },
    extends: 'MetadataWithContent'
  },
  ApexClass: {
    type: 'ApexClass',
    props: {
      apiVersion: 'number',
      packageVersions: ['PackageVersion'],
      status: 'string'
    },
    extends: 'MetadataWithContent'
  },
  ApexComponent: {
    type: 'ApexComponent',
    props: {
      apiVersion: '?number',
      description: '?string',
      label: 'string',
      packageVersions: ['PackageVersion']
    },
    extends: 'MetadataWithContent'
  },
  ApexPage: {
    type: 'ApexPage',
    props: {
      apiVersion: 'number',
      availableInTouch: '?boolean',
      confirmationTokenRequired: '?boolean',
      description: '?string',
      label: 'string',
      packageVersions: ['PackageVersion']
    },
    extends: 'MetadataWithContent'
  },
  ApexTrigger: {
    type: 'ApexTrigger',
    props: {
      apiVersion: 'number',
      packageVersions: ['PackageVersion'],
      status: 'string'
    },
    extends: 'MetadataWithContent'
  },
  Certificate: {
    type: 'Certificate',
    props: {
      caSigned: 'boolean',
      encryptedWithPlatformEncryption: '?boolean',
      expirationDate: '?string',
      keySize: '?number',
      masterLabel: 'string',
      privateKeyExportable: '?boolean'
    },
    extends: 'MetadataWithContent'
  },
  ContentAsset: {
    type: 'ContentAsset',
    props: {
      format: '?string',
      isVisibleByExternalUsers: '?boolean',
      language: 'string',
      masterLabel: 'string',
      originNetwork: '?string',
      relationships: '?ContentAssetRelationships',
      versions: 'ContentAssetVersions'
    },
    extends: 'MetadataWithContent'
  },
  ContentAssetRelationships: {
    type: 'ContentAssetRelationships',
    props: {
      insightsApplication: ['ContentAssetLink'],
      network: ['ContentAssetLink'],
      organization: '?ContentAssetLink',
      workspace: ['ContentAssetLink']
    }
  },
  ContentAssetLink: {
    type: 'ContentAssetLink',
    props: {
      access: 'string',
      isManagingWorkspace: '?boolean',
      name: '?string'
    }
  },
  ContentAssetVersions: {
    type: 'ContentAssetVersions',
    props: {
      version: ['ContentAssetVersion']
    }
  },
  ContentAssetVersion: {
    type: 'ContentAssetVersion',
    props: {
      number: 'string',
      pathOnClient: 'string',
      zipEntry: '?string'
    }
  },
  Document: {
    type: 'Document',
    props: {
      description: '?string',
      internalUseOnly: 'boolean',
      keywords: '?string',
      name: '?string',
      public: 'boolean'
    },
    extends: 'MetadataWithContent'
  },
  EclairGeoData: {
    type: 'EclairGeoData',
    props: {
      maps: ['EclairMap'],
      masterLabel: 'string'
    },
    extends: 'MetadataWithContent'
  },
  EclairMap: {
    type: 'EclairMap',
    props: {
      boundingBoxBottom: '?number',
      boundingBoxLeft: '?number',
      boundingBoxRight: '?number',
      boundingBoxTop: '?number',
      mapLabel: '?string',
      mapName: 'string',
      projection: 'string'
    }
  },
  EmailTemplate: {
    type: 'EmailTemplate',
    props: {
      apiVersion: '?number',
      attachedDocuments: ['string'],
      attachments: ['Attachment'],
      available: 'boolean',
      description: '?string',
      encodingKey: 'string',
      letterhead: '?string',
      name: 'string',
      packageVersions: ['PackageVersion'],
      relatedEntityType: '?string',
      style: 'string',
      subject: '?string',
      textOnly: '?string',
      type: 'string',
      uiType: '?string'
    },
    extends: 'MetadataWithContent'
  },
  Attachment: {
    type: 'Attachment',
    props: {
      content: 'string',
      name: 'string'
    }
  },
  NetworkBranding: {
    type: 'NetworkBranding',
    props: {
      loginBackgroundImageUrl: '?string',
      loginFooterText: '?string',
      loginLogo: '?string',
      loginLogoName: '?string',
      loginPrimaryColor: '?string',
      loginQuaternaryColor: '?string',
      loginRightFrameUrl: '?string',
      network: '?string',
      pageFooter: '?string',
      pageHeader: '?string',
      primaryColor: 'string',
      primaryComplementColor: 'string',
      quaternaryColor: 'string',
      quaternaryComplementColor: 'string',
      secondaryColor: 'string',
      staticLogoImageUrl: '?string',
      tertiaryColor: 'string',
      tertiaryComplementColor: 'string',
      zeronaryColor: 'string',
      zeronaryComplementColor: 'string'
    },
    extends: 'MetadataWithContent'
  },
  Orchestration: {
    type: 'Orchestration',
    props: {
      context: 'string',
      masterLabel: 'string'
    },
    extends: 'MetadataWithContent'
  },
  Scontrol: {
    type: 'Scontrol',
    props: {
      contentSource: 'string',
      description: '?string',
      encodingKey: 'string',
      fileContent: '?string',
      fileName: '?string',
      name: 'string',
      supportsCaching: 'boolean'
    },
    extends: 'MetadataWithContent'
  },
  SiteDotCom: {
    type: 'SiteDotCom',
    props: {
      label: 'string',
      siteType: 'string'
    },
    extends: 'MetadataWithContent'
  },
  StaticResource: {
    type: 'StaticResource',
    props: {
      cacheControl: 'string',
      contentType: 'string',
      description: '?string'
    },
    extends: 'MetadataWithContent'
  },
  UiPlugin: {
    type: 'UiPlugin',
    props: {
      description: '?string',
      extensionPointIdentifier: 'string',
      isEnabled: 'boolean',
      language: 'string',
      masterLabel: 'string'
    },
    extends: 'MetadataWithContent'
  },
  WaveDashboard: {
    type: 'WaveDashboard',
    props: {
      application: 'string',
      description: '?string',
      masterLabel: 'string',
      templateAssetSourceName: '?string'
    },
    extends: 'MetadataWithContent'
  },
  WaveDataflow: {
    type: 'WaveDataflow',
    props: {
      dataflowType: '?string',
      description: '?string',
      masterLabel: 'string'
    },
    extends: 'MetadataWithContent'
  },
  WaveLens: {
    type: 'WaveLens',
    props: {
      application: 'string',
      datasets: ['string'],
      description: '?string',
      masterLabel: 'string',
      templateAssetSourceName: '?string',
      visualizationType: 'string'
    },
    extends: 'MetadataWithContent'
  },
  WaveRecipe: {
    type: 'WaveRecipe',
    props: {
      dataflow: 'string',
      masterLabel: 'string',
      securityPredicate: '?string',
      targetDatasetAlias: 'string'
    },
    extends: 'MetadataWithContent'
  },
  MilestoneType: {
    type: 'MilestoneType',
    props: {
      description: '?string',
      recurrenceType: '?string'
    },
    extends: 'Metadata'
  },
  MlDomain: {
    type: 'MlDomain',
    props: {
      description: '?string',
      label: 'string',
      mlIntents: ['MlIntent'],
      mlSlotClasses: ['MlSlotClass']
    },
    extends: 'Metadata'
  },
  MobileApplicationDetail: {
    type: 'MobileApplicationDetail',
    props: {
      applicationBinaryFile: '?string',
      applicationBinaryFileName: '?string',
      applicationBundleIdentifier: '?string',
      applicationFileLength: '?number',
      applicationIconFile: '?string',
      applicationIconFileName: '?string',
      applicationInstallUrl: '?string',
      devicePlatform: 'string',
      deviceType: '?string',
      minimumOsVersion: '?string',
      privateApp: '?boolean',
      version: 'string'
    },
    extends: 'Metadata'
  },
  MobileSettings: {
    type: 'MobileSettings',
    props: {
      dashboardMobile: '?DashboardMobileSettings',
      enableImportContactFromDevice: '?boolean',
      enableLightningOnMobile: '?boolean',
      enableOfflineDraftsEnabled: '?boolean',
      enablePopulateNameManuallyInToday: '?boolean',
      enableS1EncryptedStoragePref2: '?boolean',
      enableS1OfflinePref: '?boolean'
    },
    extends: 'Metadata'
  },
  DashboardMobileSettings: {
    type: 'DashboardMobileSettings',
    props: {
      enableDashboardIPadApp: '?boolean'
    }
  },
  ModerationRule: {
    type: 'ModerationRule',
    props: {
      action: 'string',
      actionLimit: '?number',
      active: 'boolean',
      description: '?string',
      entitiesAndFields: ['ModeratedEntityField'],
      masterLabel: 'string',
      notifyLimit: '?number',
      timePeriod: '?string',
      type: '?string',
      userCriteria: ['string'],
      userMessage: '?string'
    },
    extends: 'Metadata'
  },
  ModeratedEntityField: {
    type: 'ModeratedEntityField',
    props: {
      entityName: 'string',
      fieldName: '?string',
      keywordList: '?string'
    }
  },
  MyDomainSettings: {
    type: 'MyDomainSettings',
    props: {
      canOnlyLoginWithMyDomainUrl: '?boolean',
      doesApiLoginRequireOrgDomain: '?boolean',
      enableNativeBrowserForAuthOnAndroid: '?boolean',
      enableNativeBrowserForAuthOnIos: '?boolean',
      useStabilizedMyDomainHostnames: '?boolean',
      useStabilizedSandboxMyDomainHostnames: '?boolean'
    },
    extends: 'Metadata'
  },
  NameSettings: {
    type: 'NameSettings',
    props: {
      enableMiddleName: '?boolean',
      enableNameSuffix: '?boolean'
    },
    extends: 'Metadata'
  },
  NamedCredential: {
    type: 'NamedCredential',
    props: {
      allowMergeFieldsInBody: '?boolean',
      allowMergeFieldsInHeader: '?boolean',
      authProvider: '?string',
      authTokenEndpointUrl: '?string',
      awsAccessKey: '?string',
      awsAccessSecret: '?string',
      awsRegion: '?string',
      awsService: '?string',
      certificate: '?string',
      endpoint: '?string',
      generateAuthorizationHeader: '?boolean',
      jwtAudience: '?string',
      jwtFormulaSubject: '?string',
      jwtIssuer: '?string',
      jwtSigningCertificate: '?string',
      jwtTextSubject: '?string',
      jwtValidityPeriodSeconds: '?number',
      label: 'string',
      oauthRefreshToken: '?string',
      oauthScope: '?string',
      oauthToken: '?string',
      password: '?string',
      principalType: 'string',
      privateConnection: '?string',
      protocol: 'string',
      username: '?string'
    },
    extends: 'Metadata'
  },
  NavigationMenu: {
    type: 'NavigationMenu',
    props: {
      container: 'string',
      containerType: 'string',
      label: 'string',
      navigationMenuItem: ['NavigationMenuItem']
    },
    extends: 'Metadata'
  },
  Network: {
    type: 'Network',
    props: {
      allowInternalUserLogin: '?boolean',
      allowMembersToFlag: '?boolean',
      allowedExtensions: '?string',
      caseCommentEmailTemplate: '?string',
      changePasswordTemplate: 'string',
      communityRoles: '?CommunityRoles',
      description: '?string',
      disableReputationRecordConversations: '?boolean',
      emailFooterLogo: '?string',
      emailFooterText: '?string',
      emailSenderAddress: 'string',
      emailSenderName: 'string',
      enableCustomVFErrorPageOverrides: '?boolean',
      enableDirectMessages: '?boolean',
      enableGuestChatter: '?boolean',
      enableGuestFileAccess: '?boolean',
      enableGuestMemberVisibility: '?boolean',
      enableInvitation: '?boolean',
      enableKnowledgeable: '?boolean',
      enableMemberVisibility: '?boolean',
      enableNicknameDisplay: '?boolean',
      enablePrivateMessages: '?boolean',
      enableReputation: '?boolean',
      enableShowAllNetworkSettings: '?boolean',
      enableSiteAsContainer: '?boolean',
      enableTalkingAboutStats: '?boolean',
      enableTopicAssignmentRules: '?boolean',
      enableTopicSuggestions: '?boolean',
      enableUpDownVote: '?boolean',
      feedChannel: '?string',
      forgotPasswordTemplate: 'string',
      gatherCustomerSentimentData: '?boolean',
      lockoutTemplate: '?string',
      logoutUrl: '?string',
      maxFileSizeKb: '?number',
      navigationLinkSet: '?NavigationLinkSet',
      networkMemberGroups: '?NetworkMemberGroup',
      networkPageOverrides: '?NetworkPageOverride',
      newSenderAddress: '?string',
      picassoSite: '?string',
      recommendationAudience: '?RecommendationAudience',
      recommendationDefinition: '?RecommendationDefinition',
      reputationLevels: '?ReputationLevelDefinitions',
      reputationPointsRules: '?ReputationPointsRules',
      selfRegProfile: '?string',
      selfRegistration: '?boolean',
      sendWelcomeEmail: '?boolean',
      site: 'string',
      status: 'string',
      tabs: 'NetworkTabSet',
      urlPathPrefix: '?string',
      verificationTemplate: '?string',
      welcomeTemplate: 'string'
    },
    extends: 'Metadata'
  },
  CommunityRoles: {
    type: 'CommunityRoles',
    props: {
      customerUserRole: '?string',
      employeeUserRole: '?string',
      partnerUserRole: '?string'
    }
  },
  NetworkMemberGroup: {
    type: 'NetworkMemberGroup',
    props: {
      permissionSet: ['string'],
      profile: ['string']
    }
  },
  NetworkPageOverride: {
    type: 'NetworkPageOverride',
    props: {
      changePasswordPageOverrideSetting: '?string',
      forgotPasswordPageOverrideSetting: '?string',
      homePageOverrideSetting: '?string',
      loginPageOverrideSetting: '?string',
      selfRegProfilePageOverrideSetting: '?string'
    }
  },
  RecommendationAudience: {
    type: 'RecommendationAudience',
    props: {
      recommendationAudienceDetails: ['RecommendationAudienceDetail']
    }
  },
  RecommendationAudienceDetail: {
    type: 'RecommendationAudienceDetail',
    props: {
      audienceCriteriaType: '?string',
      audienceCriteriaValue: '?string',
      setupName: '?string'
    }
  },
  RecommendationDefinition: {
    type: 'RecommendationDefinition',
    props: {
      recommendationDefinitionDetails: ['RecommendationDefinitionDetail']
    }
  },
  RecommendationDefinitionDetail: {
    type: 'RecommendationDefinitionDetail',
    props: {
      actionUrl: '?string',
      description: '?string',
      linkText: '?string',
      scheduledRecommendations: '?ScheduledRecommendation',
      setupName: '?string',
      title: '?string'
    }
  },
  ScheduledRecommendation: {
    type: 'ScheduledRecommendation',
    props: {
      scheduledRecommendationDetails: ['ScheduledRecommendationDetail']
    }
  },
  ScheduledRecommendationDetail: {
    type: 'ScheduledRecommendationDetail',
    props: {
      channel: '?string',
      enabled: '?boolean',
      rank: '?number',
      recommendationAudience: '?string'
    }
  },
  ReputationLevelDefinitions: {
    type: 'ReputationLevelDefinitions',
    props: {
      level: ['ReputationLevel']
    }
  },
  ReputationLevel: {
    type: 'ReputationLevel',
    props: {
      branding: '?ReputationBranding',
      label: '?string',
      lowerThreshold: 'number'
    }
  },
  ReputationBranding: {
    type: 'ReputationBranding',
    props: {
      smallImage: '?string'
    }
  },
  ReputationPointsRules: {
    type: 'ReputationPointsRules',
    props: {
      pointsRule: ['ReputationPointsRule']
    }
  },
  ReputationPointsRule: {
    type: 'ReputationPointsRule',
    props: {
      eventType: 'string',
      points: 'number'
    }
  },
  NetworkTabSet: {
    type: 'NetworkTabSet',
    props: {
      customTab: ['string'],
      defaultTab: 'string',
      standardTab: ['string']
    }
  },
  NotificationsSettings: {
    type: 'NotificationsSettings',
    props: {
      enableMobileAppPushNotifications: '?boolean',
      enableNotifications: '?boolean'
    },
    extends: 'Metadata'
  },
  OauthCustomScope: {
    type: 'OauthCustomScope',
    props: {
      description: 'string',
      developerName: 'string',
      isProtected: '?boolean',
      isPublic: '?boolean',
      masterLabel: 'string'
    },
    extends: 'Metadata'
  },
  ObjectLinkingSettings: {
    type: 'ObjectLinkingSettings',
    props: {
      enableObjectLinking: '?boolean'
    },
    extends: 'Metadata'
  },
  OmniChannelSettings: {
    type: 'OmniChannelSettings',
    props: {
      enableOmniAutoLoginPrompt: '?boolean',
      enableOmniChannel: '?boolean',
      enableOmniSecondaryRoutingPriority: '?boolean',
      enableOmniSkillsRouting: '?boolean'
    },
    extends: 'Metadata'
  },
  OpportunitySettings: {
    type: 'OpportunitySettings',
    props: {
      autoActivateNewReminders: '?boolean',
      customizableProductSchedulesEnabled: '?boolean',
      doesAutoAddSplitOwnerAsOpportunityTeamMember: '?boolean',
      doesEnforceStandardOpportunitySaveLogic: '?boolean',
      enableFindSimilarOpportunities: '?boolean',
      enableOpportunityFieldHistoryTracking: '?boolean',
      enableOpportunityInsightsInMobile: '?boolean',
      enableOpportunityTeam: '?boolean',
      enableUpdateReminders: '?boolean',
      findSimilarOppFilter: '?FindSimilarOppFilter',
      promptToAddProducts: '?boolean'
    },
    extends: 'Metadata'
  },
  FindSimilarOppFilter: {
    type: 'FindSimilarOppFilter',
    props: {
      similarOpportunitiesDisplayColumns: ['string'],
      similarOpportunitiesMatchFields: ['string']
    }
  },
  OrchestrationContext: {
    type: 'OrchestrationContext',
    props: {
      datasets: ['OrchestrationContextDataset'],
      description: '?string',
      events: ['OrchestrationContextEvent'],
      imageFile: 'string',
      imageScale: 'number',
      masterLabel: 'string',
      runtimeType: 'string',
      salesforceObject: '?string',
      salesforceObjectPrimaryKey: '?string'
    },
    extends: 'Metadata'
  },
  OrchestrationContextDataset: {
    type: 'OrchestrationContextDataset',
    props: {
      datasetType: 'string',
      orchestrationDataset: 'string'
    }
  },
  OrchestrationContextEvent: {
    type: 'OrchestrationContextEvent',
    props: {
      eventType: 'string',
      orchestrationEvent: 'string',
      platformEvent: 'string',
      platformEventPrimaryKey: 'string'
    }
  },
  OrderManagementSettings: {
    type: 'OrderManagementSettings',
    props: {
      enableOrderManagement: '?boolean'
    },
    extends: 'Metadata'
  },
  OrderSettings: {
    type: 'OrderSettings',
    props: {
      enableNegativeQuantity: '?boolean',
      enableOrders: '?boolean',
      enableReductionOrders: '?boolean',
      enableZeroQuantity: '?boolean'
    },
    extends: 'Metadata'
  },
  OrgPreferenceSettings: {
    type: 'OrgPreferenceSettings',
    props: {
      preferences: ['OrganizationSettingsDetail']
    },
    extends: 'Metadata'
  },
  OrganizationSettingsDetail: {
    type: 'OrganizationSettingsDetail',
    props: {
      settingName: 'string',
      settingValue: 'boolean'
    }
  },
  OrgSettings: {
    type: 'OrgSettings',
    props: {
      enableCustomerSuccessPortal: '?boolean',
      enableExtendedMailMerge: '?boolean',
      enableIncludeContractStatus: '?boolean',
      enableMakeDeploymentsMandatory: '?boolean',
      enableManageSelfServiceUsers: '?boolean',
      enableOrgFeedSentimentAnalysis: '?boolean',
      enableRADeploymentAttributeOnly: '?boolean',
      enableResetDivisionOnLogin: '?boolean',
      saveMailMergeDocsAsSalesforceDocs: '?boolean'
    },
    extends: 'Metadata'
  },
  Package: {
    type: 'Package',
    props: {
      apiAccessLevel: '?string',
      description: '?string',
      namespacePrefix: '?string',
      objectPermissions: ['ProfileObjectPermissions'],
      packageType: '?string',
      postInstallClass: '?string',
      setupWeblink: '?string',
      types: ['PackageTypeMembers'],
      uninstallClass: '?string',
      version: 'string'
    },
    extends: 'Metadata'
  },
  ProfileObjectPermissions: {
    type: 'ProfileObjectPermissions',
    props: {
      allowCreate: '?boolean',
      allowDelete: '?boolean',
      allowEdit: '?boolean',
      allowRead: '?boolean',
      modifyAllRecords: '?boolean',
      object: 'string',
      viewAllRecords: '?boolean'
    }
  },
  PackageTypeMembers: {
    type: 'PackageTypeMembers',
    props: {
      members: ['string'],
      name: 'string'
    }
  },
  PardotEinsteinSettings: {
    type: 'PardotEinsteinSettings',
    props: {
      enableCampaignInsight: '?boolean',
      enableEngagementScore: '?boolean'
    },
    extends: 'Metadata'
  },
  PardotSettings: {
    type: 'PardotSettings',
    props: {
      enableB2bmaAppEnabled: '?boolean',
      enableEngagementHistoryDashboards: '?boolean',
      enablePardotAppV1Enabled: '?boolean',
      enablePardotEnabled: '?boolean',
      enableProspectActivityDataset: '?boolean'
    },
    extends: 'Metadata'
  },
  PartyDataModelSettings: {
    type: 'PartyDataModelSettings',
    props: {
      enableAutoSelectIndividualOnMerge: '?boolean',
      enableConsentManagement: '?boolean'
    },
    extends: 'Metadata'
  },
  PathAssistant: {
    type: 'PathAssistant',
    props: {
      active: 'boolean',
      entityName: 'string',
      fieldName: 'string',
      masterLabel: 'string',
      pathAssistantSteps: ['PathAssistantStep'],
      recordTypeName: 'string'
    },
    extends: 'Metadata'
  },
  PathAssistantStep: {
    type: 'PathAssistantStep',
    props: {
      fieldNames: ['string'],
      info: '?string',
      picklistValueName: 'string'
    }
  },
  PathAssistantSettings: {
    type: 'PathAssistantSettings',
    props: {
      canOverrideAutoPathCollapseWithUserPref: '?boolean',
      pathAssistantEnabled: '?boolean'
    },
    extends: 'Metadata'
  },
  PermissionSet: {
    type: 'PermissionSet',
    props: {
      applicationVisibilities: ['PermissionSetApplicationVisibility'],
      classAccesses: ['PermissionSetApexClassAccess'],
      customMetadataTypeAccesses: ['PermissionSetCustomMetadataTypeAccess'],
      customPermissions: ['PermissionSetCustomPermissions'],
      description: '?string',
      externalDataSourceAccesses: ['PermissionSetExternalDataSourceAccess'],
      fieldPermissions: ['PermissionSetFieldPermissions'],
      flowAccesses: ['PermissionSetFlowAccess'],
      hasActivationRequired: '?boolean',
      label: 'string',
      license: '?string',
      objectPermissions: ['PermissionSetObjectPermissions'],
      pageAccesses: ['PermissionSetApexPageAccess'],
      recordTypeVisibilities: ['PermissionSetRecordTypeVisibility'],
      tabSettings: ['PermissionSetTabSetting'],
      userPermissions: ['PermissionSetUserPermission']
    },
    extends: 'Metadata'
  },
  PermissionSetApplicationVisibility: {
    type: 'PermissionSetApplicationVisibility',
    props: {
      application: 'string',
      visible: 'boolean'
    }
  },
  PermissionSetApexClassAccess: {
    type: 'PermissionSetApexClassAccess',
    props: {
      apexClass: 'string',
      enabled: 'boolean'
    }
  },
  PermissionSetCustomMetadataTypeAccess: {
    type: 'PermissionSetCustomMetadataTypeAccess',
    props: {
      enabled: 'boolean',
      name: 'string'
    }
  },
  PermissionSetCustomPermissions: {
    type: 'PermissionSetCustomPermissions',
    props: {
      enabled: 'boolean',
      name: 'string'
    }
  },
  PermissionSetExternalDataSourceAccess: {
    type: 'PermissionSetExternalDataSourceAccess',
    props: {
      enabled: 'boolean',
      externalDataSource: 'string'
    }
  },
  PermissionSetFieldPermissions: {
    type: 'PermissionSetFieldPermissions',
    props: {
      editable: 'boolean',
      field: 'string',
      readable: '?boolean'
    }
  },
  PermissionSetFlowAccess: {
    type: 'PermissionSetFlowAccess',
    props: {
      enabled: 'boolean',
      flow: 'string'
    }
  },
  PermissionSetObjectPermissions: {
    type: 'PermissionSetObjectPermissions',
    props: {
      allowCreate: 'boolean',
      allowDelete: 'boolean',
      allowEdit: 'boolean',
      allowRead: 'boolean',
      modifyAllRecords: 'boolean',
      object: 'string',
      viewAllRecords: 'boolean'
    }
  },
  PermissionSetApexPageAccess: {
    type: 'PermissionSetApexPageAccess',
    props: {
      apexPage: 'string',
      enabled: 'boolean'
    }
  },
  PermissionSetRecordTypeVisibility: {
    type: 'PermissionSetRecordTypeVisibility',
    props: {
      recordType: 'string',
      visible: 'boolean'
    }
  },
  PermissionSetTabSetting: {
    type: 'PermissionSetTabSetting',
    props: {
      tab: 'string',
      visibility: 'string'
    }
  },
  PermissionSetUserPermission: {
    type: 'PermissionSetUserPermission',
    props: {
      enabled: 'boolean',
      name: 'string'
    }
  },
  MutingPermissionSet: {
    type: 'MutingPermissionSet',
    props: {
      label: 'string'
    },
    extends: 'PermissionSet'
  },
  PermissionSetGroup: {
    type: 'PermissionSetGroup',
    props: {
      description: '?string',
      label: 'string',
      mutingPermissionSets: ['string'],
      permissionSets: ['string'],
      status: '?string'
    },
    extends: 'Metadata'
  },
  PersonListSettings: {
    type: 'PersonListSettings',
    props: {
      enablePersonList: 'boolean'
    },
    extends: 'Metadata'
  },
  PicklistSettings: {
    type: 'PicklistSettings',
    props: {
      isPicklistApiNameEditDisabled: '?boolean'
    },
    extends: 'Metadata'
  },
  PlatformCachePartition: {
    type: 'PlatformCachePartition',
    props: {
      description: '?string',
      isDefaultPartition: 'boolean',
      masterLabel: 'string',
      platformCachePartitionTypes: ['PlatformCachePartitionType']
    },
    extends: 'Metadata'
  },
  PlatformCachePartitionType: {
    type: 'PlatformCachePartitionType',
    props: {
      allocatedCapacity: 'number',
      allocatedPurchasedCapacity: 'number',
      allocatedTrialCapacity: 'number',
      cacheType: 'string'
    }
  },
  PlatformEncryptionSettings: {
    type: 'PlatformEncryptionSettings',
    props: {
      canEncryptManagedPackageFields: '?boolean',
      enableDeterministicEncryption: '?boolean',
      enableEncryptFieldHistory: '?boolean',
      enableEventBusEncryption: '?boolean',
      isMEKForEncryptionRequired: '?boolean',
      isUseHighAssuranceKeysRequired: '?boolean'
    },
    extends: 'Metadata'
  },
  PlatformEventChannel: {
    type: 'PlatformEventChannel',
    props: {
      channelType: 'string',
      label: 'string'
    },
    extends: 'Metadata'
  },
  PlatformEventChannelMember: {
    type: 'PlatformEventChannelMember',
    props: {
      eventChannel: 'string',
      selectedEntity: 'string'
    },
    extends: 'Metadata'
  },
  Portal: {
    type: 'Portal',
    props: {
      active: 'boolean',
      admin: '?string',
      defaultLanguage: '?string',
      description: '?string',
      emailSenderAddress: 'string',
      emailSenderName: 'string',
      enableSelfCloseCase: '?boolean',
      footerDocument: '?string',
      forgotPassTemplate: '?string',
      headerDocument: '?string',
      isSelfRegistrationActivated: '?boolean',
      loginHeaderDocument: '?string',
      logoDocument: '?string',
      logoutUrl: '?string',
      newCommentTemplate: '?string',
      newPassTemplate: '?string',
      newUserTemplate: '?string',
      ownerNotifyTemplate: '?string',
      selfRegNewUserUrl: '?string',
      selfRegUserDefaultProfile: '?string',
      selfRegUserDefaultRole: '?string',
      selfRegUserTemplate: '?string',
      showActionConfirmation: '?boolean',
      stylesheetDocument: '?string',
      type: 'string'
    },
    extends: 'Metadata'
  },
  PostTemplate: {
    type: 'PostTemplate',
    props: {
      default: '?boolean',
      description: '?string',
      fields: ['string'],
      label: 'string'
    },
    extends: 'Metadata'
  },
  PresenceDeclineReason: {
    type: 'PresenceDeclineReason',
    props: {
      label: 'string'
    },
    extends: 'Metadata'
  },
  PresenceUserConfig: {
    type: 'PresenceUserConfig',
    props: {
      assignments: '?PresenceConfigAssignments',
      capacity: 'number',
      declineReasons: ['string'],
      enableAutoAccept: '?boolean',
      enableDecline: '?boolean',
      enableDeclineReason: '?boolean',
      enableDisconnectSound: '?boolean',
      enableRequestSound: '?boolean',
      label: 'string',
      presenceStatusOnDecline: '?string',
      presenceStatusOnPushTimeout: '?string'
    },
    extends: 'Metadata'
  },
  PresenceConfigAssignments: {
    type: 'PresenceConfigAssignments',
    props: {
      profiles: '?PresenceConfigProfileAssignments',
      users: '?PresenceConfigUserAssignments'
    }
  },
  PresenceConfigProfileAssignments: {
    type: 'PresenceConfigProfileAssignments',
    props: {
      profile: ['string']
    }
  },
  PresenceConfigUserAssignments: {
    type: 'PresenceConfigUserAssignments',
    props: {
      user: ['string']
    }
  },
  PrivacySettings: {
    type: 'PrivacySettings',
    props: {
      enableConsentAuditTrail: '?boolean',
      enableConsentEventStream: '?boolean',
      enableDefaultMetadataValues: '?boolean'
    },
    extends: 'Metadata'
  },
  PrivateConnection: {
    type: 'PrivateConnection',
    props: {
      description: '?string',
      direction: 'string',
      externalConnectionProperties: ['ExternalConnectionProperty'],
      label: 'string',
      status: 'string',
      type: 'string'
    },
    extends: 'Metadata'
  },
  ExternalConnectionProperty: {
    type: 'ExternalConnectionProperty',
    props: {
      propertyName: 'string',
      propertyValue: 'string'
    }
  },
  ProductSettings: {
    type: 'ProductSettings',
    props: {
      enableCascadeActivateToRelatedPrices: '?boolean',
      enableMySettings: '?boolean',
      enableQuantitySchedule: '?boolean',
      enableRevenueSchedule: '?boolean'
    },
    extends: 'Metadata'
  },
  Profile: {
    type: 'Profile',
    props: {
      applicationVisibilities: ['ProfileApplicationVisibility'],
      categoryGroupVisibilities: ['ProfileCategoryGroupVisibility'],
      classAccesses: ['ProfileApexClassAccess'],
      custom: '?boolean',
      customMetadataTypeAccesses: ['ProfileCustomMetadataTypeAccess'],
      customPermissions: ['ProfileCustomPermissions'],
      description: '?string',
      externalDataSourceAccesses: ['ProfileExternalDataSourceAccess'],
      fieldPermissions: ['ProfileFieldLevelSecurity'],
      flowAccesses: ['ProfileFlowAccess'],
      layoutAssignments: ['ProfileLayoutAssignment'],
      loginHours: '?ProfileLoginHours',
      loginIpRanges: ['ProfileLoginIpRange'],
      objectPermissions: ['ProfileObjectPermissions'],
      pageAccesses: ['ProfileApexPageAccess'],
      profileActionOverrides: ['ProfileActionOverride'],
      recordTypeVisibilities: ['ProfileRecordTypeVisibility'],
      tabVisibilities: ['ProfileTabVisibility'],
      userLicense: '?string',
      userPermissions: ['ProfileUserPermission']
    },
    extends: 'Metadata'
  },
  ProfileApplicationVisibility: {
    type: 'ProfileApplicationVisibility',
    props: {
      application: 'string',
      default: 'boolean',
      visible: 'boolean'
    }
  },
  ProfileCategoryGroupVisibility: {
    type: 'ProfileCategoryGroupVisibility',
    props: {
      dataCategories: ['string'],
      dataCategoryGroup: 'string',
      visibility: 'string'
    }
  },
  ProfileApexClassAccess: {
    type: 'ProfileApexClassAccess',
    props: {
      apexClass: 'string',
      enabled: 'boolean'
    }
  },
  ProfileCustomMetadataTypeAccess: {
    type: 'ProfileCustomMetadataTypeAccess',
    props: {
      enabled: 'boolean',
      name: 'string'
    }
  },
  ProfileCustomPermissions: {
    type: 'ProfileCustomPermissions',
    props: {
      enabled: 'boolean',
      name: 'string'
    }
  },
  ProfileExternalDataSourceAccess: {
    type: 'ProfileExternalDataSourceAccess',
    props: {
      enabled: 'boolean',
      externalDataSource: 'string'
    }
  },
  ProfileFieldLevelSecurity: {
    type: 'ProfileFieldLevelSecurity',
    props: {
      editable: 'boolean',
      field: 'string',
      readable: '?boolean'
    }
  },
  ProfileFlowAccess: {
    type: 'ProfileFlowAccess',
    props: {
      enabled: 'boolean',
      flow: 'string'
    }
  },
  ProfileLayoutAssignment: {
    type: 'ProfileLayoutAssignment',
    props: {
      layout: 'string',
      recordType: '?string'
    }
  },
  ProfileLoginHours: {
    type: 'ProfileLoginHours',
    props: {
      fridayEnd: '?string',
      fridayStart: '?string',
      mondayEnd: '?string',
      mondayStart: '?string',
      saturdayEnd: '?string',
      saturdayStart: '?string',
      sundayEnd: '?string',
      sundayStart: '?string',
      thursdayEnd: '?string',
      thursdayStart: '?string',
      tuesdayEnd: '?string',
      tuesdayStart: '?string',
      wednesdayEnd: '?string',
      wednesdayStart: '?string'
    }
  },
  ProfileLoginIpRange: {
    type: 'ProfileLoginIpRange',
    props: {
      description: '?string',
      endAddress: 'string',
      startAddress: 'string'
    }
  },
  ProfileApexPageAccess: {
    type: 'ProfileApexPageAccess',
    props: {
      apexPage: 'string',
      enabled: 'boolean'
    }
  },
  ProfileRecordTypeVisibility: {
    type: 'ProfileRecordTypeVisibility',
    props: {
      default: 'boolean',
      personAccountDefault: '?boolean',
      recordType: 'string',
      visible: 'boolean'
    }
  },
  ProfileTabVisibility: {
    type: 'ProfileTabVisibility',
    props: {
      tab: 'string',
      visibility: 'string'
    }
  },
  ProfileUserPermission: {
    type: 'ProfileUserPermission',
    props: {
      enabled: 'boolean',
      name: 'string'
    }
  },
  ProfilePasswordPolicy: {
    type: 'ProfilePasswordPolicy',
    props: {
      forgotPasswordRedirect: '?boolean',
      lockoutInterval: 'number',
      maxLoginAttempts: 'number',
      minimumPasswordLength: 'number',
      minimumPasswordLifetime: '?boolean',
      obscure: '?boolean',
      passwordComplexity: 'number',
      passwordExpiration: 'number',
      passwordHistory: 'number',
      passwordQuestion: 'number',
      profile: 'string'
    },
    extends: 'Metadata'
  },
  ProfileSessionSetting: {
    type: 'ProfileSessionSetting',
    props: {
      externalCommunityUserIdentityVerif: 'boolean',
      forceLogout: 'boolean',
      profile: 'string',
      requiredSessionLevel: '?string',
      sessionPersistence: 'boolean',
      sessionTimeout: 'number',
      sessionTimeoutWarning: 'boolean'
    },
    extends: 'Metadata'
  },
  Prompt: {
    type: 'Prompt',
    props: {
      masterLabel: 'string',
      promptVersions: ['PromptVersion']
    },
    extends: 'Metadata'
  },
  PromptVersion: {
    type: 'PromptVersion',
    props: {
      actionButtonLabel: '?string',
      actionButtonLink: '?string',
      body: 'string',
      customApplication: '?string',
      delayDays: 'number',
      description: '?string',
      dismissButtonLabel: '?string',
      displayPosition: '?string',
      displayType: 'string',
      endDate: '?string',
      header: '?string',
      indexWithIsPublished: '?string',
      indexWithoutIsPublished: '?string',
      isPublished: '?boolean',
      masterLabel: 'string',
      publishedByUser: '?string',
      publishedDate: '?string',
      shouldDisplayActionButton: 'boolean',
      startDate: 'string',
      targetAppDeveloperName: 'string',
      targetAppNamespacePrefix: '?string',
      targetPageKey1: 'string',
      targetPageKey2: '?string',
      targetPageType: 'string',
      timesToDisplay: 'number',
      title: 'string',
      uiFormulaRule: '?UiFormulaRule',
      userAccess: 'string',
      versionNumber: 'number'
    }
  },
  Queue: {
    type: 'Queue',
    props: {
      doesSendEmailToMembers: '?boolean',
      email: '?string',
      name: 'string',
      queueMembers: '?QueueMembers',
      queueRoutingConfig: '?string',
      queueSobject: ['QueueSobject']
    },
    extends: 'Metadata'
  },
  QueueMembers: {
    type: 'QueueMembers',
    props: {
      publicGroups: '?PublicGroups',
      roleAndSubordinates: '?RoleAndSubordinates',
      roleAndSubordinatesInternal: '?RoleAndSubordinatesInternal',
      roles: '?Roles',
      users: '?Users'
    }
  },
  PublicGroups: {
    type: 'PublicGroups',
    props: {
      publicGroup: ['string']
    }
  },
  RoleAndSubordinates: {
    type: 'RoleAndSubordinates',
    props: {
      roleAndSubordinate: ['string']
    }
  },
  RoleAndSubordinatesInternal: {
    type: 'RoleAndSubordinatesInternal',
    props: {
      roleAndSubordinateInternal: ['string']
    }
  },
  Roles: {
    type: 'Roles',
    props: {
      role: ['string']
    }
  },
  Users: {
    type: 'Users',
    props: {
      user: ['string']
    }
  },
  QueueSobject: {
    type: 'QueueSobject',
    props: {
      sobjectType: 'string'
    }
  },
  QueueRoutingConfig: {
    type: 'QueueRoutingConfig',
    props: {
      capacityPercentage: '?number',
      capacityWeight: '?number',
      dropAdditionalSkillsTimeout: '?number',
      isAttributeBased: '?boolean',
      label: 'string',
      pushTimeout: '?number',
      queueOverflowAssignee: '?string',
      routingModel: 'string',
      routingPriority: 'number',
      userOverflowAssignee: '?string'
    },
    extends: 'Metadata'
  },
  QuickAction: {
    type: 'QuickAction',
    props: {
      canvas: '?string',
      description: '?string',
      fieldOverrides: ['FieldOverride'],
      flowDefinition: '?string',
      height: '?number',
      icon: '?string',
      isProtected: '?boolean',
      label: '?string',
      lightningComponent: '?string',
      mobExtDisplayMode: '?string',
      optionsCreateFeedItem: 'boolean',
      page: '?string',
      quickActionLayout: '?QuickActionLayout',
      quickActionSendEmailOptions: '?QuickActionSendEmailOptions',
      standardLabel: '?string',
      successMessage: '?string',
      targetObject: '?string',
      targetParentField: '?string',
      targetRecordType: '?string',
      type: 'string',
      width: '?number'
    },
    extends: 'Metadata'
  },
  FieldOverride: {
    type: 'FieldOverride',
    props: {
      field: 'string',
      formula: '?string',
      literalValue: '?string'
    }
  },
  QuickActionLayout: {
    type: 'QuickActionLayout',
    props: {
      layoutSectionStyle: 'string',
      quickActionLayoutColumns: ['QuickActionLayoutColumn']
    }
  },
  QuickActionLayoutColumn: {
    type: 'QuickActionLayoutColumn',
    props: {
      quickActionLayoutItems: ['QuickActionLayoutItem']
    }
  },
  QuickActionLayoutItem: {
    type: 'QuickActionLayoutItem',
    props: {
      emptySpace: '?boolean',
      field: '?string',
      uiBehavior: '?string'
    }
  },
  QuickActionSendEmailOptions: {
    type: 'QuickActionSendEmailOptions',
    props: {
      defaultEmailTemplateName: '?string',
      ignoreDefaultEmailTemplateSubject: 'boolean'
    }
  },
  QuoteSettings: {
    type: 'QuoteSettings',
    props: {
      enableQuote: 'boolean',
      enableQuotesWithoutOppEnabled: '?boolean'
    },
    extends: 'Metadata'
  },
  RecommendationStrategy: {
    type: 'RecommendationStrategy',
    props: {
      actionContext: ['StrategyAction'],
      contextRecordType: '?string',
      description: '?string',
      filter: ['StrategyNodeFilter'],
      if: ['StrategyNodeIf'],
      invocableAction: ['StrategyNodeInvocableAction'],
      isTemplate: '?boolean',
      label: 'string',
      map: ['StrategyNodeMap'],
      mutuallyExclusive: ['StrategyNodeExclusive'],
      onBehalfOfExpression: '?string',
      recommendationLimit: ['StrategyNodeRecommendationLimit'],
      recommendationLoad: ['StrategyNodeRecommendationLoad'],
      sort: ['StrategyNodeSort'],
      union: ['StrategyNodeUnion']
    },
    extends: 'Metadata'
  },
  StrategyAction: {
    type: 'StrategyAction',
    props: {
      action: 'string',
      argument: ['StrategyActionArg'],
      description: '?string',
      label: '?string',
      name: 'string',
      type: 'string'
    }
  },
  StrategyActionArg: {
    type: 'StrategyActionArg',
    props: {
      name: 'string',
      value: 'string'
    }
  },
  StrategyNodeFilter: {
    type: 'StrategyNodeFilter',
    props: {
      expression: 'string'
    },
    extends: 'StrategyNodeUnionBase'
  },
  StrategyNodeUnionBase: {
    type: 'StrategyNodeUnionBase',
    props: {
      limit: '?number'
    },
    extends: 'StrategyNodeBase'
  },
  StrategyNodeBase: {
    type: 'StrategyNodeBase',
    props: {
      childNode: ['string'],
      description: '?string',
      label: '?string',
      name: 'string'
    }
  },
  StrategyNodeExclusive: {
    type: 'StrategyNodeExclusive',
    props: {},
    extends: 'StrategyNodeUnionBase'
  },
  StrategyNodeIf: {
    type: 'StrategyNodeIf',
    props: {
      childNodeExpression: ['IfExpression'],
      onlyFirstMatch: '?boolean'
    },
    extends: 'StrategyNodeUnionBase'
  },
  IfExpression: {
    type: 'IfExpression',
    props: {
      childName: 'string',
      expression: 'string'
    }
  },
  StrategyNodeInvocableAction: {
    type: 'StrategyNodeInvocableAction',
    props: {
      action: 'string',
      argument: ['StrategyNodeInvocableActionArg'],
      isGenerator: 'boolean',
      type: 'string'
    },
    extends: 'StrategyNodeUnionBase'
  },
  StrategyNodeInvocableActionArg: {
    type: 'StrategyNodeInvocableActionArg',
    props: {
      name: 'string',
      value: 'string'
    }
  },
  StrategyNodeMap: {
    type: 'StrategyNodeMap',
    props: {
      mapExpression: ['MapExpression']
    },
    extends: 'StrategyNodeUnionBase'
  },
  MapExpression: {
    type: 'MapExpression',
    props: {
      expression: 'string',
      name: 'string',
      type: 'string'
    }
  },
  StrategyNodeRecommendationLimit: {
    type: 'StrategyNodeRecommendationLimit',
    props: {
      filterMode: ['string'],
      lookbackDuration: '?number',
      maxRecommendationCount: '?number'
    },
    extends: 'StrategyNodeUnionBase'
  },
  StrategyNodeRecommendationLoad: {
    type: 'StrategyNodeRecommendationLoad',
    props: {
      condition: ['RecommendationLoadCondition'],
      conditionLogic: '?string'
    },
    extends: 'StrategyNodeUnionBase'
  },
  RecommendationLoadCondition: {
    type: 'RecommendationLoadCondition',
    props: {
      field: 'string',
      operator: 'string',
      value: 'RecommendationConditionValue'
    }
  },
  RecommendationConditionValue: {
    type: 'RecommendationConditionValue',
    props: {
      type: 'string',
      value: '?string'
    }
  },
  StrategyNodeSort: {
    type: 'StrategyNodeSort',
    props: {
      field: ['StrategyNodeSortField']
    },
    extends: 'StrategyNodeUnionBase'
  },
  StrategyNodeSortField: {
    type: 'StrategyNodeSortField',
    props: {
      name: 'string',
      nullsFirst: '?boolean',
      order: '?string'
    }
  },
  StrategyNodeUnion: {
    type: 'StrategyNodeUnion',
    props: {},
    extends: 'StrategyNodeUnionBase'
  },
  RecordActionDeployment: {
    type: 'RecordActionDeployment',
    props: {
      channelConfigurations: ['RecordActionDeploymentChannel'],
      deploymentContexts: ['RecordActionDeploymentContext'],
      hasGuidedActions: '?boolean',
      hasRecommendations: '?boolean',
      masterLabel: 'string',
      recommendation: '?RecordActionRecommendation',
      selectableItems: ['RecordActionSelectableItem']
    },
    extends: 'Metadata'
  },
  RecordActionDeploymentChannel: {
    type: 'RecordActionDeploymentChannel',
    props: {
      channel: 'string',
      channelItems: ['RecordActionDefaultItem'],
      isAutopopEnabled: '?boolean'
    }
  },
  RecordActionDefaultItem: {
    type: 'RecordActionDefaultItem',
    props: {
      action: 'string',
      isMandatory: '?boolean',
      isUiRemoveHidden: '?boolean',
      pinned: 'string',
      position: 'number',
      type: 'string'
    }
  },
  RecordActionDeploymentContext: {
    type: 'RecordActionDeploymentContext',
    props: {
      entityName: 'string',
      recommendationStrategy: '?string'
    }
  },
  RecordActionRecommendation: {
    type: 'RecordActionRecommendation',
    props: {
      defaultStrategy: '?string',
      hasDescription: 'boolean',
      hasImage: 'boolean',
      hasRejectAction: 'boolean',
      hasTitle: 'boolean',
      maxDisplayRecommendations: 'number'
    }
  },
  RecordActionSelectableItem: {
    type: 'RecordActionSelectableItem',
    props: {
      action: 'string',
      type: 'string'
    }
  },
  RecordPageSettings: {
    type: 'RecordPageSettings',
    props: {
      enableActivityRelatedList: '?boolean',
      enableFullRecordView: '?boolean'
    },
    extends: 'Metadata'
  },
  RemoteSiteSetting: {
    type: 'RemoteSiteSetting',
    props: {
      description: '?string',
      disableProtocolSecurity: 'boolean',
      isActive: 'boolean',
      url: 'string'
    },
    extends: 'Metadata'
  },
  Report: {
    type: 'Report',
    props: {
      aggregates: ['ReportAggregate'],
      block: ['Report'],
      blockInfo: '?ReportBlockInfo',
      buckets: ['ReportBucketField'],
      chart: '?ReportChart',
      colorRanges: ['ReportColorRange'],
      columns: ['ReportColumn'],
      crossFilters: ['ReportCrossFilter'],
      currency: '?string',
      customDetailFormulas: ['ReportCustomDetailFormula'],
      dataCategoryFilters: ['ReportDataCategoryFilter'],
      description: '?string',
      division: '?string',
      filter: '?ReportFilter',
      folderName: '?string',
      format: 'string',
      formattingRules: ['ReportFormattingRule'],
      groupingsAcross: ['ReportGrouping'],
      groupingsDown: ['ReportGrouping'],
      historicalSelector: '?ReportHistoricalSelector',
      name: 'string',
      numSubscriptions: '?number',
      params: ['ReportParam'],
      reportType: 'string',
      roleHierarchyFilter: '?string',
      rowLimit: '?number',
      scope: '?string',
      showCurrentDate: '?boolean',
      showDetails: '?boolean',
      showGrandTotal: '?boolean',
      showSubTotals: '?boolean',
      sortColumn: '?string',
      sortOrder: '?string',
      territoryHierarchyFilter: '?string',
      timeFrameFilter: '?ReportTimeFrameFilter',
      userFilter: '?string'
    },
    extends: 'Metadata'
  },
  ReportAggregate: {
    type: 'ReportAggregate',
    props: {
      acrossGroupingContext: '?string',
      calculatedFormula: 'string',
      datatype: 'string',
      description: '?string',
      developerName: 'string',
      downGroupingContext: '?string',
      isActive: 'boolean',
      isCrossBlock: '?boolean',
      masterLabel: 'string',
      reportType: '?string',
      scale: '?number'
    }
  },
  ReportBlockInfo: {
    type: 'ReportBlockInfo',
    props: {
      aggregateReferences: ['ReportAggregateReference'],
      blockId: 'string',
      joinTable: 'string'
    }
  },
  ReportAggregateReference: {
    type: 'ReportAggregateReference',
    props: {
      aggregate: 'string'
    }
  },
  ReportBucketField: {
    type: 'ReportBucketField',
    props: {
      bucketType: 'string',
      developerName: 'string',
      masterLabel: 'string',
      nullTreatment: '?string',
      otherBucketLabel: '?string',
      sourceColumnName: 'string',
      useOther: '?boolean',
      values: ['ReportBucketFieldValue']
    }
  },
  ReportBucketFieldValue: {
    type: 'ReportBucketFieldValue',
    props: {
      sourceValues: ['ReportBucketFieldSourceValue'],
      value: 'string'
    }
  },
  ReportBucketFieldSourceValue: {
    type: 'ReportBucketFieldSourceValue',
    props: {
      from: '?string',
      sourceValue: '?string',
      to: '?string'
    }
  },
  ReportChart: {
    type: 'ReportChart',
    props: {
      backgroundColor1: '?string',
      backgroundColor2: '?string',
      backgroundFadeDir: '?string',
      chartSummaries: ['ChartSummary'],
      chartType: 'string',
      enableHoverLabels: '?boolean',
      expandOthers: '?boolean',
      groupingColumn: '?string',
      legendPosition: '?string',
      location: '?string',
      secondaryGroupingColumn: '?string',
      showAxisLabels: '?boolean',
      showPercentage: '?boolean',
      showTotal: '?boolean',
      showValues: '?boolean',
      size: '?string',
      summaryAxisManualRangeEnd: '?number',
      summaryAxisManualRangeStart: '?number',
      summaryAxisRange: '?string',
      textColor: '?string',
      textSize: '?number',
      title: '?string',
      titleColor: '?string',
      titleSize: '?number'
    }
  },
  ReportColorRange: {
    type: 'ReportColorRange',
    props: {
      aggregate: '?string',
      columnName: 'string',
      highBreakpoint: '?number',
      highColor: 'string',
      lowBreakpoint: '?number',
      lowColor: 'string',
      midColor: 'string'
    }
  },
  ReportColumn: {
    type: 'ReportColumn',
    props: {
      aggregateTypes: ['string'],
      field: 'string',
      reverseColors: '?boolean',
      showChanges: '?boolean'
    }
  },
  ReportCrossFilter: {
    type: 'ReportCrossFilter',
    props: {
      criteriaItems: ['ReportFilterItem'],
      operation: 'string',
      primaryTableColumn: 'string',
      relatedTable: 'string',
      relatedTableJoinColumn: 'string'
    }
  },
  ReportFilterItem: {
    type: 'ReportFilterItem',
    props: {
      column: 'string',
      columnToColumn: '?boolean',
      isUnlocked: '?boolean',
      operator: 'string',
      snapshot: '?string',
      value: '?string'
    }
  },
  ReportCustomDetailFormula: {
    type: 'ReportCustomDetailFormula',
    props: {
      calculatedFormula: 'string',
      dataType: 'string',
      description: '?string',
      developerName: 'string',
      label: 'string',
      scale: 'number'
    }
  },
  ReportDataCategoryFilter: {
    type: 'ReportDataCategoryFilter',
    props: {
      dataCategory: 'string',
      dataCategoryGroup: 'string',
      operator: 'string'
    }
  },
  ReportFilter: {
    type: 'ReportFilter',
    props: {
      booleanFilter: '?string',
      criteriaItems: ['ReportFilterItem'],
      language: '?string'
    }
  },
  ReportFormattingRule: {
    type: 'ReportFormattingRule',
    props: {
      aggregate: '?string',
      columnName: 'string',
      values: ['ReportFormattingRuleValue']
    }
  },
  ReportFormattingRuleValue: {
    type: 'ReportFormattingRuleValue',
    props: {
      backgroundColor: '?string',
      rangeUpperBound: '?number'
    }
  },
  ReportGrouping: {
    type: 'ReportGrouping',
    props: {
      aggregateType: '?string',
      dateGranularity: '?string',
      field: 'string',
      sortByName: '?string',
      sortOrder: 'string',
      sortType: '?string'
    }
  },
  ReportHistoricalSelector: {
    type: 'ReportHistoricalSelector',
    props: {
      snapshot: ['string']
    }
  },
  ReportParam: {
    type: 'ReportParam',
    props: {
      name: 'string',
      value: 'string'
    }
  },
  ReportTimeFrameFilter: {
    type: 'ReportTimeFrameFilter',
    props: {
      dateColumn: 'string',
      endDate: '?string',
      interval: 'string',
      startDate: '?string'
    }
  },
  ReportType: {
    type: 'ReportType',
    props: {
      autogenerated: '?boolean',
      baseObject: 'string',
      category: 'string',
      deployed: 'boolean',
      description: '?string',
      join: '?ObjectRelationship',
      label: 'string',
      sections: ['ReportLayoutSection']
    },
    extends: 'Metadata'
  },
  ObjectRelationship: {
    type: 'ObjectRelationship',
    props: {
      join: '?ObjectRelationship',
      outerJoin: 'boolean',
      relationship: 'string'
    }
  },
  ReportLayoutSection: {
    type: 'ReportLayoutSection',
    props: {
      columns: ['ReportTypeColumn'],
      masterLabel: 'string'
    }
  },
  ReportTypeColumn: {
    type: 'ReportTypeColumn',
    props: {
      checkedByDefault: 'boolean',
      displayNameOverride: '?string',
      field: 'string',
      table: 'string'
    }
  },
  RestrictionRule: {
    type: 'RestrictionRule',
    props: {
      active: 'boolean',
      description: 'string',
      enforcementType: 'string',
      masterLabel: 'string',
      recordFilter: 'string',
      targetEntity: 'string',
      userCriteria: 'string',
      version: 'number'
    },
    extends: 'Metadata'
  },
  RetailExecutionSettings: {
    type: 'RetailExecutionSettings',
    props: {
      enableRetailExecution: '?boolean'
    },
    extends: 'Metadata'
  },
  RoleOrTerritory: {
    type: 'RoleOrTerritory',
    props: {
      caseAccessLevel: '?string',
      contactAccessLevel: '?string',
      description: '?string',
      mayForecastManagerShare: '?boolean',
      name: 'string',
      opportunityAccessLevel: '?string'
    },
    extends: 'Metadata'
  },
  Role: {
    type: 'Role',
    props: {
      parentRole: '?string'
    },
    extends: 'RoleOrTerritory'
  },
  Territory: {
    type: 'Territory',
    props: {
      accountAccessLevel: '?string',
      parentTerritory: '?string'
    },
    extends: 'RoleOrTerritory'
  },
  SamlSsoConfig: {
    type: 'SamlSsoConfig',
    props: {
      attributeName: '?string',
      attributeNameIdFormat: '?string',
      decryptionCertificate: '?string',
      errorUrl: '?string',
      executionUserId: '?string',
      identityLocation: 'string',
      identityMapping: 'string',
      issuer: 'string',
      loginUrl: '?string',
      logoutUrl: '?string',
      name: 'string',
      oauthTokenEndpoint: '?string',
      redirectBinding: '?boolean',
      requestSignatureMethod: '?string',
      requestSigningCertId: '?string',
      salesforceLoginUrl: '?string',
      samlEntityId: 'string',
      samlJitHandlerId: '?string',
      samlVersion: 'string',
      singleLogoutBinding: '?string',
      singleLogoutUrl: '?string',
      userProvisioning: '?boolean',
      validationCert: 'string'
    },
    extends: 'Metadata'
  },
  SchemaSettings: {
    type: 'SchemaSettings',
    props: {
      enableAdvancedCMTSecurity: '?boolean',
      enableAdvancedCSSecurity: '?boolean',
      enableListCustomSettingCreation: '?boolean',
      enableSOSLOnCustomSettings: '?boolean'
    },
    extends: 'Metadata'
  },
  SearchSettings: {
    type: 'SearchSettings',
    props: {
      documentContentSearchEnabled: 'boolean',
      enableAdvancedSearchInAlohaSidebar: '?boolean',
      enableEinsteinSearchPersonalization: '?boolean',
      enableQuerySuggestionPigOn: '?boolean',
      enableSalesforceGeneratedSynonyms: '?boolean',
      enableSetupSearch: '?boolean',
      optimizeSearchForCJKEnabled: 'boolean',
      recentlyViewedUsersForBlankLookupEnabled: 'boolean',
      searchSettingsByObject: 'SearchSettingsByObject',
      sidebarAutoCompleteEnabled: 'boolean',
      sidebarDropDownListEnabled: 'boolean',
      sidebarLimitToItemsIOwnCheckboxEnabled: 'boolean',
      singleSearchResultShortcutEnabled: 'boolean',
      spellCorrectKnowledgeSearchEnabled: 'boolean'
    },
    extends: 'Metadata'
  },
  SearchSettingsByObject: {
    type: 'SearchSettingsByObject',
    props: {
      searchSettingsByObject: ['ObjectSearchSetting']
    }
  },
  ObjectSearchSetting: {
    type: 'ObjectSearchSetting',
    props: {
      enhancedLookupEnabled: 'boolean',
      lookupAutoCompleteEnabled: 'boolean',
      name: 'string',
      resultsPerPageCount: 'number'
    }
  },
  SecuritySettings: {
    type: 'SecuritySettings',
    props: {
      canUsersGrantLoginAccess: '?boolean',
      enableAdminLoginAsAnyUser: '?boolean',
      enableAuditFieldsInactiveOwner: '?boolean',
      enableAuraSecureEvalPref: '?boolean',
      enableRequireHttpsConnection: '?boolean',
      isTLSv12Required: '?boolean',
      isTLSv12RequiredCommunities: '?boolean',
      networkAccess: '?NetworkAccess',
      passwordPolicies: '?PasswordPolicies',
      sessionSettings: '?SessionSettings',
      singleSignOnSettings: '?SingleSignOnSettings'
    },
    extends: 'Metadata'
  },
  NetworkAccess: {
    type: 'NetworkAccess',
    props: {
      ipRanges: ['IpRange']
    }
  },
  IpRange: {
    type: 'IpRange',
    props: {
      description: '?string',
      end: '?string',
      start: '?string'
    }
  },
  PasswordPolicies: {
    type: 'PasswordPolicies',
    props: {
      apiOnlyUserHomePageURL: '?string',
      complexity: '?string',
      enableSetPasswordInApi: '?boolean',
      expiration: '?string',
      historyRestriction: '?string',
      lockoutInterval: '?string',
      maxLoginAttempts: '?string',
      minimumPasswordLength: '?string',
      minimumPasswordLifetime: '?boolean',
      obscureSecretAnswer: '?boolean',
      passwordAssistanceMessage: '?string',
      passwordAssistanceURL: '?string',
      questionRestriction: '?string'
    }
  },
  SessionSettings: {
    type: 'SessionSettings',
    props: {
      allowUserAuthenticationByCertificate: '?boolean',
      canConfirmEmailChangeInLightningCommunities: '?boolean',
      disableTimeoutWarning: '?boolean',
      enableCSPOnEmail: '?boolean',
      enableCSRFOnGet: '?boolean',
      enableCSRFOnPost: '?boolean',
      enableCacheAndAutocomplete: '?boolean',
      enableClickjackNonsetupSFDC: '?boolean',
      enableClickjackNonsetupUser: '?boolean',
      enableClickjackNonsetupUserHeaderless: '?boolean',
      enableClickjackSetup: '?boolean',
      enableContentSniffingProtection: '?boolean',
      enableLightningLogin: '?boolean',
      enableLightningLoginOnlyWithUserPerm: '?boolean',
      enablePostForSessions: '?boolean',
      enableSMSIdentity: '?boolean',
      enableU2F: '?boolean',
      enableUpgradeInsecureRequests: '?boolean',
      enableXssProtection: '?boolean',
      enforceIpRangesEveryRequest: '?boolean',
      forceLogoutOnSessionTimeout: '?boolean',
      forceRelogin: '?boolean',
      hasRetainedLoginHints: '?boolean',
      hasUserSwitching: '?boolean',
      hstsOnForcecomSites: '?boolean',
      identityConfirmationOnEmailChange: '?boolean',
      identityConfirmationOnTwoFactorRegistrationEnabled: '?boolean',
      lockSessionsToDomain: '?boolean',
      lockSessionsToIp: '?boolean',
      lockerServiceAPIVersion: '?string',
      lockerServiceCSP: '?boolean',
      lockerServiceFrozenRealm: '?boolean',
      logoutURL: '?string',
      redirectionWarning: '?boolean',
      referrerPolicy: '?boolean',
      requireHttpOnly: '?boolean',
      requireHttps: '?boolean',
      securityCentralKillSession: '?boolean',
      sessionTimeout: '?string'
    }
  },
  SingleSignOnSettings: {
    type: 'SingleSignOnSettings',
    props: {
      enableForceDelegatedCallout: '?boolean',
      enableMultipleSamlConfigs: '?boolean',
      enableSamlJitProvisioning: '?boolean',
      enableSamlLogin: '?boolean'
    }
  },
  ServiceChannel: {
    type: 'ServiceChannel',
    props: {
      interactionComponent: '?string',
      label: 'string',
      relatedEntityType: 'string',
      secondaryRoutingPriorityField: '?string',
      serviceChannelFieldPriorities: ['ServiceChannelFieldPriority']
    },
    extends: 'Metadata'
  },
  ServiceChannelFieldPriority: {
    type: 'ServiceChannelFieldPriority',
    props: {
      priority: 'number',
      value: 'string'
    }
  },
  ServicePresenceStatus: {
    type: 'ServicePresenceStatus',
    props: {
      channels: '?ServiceChannelStatus',
      label: 'string'
    },
    extends: 'Metadata'
  },
  ServiceChannelStatus: {
    type: 'ServiceChannelStatus',
    props: {
      channel: ['string']
    }
  },
  SharingBaseRule: {
    type: 'SharingBaseRule',
    props: {
      accessLevel: 'string',
      accountSettings: '?AccountSharingRuleSettings',
      description: '?string',
      label: 'string',
      sharedTo: 'SharedTo'
    },
    extends: 'Metadata'
  },
  AccountSharingRuleSettings: {
    type: 'AccountSharingRuleSettings',
    props: {
      caseAccessLevel: 'string',
      contactAccessLevel: 'string',
      opportunityAccessLevel: 'string'
    }
  },
  SharingCriteriaRule: {
    type: 'SharingCriteriaRule',
    props: {
      booleanFilter: '?string',
      criteriaItems: ['FilterItem']
    },
    extends: 'SharingBaseRule'
  },
  SharingGuestRule: {
    type: 'SharingGuestRule',
    props: {
      booleanFilter: '?string',
      criteriaItems: ['FilterItem']
    },
    extends: 'SharingBaseRule'
  },
  SharingOwnerRule: {
    type: 'SharingOwnerRule',
    props: {
      sharedFrom: 'SharedTo'
    },
    extends: 'SharingBaseRule'
  },
  SharingTerritoryRule: {
    type: 'SharingTerritoryRule',
    props: {},
    extends: 'SharingOwnerRule'
  },
  SharingRules: {
    type: 'SharingRules',
    props: {
      sharingCriteriaRules: ['SharingCriteriaRule'],
      sharingGuestRules: ['SharingGuestRule'],
      sharingOwnerRules: ['SharingOwnerRule'],
      sharingTerritoryRules: ['SharingTerritoryRule']
    },
    extends: 'Metadata'
  },
  SharingSet: {
    type: 'SharingSet',
    props: {
      accessMappings: ['AccessMapping'],
      description: '?string',
      name: 'string',
      profiles: ['string']
    },
    extends: 'Metadata'
  },
  AccessMapping: {
    type: 'AccessMapping',
    props: {
      accessLevel: 'string',
      object: 'string',
      objectField: 'string',
      userField: 'string'
    }
  },
  SharingSettings: {
    type: 'SharingSettings',
    props: {
      enableAccountRoleOptimization: '?boolean',
      enableAssetSharing: '?boolean',
      enableCommunityUserVisibility: '?boolean',
      enableExternalSharingModel: '?boolean',
      enableManagerGroups: '?boolean',
      enableManualUserRecordSharing: '?boolean',
      enablePartnerSuperUserAccess: '?boolean',
      enablePortalUserCaseSharing: '?boolean',
      enablePortalUserVisibility: '?boolean',
      enableRemoveTMGroupMembership: '?boolean',
      enableSecureGuestAccess: '?boolean',
      enableStandardReportVisibility: '?boolean',
      enableTerritoryForecastManager: '?boolean'
    },
    extends: 'Metadata'
  },
  SiteSettings: {
    type: 'SiteSettings',
    props: {
      enableProxyLoginICHeader: '?boolean',
      enableTopicsInSites: '?boolean',
      enableVisualforceApiAccessAllowed: '?boolean'
    },
    extends: 'Metadata'
  },
  Skill: {
    type: 'Skill',
    props: {
      assignments: '?SkillAssignments',
      description: '?string',
      label: 'string'
    },
    extends: 'Metadata'
  },
  SkillAssignments: {
    type: 'SkillAssignments',
    props: {
      profiles: '?SkillProfileAssignments',
      users: '?SkillUserAssignments'
    }
  },
  SkillProfileAssignments: {
    type: 'SkillProfileAssignments',
    props: {
      profile: ['string']
    }
  },
  SkillUserAssignments: {
    type: 'SkillUserAssignments',
    props: {
      user: ['string']
    }
  },
  SocialCustomerServiceSettings: {
    type: 'SocialCustomerServiceSettings',
    props: {
      caseSubjectOption: 'string',
      enableSocialApprovals: '?boolean',
      enableSocialCaseAssignmentRules: '?boolean',
      enableSocialCustomerService: '?boolean',
      enableSocialPersonaHistoryTracking: '?boolean',
      enableSocialPostHistoryTracking: '?boolean',
      enableSocialReceiveParentPost: '?boolean'
    },
    extends: 'Metadata'
  },
  SocialProfileSettings: {
    type: 'SocialProfileSettings',
    props: {
      enableSocialProfiles: '?boolean',
      isFacebookSocialProfilesDisabled: '?boolean',
      isLinkedInSocialProfilesDisabled: '?boolean',
      isTwitterSocialProfilesDisabled: '?boolean',
      isYouTubeSocialProfilesDisabled: '?boolean'
    },
    extends: 'Metadata'
  },
  StandardValueSet: {
    type: 'StandardValueSet',
    props: {
      groupingStringEnum: '?string',
      sorted: 'boolean',
      standardValue: ['StandardValue']
    },
    extends: 'Metadata'
  },
  StandardValueSetTranslation: {
    type: 'StandardValueSetTranslation',
    props: {
      valueTranslation: ['ValueTranslation']
    },
    extends: 'Metadata'
  },
  SurveySettings: {
    type: 'SurveySettings',
    props: {
      enableSurvey: '?boolean',
      enableSurveyOwnerCanManageResponse: '?boolean'
    },
    extends: 'Metadata'
  },
  SynonymDictionary: {
    type: 'SynonymDictionary',
    props: {
      groups: ['SynonymGroup'],
      isProtected: '?boolean',
      label: 'string'
    },
    extends: 'Metadata'
  },
  SystemNotificationSettings: {
    type: 'SystemNotificationSettings',
    props: {
      disableDowntimeNotifications: '?boolean',
      disableMaintenanceNotifications: '?boolean'
    },
    extends: 'Metadata'
  },
  Territory2: {
    type: 'Territory2',
    props: {
      accountAccessLevel: '?string',
      caseAccessLevel: '?string',
      contactAccessLevel: '?string',
      customFields: ['FieldValue'],
      description: '?string',
      name: 'string',
      opportunityAccessLevel: '?string',
      parentTerritory: '?string',
      ruleAssociations: ['Territory2RuleAssociation'],
      territory2Type: 'string'
    },
    extends: 'Metadata'
  },
  FieldValue: {
    type: 'FieldValue',
    props: {
      name: 'string',
      value: '?any'
    }
  },
  Territory2RuleAssociation: {
    type: 'Territory2RuleAssociation',
    props: {
      inherited: 'boolean',
      ruleName: 'string'
    }
  },
  Territory2Model: {
    type: 'Territory2Model',
    props: {
      customFields: ['FieldValue'],
      description: '?string',
      name: 'string'
    },
    extends: 'Metadata'
  },
  Territory2Rule: {
    type: 'Territory2Rule',
    props: {
      active: 'boolean',
      booleanFilter: '?string',
      name: 'string',
      objectType: 'string',
      ruleItems: ['Territory2RuleItem']
    },
    extends: 'Metadata'
  },
  Territory2RuleItem: {
    type: 'Territory2RuleItem',
    props: {
      field: 'string',
      operation: 'string',
      value: '?string'
    }
  },
  Territory2Settings: {
    type: 'Territory2Settings',
    props: {
      defaultAccountAccessLevel: '?string',
      defaultCaseAccessLevel: '?string',
      defaultContactAccessLevel: '?string',
      defaultOpportunityAccessLevel: '?string',
      enableTerritoryManagement2: '?boolean',
      opportunityFilterSettings: '?Territory2SettingsOpportunityFilter'
    },
    extends: 'Metadata'
  },
  Territory2SettingsOpportunityFilter: {
    type: 'Territory2SettingsOpportunityFilter',
    props: {
      apexClassName: '?string',
      enableFilter: 'boolean',
      runOnCreate: 'boolean'
    }
  },
  Territory2Type: {
    type: 'Territory2Type',
    props: {
      description: '?string',
      name: 'string',
      priority: 'number'
    },
    extends: 'Metadata'
  },
  TimeSheetTemplate: {
    type: 'TimeSheetTemplate',
    props: {
      active: 'boolean',
      description: '?string',
      frequency: 'string',
      masterLabel: 'string',
      startDate: 'string',
      timeSheetTemplateAssignments: ['TimeSheetTemplateAssignment'],
      workWeekEndDay: 'string',
      workWeekStartDay: 'string'
    },
    extends: 'Metadata'
  },
  TimeSheetTemplateAssignment: {
    type: 'TimeSheetTemplateAssignment',
    props: {
      assignedTo: '?string'
    }
  },
  TopicsForObjects: {
    type: 'TopicsForObjects',
    props: {
      enableTopics: 'boolean',
      entityApiName: 'string'
    },
    extends: 'Metadata'
  },
  TrailheadSettings: {
    type: 'TrailheadSettings',
    props: {
      enableMyTrailheadPref: '?boolean'
    },
    extends: 'Metadata'
  },
  TransactionSecurityPolicy: {
    type: 'TransactionSecurityPolicy',
    props: {
      action: 'TransactionSecurityAction',
      active: 'boolean',
      apexClass: '?string',
      description: '?string',
      developerName: '?string',
      eventName: '?string',
      eventType: '?string',
      executionUser: '?string',
      flow: '?string',
      masterLabel: '?string',
      resourceName: '?string',
      type: '?string'
    },
    extends: 'Metadata'
  },
  TransactionSecurityAction: {
    type: 'TransactionSecurityAction',
    props: {
      block: 'boolean',
      endSession: 'boolean',
      freezeUser: 'boolean',
      notifications: ['TransactionSecurityNotification'],
      twoFactorAuthentication: 'boolean'
    }
  },
  TransactionSecurityNotification: {
    type: 'TransactionSecurityNotification',
    props: {
      inApp: 'boolean',
      sendEmail: 'boolean',
      user: 'string'
    }
  },
  Translations: {
    type: 'Translations',
    props: {
      customApplications: ['CustomApplicationTranslation'],
      customDataTypeTranslations: ['CustomDataTypeTranslation'],
      customLabels: ['CustomLabelTranslation'],
      customPageWebLinks: ['CustomPageWebLinkTranslation'],
      customTabs: ['CustomTabTranslation'],
      flowDefinitions: ['FlowDefinitionTranslation'],
      quickActions: ['GlobalQuickActionTranslation'],
      reportTypes: ['ReportTypeTranslation'],
      scontrols: ['ScontrolTranslation']
    },
    extends: 'Metadata'
  },
  CustomApplicationTranslation: {
    type: 'CustomApplicationTranslation',
    props: {
      label: 'string',
      name: 'string'
    }
  },
  CustomDataTypeTranslation: {
    type: 'CustomDataTypeTranslation',
    props: {
      components: ['CustomDataTypeComponentTranslation'],
      customDataTypeName: 'string',
      description: '?string',
      label: '?string'
    }
  },
  CustomDataTypeComponentTranslation: {
    type: 'CustomDataTypeComponentTranslation',
    props: {
      developerSuffix: 'string',
      label: '?string'
    }
  },
  CustomLabelTranslation: {
    type: 'CustomLabelTranslation',
    props: {
      label: 'string',
      name: 'string'
    }
  },
  CustomPageWebLinkTranslation: {
    type: 'CustomPageWebLinkTranslation',
    props: {
      label: 'string',
      name: 'string'
    }
  },
  CustomTabTranslation: {
    type: 'CustomTabTranslation',
    props: {
      label: 'string',
      name: 'string'
    }
  },
  FlowDefinitionTranslation: {
    type: 'FlowDefinitionTranslation',
    props: {
      flows: ['FlowTranslation'],
      fullName: 'string',
      label: '?string'
    }
  },
  FlowTranslation: {
    type: 'FlowTranslation',
    props: {
      choices: ['FlowChoiceTranslation'],
      fullName: 'string',
      label: '?string',
      screens: ['FlowScreenTranslation'],
      stages: ['FlowStageTranslation'],
      textTemplates: ['FlowTextTemplateTranslation']
    }
  },
  FlowChoiceTranslation: {
    type: 'FlowChoiceTranslation',
    props: {
      choiceText: '?string',
      name: 'string',
      userInput: '?FlowChoiceUserInputTranslation'
    }
  },
  FlowChoiceUserInputTranslation: {
    type: 'FlowChoiceUserInputTranslation',
    props: {
      promptText: '?string',
      validationRule: '?FlowInputValidationRuleTranslation'
    }
  },
  FlowInputValidationRuleTranslation: {
    type: 'FlowInputValidationRuleTranslation',
    props: {
      errorMessage: '?string'
    }
  },
  FlowScreenTranslation: {
    type: 'FlowScreenTranslation',
    props: {
      fields: ['FlowScreenFieldTranslation'],
      helpText: '?string',
      name: 'string',
      pausedText: '?string'
    }
  },
  FlowScreenFieldTranslation: {
    type: 'FlowScreenFieldTranslation',
    props: {
      fieldText: '?string',
      helpText: '?string',
      name: 'string',
      validationRule: '?FlowInputValidationRuleTranslation'
    }
  },
  FlowStageTranslation: {
    type: 'FlowStageTranslation',
    props: {
      label: '?string',
      name: 'string'
    }
  },
  FlowTextTemplateTranslation: {
    type: 'FlowTextTemplateTranslation',
    props: {
      name: 'string',
      text: '?string'
    }
  },
  GlobalQuickActionTranslation: {
    type: 'GlobalQuickActionTranslation',
    props: {
      label: 'string',
      name: 'string'
    }
  },
  ReportTypeTranslation: {
    type: 'ReportTypeTranslation',
    props: {
      description: '?string',
      label: '?string',
      name: 'string',
      sections: ['ReportTypeSectionTranslation']
    }
  },
  ReportTypeSectionTranslation: {
    type: 'ReportTypeSectionTranslation',
    props: {
      columns: ['ReportTypeColumnTranslation'],
      label: '?string',
      name: 'string'
    }
  },
  ReportTypeColumnTranslation: {
    type: 'ReportTypeColumnTranslation',
    props: {
      label: 'string',
      name: 'string'
    }
  },
  ScontrolTranslation: {
    type: 'ScontrolTranslation',
    props: {
      label: 'string',
      name: 'string'
    }
  },
  UIObjectRelationConfig: {
    type: 'UIObjectRelationConfig',
    props: {
      UIObjectRelationFieldConfigs: ['UIObjectRelationFieldConfig'],
      contextObject: 'string',
      contextObjectRecordType: '?string',
      directRelationshipField: '?string',
      indirectObjectContextField: '?string',
      indirectObjectRelatedField: '?string',
      indirectRelationshipObject: '?string',
      isActive: 'boolean',
      masterLabel: 'string',
      relatedObject: 'string',
      relatedObjectRecordType: '?string',
      relationshipType: 'string'
    },
    extends: 'Metadata'
  },
  UIObjectRelationFieldConfig: {
    type: 'UIObjectRelationFieldConfig',
    props: {
      displayLabel: 'string',
      queryText: 'string',
      rowOrder: 'number'
    }
  },
  UserCriteria: {
    type: 'UserCriteria',
    props: {
      creationAgeInSeconds: '?number',
      description: '?string',
      lastChatterActivityAgeInSeconds: '?number',
      masterLabel: 'string',
      profiles: ['string'],
      userTypes: ['string']
    },
    extends: 'Metadata'
  },
  UserEngagementSettings: {
    type: 'UserEngagementSettings',
    props: {
      canGovCloudUseAdoptionApps: '?boolean',
      doesScheduledSwitcherRunDaily: '?boolean',
      enableCustomHelpGlobalSection: '?boolean',
      enableHelpMenuShowFeedback: '?boolean',
      enableHelpMenuShowHelp: '?boolean',
      enableHelpMenuShowNewUser: '?boolean',
      enableHelpMenuShowSearch: '?boolean',
      enableHelpMenuShowSfdcContent: '?boolean',
      enableHelpMenuShowShortcut: '?boolean',
      enableHelpMenuShowSupport: '?boolean',
      enableHelpMenuShowTrailhead: '?boolean',
      enableIBILOptOutDashboards: '?boolean',
      enableIBILOptOutEvents: '?boolean',
      enableIBILOptOutReports: '?boolean',
      enableIBILOptOutTasks: '?boolean',
      enableLexToClassicFeedbackEnable: '?boolean',
      enableOrchestrationInSandbox: '?boolean',
      enableOrgUserAssistEnabled: '?boolean',
      enableScheduledSwitcher: '?boolean',
      enableSfdcProductFeedbackSurvey: '?boolean',
      enableShowSalesforceUserAssist: '?boolean',
      isAutoTransitionDelayed: '?boolean',
      isCrucNotificationDisabled: '?boolean',
      isCustomProfileAutoTransitionDelayed: '?boolean',
      isLEXWelcomeMatDisabled: '?boolean',
      isMeetTheAssistantDisabledInClassic: '?boolean',
      isMeetTheAssistantDisabledInLightning: '?boolean',
      optimizerAppEnabled: '?boolean'
    },
    extends: 'Metadata'
  },
  UserInterfaceSettings: {
    type: 'UserInterfaceSettings',
    props: {
      alternateAlohaListView: '?boolean',
      enableAsyncRelatedLists: '?boolean',
      enableClickjackUserPageHeaderless: '?boolean',
      enableCollapsibleSections: '?boolean',
      enableCollapsibleSideBar: '?boolean',
      enableCustomObjectTruncate: '?boolean',
      enableCustomeSideBarOnAllPages: '?boolean',
      enableDeleteFieldHistory: '?boolean',
      enableHoverDetails: '?boolean',
      enableInlineEdit: '?boolean',
      enableNewPageLayoutEditor: '?boolean',
      enablePersonalCanvas: '?boolean',
      enablePrintableListViews: '?boolean',
      enableProfileCustomTabsets: '?boolean',
      enableQuickCreate: '?boolean',
      enableTabOrganizer: '?boolean'
    },
    extends: 'Metadata'
  },
  UserManagementSettings: {
    type: 'UserManagementSettings',
    props: {
      enableCanAnswerContainUsername: '?boolean',
      enableCanSaveUserPerm: '?boolean',
      enableConcealPersonalInfo: '?boolean',
      enableContactlessExternalIdentityUsers: '?boolean',
      enableEnhancedPermsetMgmt: '?boolean',
      enableEnhancedProfileMgmt: '?boolean',
      enableNewProfileUI: '?boolean',
      enableScrambleUserData: '?boolean',
      enableUserSelfDeactivate: '?boolean'
    },
    extends: 'Metadata'
  },
  VoiceSettings: {
    type: 'VoiceSettings',
    props: {
      enableCallDisposition: '?boolean',
      enableVoiceCallList: '?boolean',
      enableVoiceCallRecording: '?boolean',
      enableVoiceCoaching: '?boolean',
      enableVoiceConferencing: '?boolean',
      enableVoiceLocalPresence: '?boolean',
      enableVoiceMail: '?boolean',
      enableVoiceMailDrop: '?boolean'
    },
    extends: 'Metadata'
  },
  WaveApplication: {
    type: 'WaveApplication',
    props: {
      assetIcon: '?string',
      description: '?string',
      folder: 'string',
      masterLabel: 'string',
      shares: ['FolderShare'],
      templateOrigin: '?string',
      templateVersion: '?string'
    },
    extends: 'Metadata'
  },
  WaveDataset: {
    type: 'WaveDataset',
    props: {
      application: 'string',
      description: '?string',
      masterLabel: 'string',
      templateAssetSourceName: '?string'
    },
    extends: 'Metadata'
  },
  WaveTemplateBundle: {
    type: 'WaveTemplateBundle',
    props: {
      assetIcon: '?string',
      assetVersion: '?number',
      description: '?string',
      label: 'string',
      templateType: 'string'
    },
    extends: 'Metadata'
  },
  WaveXmd: {
    type: 'WaveXmd',
    props: {
      application: '?string',
      dataset: 'string',
      datasetConnector: '?string',
      datasetFullyQualifiedName: '?string',
      dates: ['WaveXmdDate'],
      dimensions: ['WaveXmdDimension'],
      measures: ['WaveXmdMeasure'],
      organizations: ['WaveXmdOrganization'],
      origin: '?string',
      type: '?string',
      waveVisualization: '?string'
    },
    extends: 'Metadata'
  },
  WaveXmdDate: {
    type: 'WaveXmdDate',
    props: {
      alias: 'string',
      compact: '?boolean',
      dateFieldDay: '?string',
      dateFieldEpochDay: '?string',
      dateFieldEpochSecond: '?string',
      dateFieldFiscalMonth: '?string',
      dateFieldFiscalQuarter: '?string',
      dateFieldFiscalWeek: '?string',
      dateFieldFiscalYear: '?string',
      dateFieldFullYear: '?string',
      dateFieldHour: '?string',
      dateFieldMinute: '?string',
      dateFieldMonth: '?string',
      dateFieldQuarter: '?string',
      dateFieldSecond: '?string',
      dateFieldWeek: '?string',
      dateFieldYear: '?string',
      description: '?string',
      firstDayOfWeek: 'number',
      fiscalMonthOffset: 'number',
      isYearEndFiscalYear: '?boolean',
      label: '?string',
      showInExplorer: '?boolean',
      sortIndex: 'number',
      type: 'string'
    }
  },
  WaveXmdDimension: {
    type: 'WaveXmdDimension',
    props: {
      conditionalFormatting: ['WaveXmdFormattingProperty'],
      customActions: ['WaveXmdDimensionCustomAction'],
      customActionsEnabled: '?boolean',
      dateFormat: '?string',
      description: '?string',
      field: 'string',
      fullyQualifiedName: '?string',
      imageTemplate: '?string',
      isDerived: 'boolean',
      isMultiValue: '?boolean',
      label: '?string',
      linkTemplate: '?string',
      linkTemplateEnabled: '?boolean',
      linkTooltip: '?string',
      members: ['WaveXmdDimensionMember'],
      origin: '?string',
      recordDisplayFields: ['WaveXmdRecordDisplayLookup'],
      recordIdField: '?string',
      recordOrganizationIdField: '?string',
      salesforceActions: ['WaveXmdDimensionSalesforceAction'],
      salesforceActionsEnabled: '?boolean',
      showDetailsDefaultFieldIndex: '?number',
      showInExplorer: '?boolean',
      sortIndex: 'number'
    }
  },
  WaveXmdFormattingProperty: {
    type: 'WaveXmdFormattingProperty',
    props: {
      formattingBins: ['WaveXmdFormattingBin'],
      formattingPredicates: ['WaveXmdFormattingPredicate'],
      property: 'string',
      referenceField: 'string',
      sortIndex: 'number',
      type: 'string'
    }
  },
  WaveXmdFormattingBin: {
    type: 'WaveXmdFormattingBin',
    props: {
      bin: 'string',
      formatValue: 'string',
      label: 'string',
      sortIndex: 'number'
    }
  },
  WaveXmdFormattingPredicate: {
    type: 'WaveXmdFormattingPredicate',
    props: {
      formatValue: 'string',
      operator: 'string',
      sortIndex: 'number',
      value: 'string'
    }
  },
  WaveXmdDimensionCustomAction: {
    type: 'WaveXmdDimensionCustomAction',
    props: {
      customActionName: 'string',
      enabled: 'boolean',
      icon: '?string',
      method: '?string',
      sortIndex: 'number',
      target: '?string',
      tooltip: '?string',
      url: '?string'
    }
  },
  WaveXmdDimensionMember: {
    type: 'WaveXmdDimensionMember',
    props: {
      color: '?string',
      label: '?string',
      member: 'string',
      sortIndex: 'number'
    }
  },
  WaveXmdRecordDisplayLookup: {
    type: 'WaveXmdRecordDisplayLookup',
    props: {
      recordDisplayField: 'string'
    }
  },
  WaveXmdDimensionSalesforceAction: {
    type: 'WaveXmdDimensionSalesforceAction',
    props: {
      enabled: 'boolean',
      salesforceActionName: 'string',
      sortIndex: 'number'
    }
  },
  WaveXmdMeasure: {
    type: 'WaveXmdMeasure',
    props: {
      conditionalFormatting: ['WaveXmdFormattingProperty'],
      dateFormat: '?string',
      description: '?string',
      field: 'string',
      formatCustomFormat: '?string',
      formatDecimalDigits: '?number',
      formatIsNegativeParens: '?boolean',
      formatPrefix: '?string',
      formatSuffix: '?string',
      formatUnit: '?string',
      formatUnitMultiplier: '?number',
      fullyQualifiedName: '?string',
      isDerived: 'boolean',
      label: '?string',
      origin: '?string',
      showDetailsDefaultFieldIndex: '?number',
      showInExplorer: '?boolean',
      sortIndex: 'number'
    }
  },
  WaveXmdOrganization: {
    type: 'WaveXmdOrganization',
    props: {
      instanceUrl: 'string',
      label: 'string',
      organizationIdentifier: 'string',
      sortIndex: 'number'
    }
  },
  WorkDotComSettings: {
    type: 'WorkDotComSettings',
    props: {
      enableCoachingManagerGroupAccess: '?boolean',
      enableGoalManagerGroupAccess: '?boolean',
      enableProfileSkills: '?boolean',
      enableProfileSkillsAddFeedPost: '?boolean',
      enableProfileSkillsAutoSuggest: '?boolean',
      enableProfileSkillsUsePlatform: '?boolean',
      enableWorkBadgeDefRestrictPref: '?boolean',
      enableWorkCalibration: '?boolean',
      enableWorkCanvasPref: '?boolean',
      enableWorkCertification: '?boolean',
      enableWorkCertificationNotification: '?boolean',
      enableWorkRewardsPref: '?boolean',
      enableWorkThanksPref: '?boolean',
      enableWorkUseObjectivesForGoals: '?boolean'
    },
    extends: 'Metadata'
  },
  Workflow: {
    type: 'Workflow',
    props: {
      alerts: ['WorkflowAlert'],
      fieldUpdates: ['WorkflowFieldUpdate'],
      flowActions: ['WorkflowFlowAction'],
      knowledgePublishes: ['WorkflowKnowledgePublish'],
      outboundMessages: ['WorkflowOutboundMessage'],
      rules: ['WorkflowRule'],
      send: ['WorkflowSend'],
      tasks: ['WorkflowTask']
    },
    extends: 'Metadata'
  },
  WorkflowAlert: {
    type: 'WorkflowAlert',
    props: {
      ccEmails: ['string'],
      description: 'string',
      protected: 'boolean',
      recipients: ['WorkflowEmailRecipient'],
      senderAddress: '?string',
      senderType: '?string',
      template: 'string'
    },
    extends: 'WorkflowAction'
  },
  WorkflowAction: {
    type: 'WorkflowAction',
    props: {},
    extends: 'Metadata'
  },
  WorkflowFieldUpdate: {
    type: 'WorkflowFieldUpdate',
    props: {
      description: '?string',
      field: 'string',
      formula: '?string',
      literalValue: '?string',
      lookupValue: '?string',
      lookupValueType: '?string',
      name: 'string',
      notifyAssignee: 'boolean',
      operation: 'string',
      protected: 'boolean',
      reevaluateOnChange: '?boolean',
      targetObject: '?string'
    },
    extends: 'WorkflowAction'
  },
  WorkflowFlowAction: {
    type: 'WorkflowFlowAction',
    props: {
      description: '?string',
      flow: 'string',
      flowInputs: ['WorkflowFlowActionParameter'],
      label: 'string',
      language: '?string',
      protected: 'boolean'
    },
    extends: 'WorkflowAction'
  },
  WorkflowFlowActionParameter: {
    type: 'WorkflowFlowActionParameter',
    props: {
      name: 'string',
      value: '?string'
    }
  },
  WorkflowKnowledgePublish: {
    type: 'WorkflowKnowledgePublish',
    props: {
      action: 'string',
      description: '?string',
      label: 'string',
      language: '?string',
      protected: 'boolean'
    },
    extends: 'WorkflowAction'
  },
  WorkflowOutboundMessage: {
    type: 'WorkflowOutboundMessage',
    props: {
      apiVersion: 'number',
      description: '?string',
      endpointUrl: 'string',
      fields: ['string'],
      includeSessionId: 'boolean',
      integrationUser: 'string',
      name: 'string',
      protected: 'boolean',
      useDeadLetterQueue: '?boolean'
    },
    extends: 'WorkflowAction'
  },
  WorkflowSend: {
    type: 'WorkflowSend',
    props: {
      action: 'string',
      description: '?string',
      label: 'string',
      language: '?string',
      protected: 'boolean'
    },
    extends: 'WorkflowAction'
  },
  WorkflowTask: {
    type: 'WorkflowTask',
    props: {
      assignedTo: '?string',
      assignedToType: 'string',
      description: '?string',
      dueDateOffset: 'number',
      notifyAssignee: 'boolean',
      offsetFromField: '?string',
      priority: 'string',
      protected: 'boolean',
      status: 'string',
      subject: 'string'
    },
    extends: 'WorkflowAction'
  },
  WorkflowEmailRecipient: {
    type: 'WorkflowEmailRecipient',
    props: {
      field: '?string',
      recipient: '?string',
      type: 'string'
    }
  },
  WorkflowRule: {
    type: 'WorkflowRule',
    props: {
      actions: ['WorkflowActionReference'],
      active: 'boolean',
      booleanFilter: '?string',
      criteriaItems: ['FilterItem'],
      description: '?string',
      formula: '?string',
      triggerType: 'string',
      workflowTimeTriggers: ['WorkflowTimeTrigger']
    },
    extends: 'Metadata'
  },
  WorkflowTimeTrigger: {
    type: 'WorkflowTimeTrigger',
    props: {
      actions: ['WorkflowActionReference'],
      offsetFromField: '?string',
      timeLength: '?string',
      workflowTimeTriggerUnit: 'string'
    }
  },
  SaveResult: {
    type: 'SaveResult',
    props: {
      errors: ['Error'],
      fullName: 'string',
      success: 'boolean'
    }
  },
  Error: {
    type: 'Error',
    props: {
      extendedErrorDetails: ['ExtendedErrorDetails'],
      fields: ['string'],
      message: 'string',
      statusCode: 'string'
    }
  },
  ExtendedErrorDetails: {
    type: 'ExtendedErrorDetails',
    props: {
      extendedErrorCode: 'string'
    }
  },
  DeleteResult: {
    type: 'DeleteResult',
    props: {
      errors: ['Error'],
      fullName: 'string',
      success: 'boolean'
    }
  },
  DeployOptions: {
    type: 'DeployOptions',
    props: {
      allowMissingFiles: 'boolean',
      autoUpdatePackage: 'boolean',
      checkOnly: 'boolean',
      ignoreWarnings: 'boolean',
      performRetrieve: 'boolean',
      purgeOnDelete: 'boolean',
      rollbackOnError: 'boolean',
      runTests: ['string'],
      singlePackage: 'boolean',
      testLevel: 'string'
    }
  },
  AsyncResult: {
    type: 'AsyncResult',
    props: {
      done: 'boolean',
      id: 'string',
      message: '?string',
      state: 'string',
      statusCode: '?string'
    }
  },
  DescribeMetadataResult: {
    type: 'DescribeMetadataResult',
    props: {
      metadataObjects: ['DescribeMetadataObject'],
      organizationNamespace: 'string',
      partialSaveAllowed: 'boolean',
      testRequired: 'boolean'
    }
  },
  DescribeMetadataObject: {
    type: 'DescribeMetadataObject',
    props: {
      childXmlNames: ['string'],
      directoryName: 'string',
      inFolder: 'boolean',
      metaFile: 'boolean',
      suffix: '?string',
      xmlName: 'string'
    }
  },
  DescribeValueTypeResult: {
    type: 'DescribeValueTypeResult',
    props: {
      apiCreatable: 'boolean',
      apiDeletable: 'boolean',
      apiReadable: 'boolean',
      apiUpdatable: 'boolean',
      parentField: '?ValueTypeField',
      valueTypeFields: ['ValueTypeField']
    }
  },
  ValueTypeField: {
    type: 'ValueTypeField',
    props: {
      fields: ['ValueTypeField'],
      foreignKeyDomain: ['string'],
      isForeignKey: 'boolean',
      isNameField: 'boolean',
      minOccurs: 'number',
      name: 'string',
      picklistValues: ['PicklistEntry'],
      soapType: 'string',
      valueRequired: 'boolean'
    }
  },
  PicklistEntry: {
    type: 'PicklistEntry',
    props: {
      active: 'boolean',
      defaultValue: 'boolean',
      label: 'string',
      validFor: '?string',
      value: 'string'
    }
  },
  ListMetadataQuery: {
    type: 'ListMetadataQuery',
    props: {
      folder: '?string',
      type: 'string'
    }
  },
  ReadResult: {
    type: 'ReadResult',
    props: {
      records: ['Metadata']
    }
  },
  RetrieveRequest: {
    type: 'RetrieveRequest',
    props: {
      apiVersion: 'number',
      packageNames: ['string'],
      singlePackage: 'boolean',
      specificFiles: ['string'],
      unpackaged: '?Package'
    }
  },
  UpsertResult: {
    type: 'UpsertResult',
    props: {
      created: 'boolean',
      errors: ['Error'],
      fullName: 'string',
      success: 'boolean'
    }
  },
  LogInfo: {
    type: 'LogInfo',
    props: {
      category: 'string',
      level: 'string'
    }
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
import { Nullable } from '@salesforce/ts-types';
import { GlobalInfo } from '../globalInfoConfig';
import { SfSandbox, SfSandboxes } from '../types';
export declare class SandboxAccessor {
    private globalInfo;
    constructor(globalInfo: GlobalInfo);
    /**
     * Returns all the sandboxes (or all the sandboxes for a given prod org)
     *
     * @param entity entity as a string should be a production org username
     * and when entity is a SfSandbox, the prod org entity.prodOrgUsername will
     * used in the filter.
     */
    getAll(entity?: string | SfSandbox): SfSandboxes;
    /**
     * Returns the SfSandbox config entry that corresponds to the given
     * sandbox org id if it exists
     *
     * @param sandboxOrgId the sandboxOrgId that corresponds to a sandbox
     */
    get(sandboxOrgId?: string): Nullable<SfSandbox>;
    /**
     * Returns true if the given sandbox org id exists
     *
     * @param sandboxOrgId the sandboxOrgId that corresponds to a sandbox
     */
    has(sandboxOrgId?: string): boolean;
    /**
     * Set an sandboxOrgId for the given sandbox entity
     *
     * @param sandboxOrgId the sandboxOrgId you want to set
     * @param entity the sandbox entity
     */
    set(sandboxOrgId: string, entity: SfSandbox): void;
    unset(sandboxOrgId: string): void;
}

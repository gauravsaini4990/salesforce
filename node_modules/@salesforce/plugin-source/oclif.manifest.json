{"version":"1.9.6","commands":{"force":{"id":"force","usage":"<%= command.id %> [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","hidden":true,"aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"}},"args":[]},"force:mdapi:describemetadata":{"id":"force:mdapi:describemetadata","description":"display details about the metadata types enabled for your org\nUse this information to identify the syntax needed for a <name> element in package.xml. The most recent API version is the default, or you can specify an older version.\n\nThe default target username is the admin user for the default scratch org. The username must have the Modify All Data permission or the Modify Metadata permission (Beta). For more information about permissions, see Salesforce Help.","usage":"<%= command.id %> [-f <filepath>] [-u <string>] [-a <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"examples":["$ sfdx force:mdapi:describemetadata -a 43.0","$ sfdx force:mdapi:describemetadata -u me@example.com","$ sfdx force:mdapi:describemetadata -f /path/to/outputfilename.txt","$ sfdx force:mdapi:describemetadata -u me@example.com -f /path/to/outputfilename.txt"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","char":"a","description":"API version to use"},"resultfile":{"name":"resultfile","type":"option","char":"f","description":"path to the file where results are stored"},"filterknown":{"name":"filterknown","type":"boolean","char":"k","description":"filter metadata known by the CLI","hidden":true,"allowNo":false}},"args":[]},"force:mdapi:listmetadata":{"id":"force:mdapi:listmetadata","description":"display properties of metadata components of a specified type\nThis command is useful when you want to identify individual components in your manifest file or if you want a high-level view of particular components in your organization. For example, you could use this target to return a list of names of all Layout components in your org, then use this information in a retrieve operation that returns a subset of these components.","usage":"<%= command.id %> -m <string> [-f <filepath>] [--folder <string>] [-u <string>] [-a <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"examples":["$ sfdx force:mdapi:listmetadata -m CustomObject","$ sfdx force:mdapi:listmetadata -m CustomObject -a 43.0","$ sfdx force:mdapi:listmetadata -m CustomObject -u me@example.com","$ sfdx force:mdapi:listmetadata -m CustomObject -f /path/to/outputfilename.txt","$ sfdx force:mdapi:listmetadata -m Dashboard --folder foldername","$ sfdx force:mdapi:listmetadata -m Dashboard --folder foldername -a 43.0","$ sfdx force:mdapi:listmetadata -m Dashboard --folder foldername -u me@example.com","$ sfdx force:mdapi:listmetadata -m Dashboard --folder foldername -f /path/to/outputfilename.txt","$ sfdx force:mdapi:listmetadata -m CustomObject -u me@example.com -f /path/to/outputfilename.txt"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","char":"a","description":"API version to use"},"resultfile":{"name":"resultfile","type":"option","char":"f","description":"path to the file where results are stored"},"metadatatype":{"name":"metadatatype","type":"option","char":"m","description":"metadata type to be retrieved, such as CustomObject; metadata type value is case-sensitive","required":true},"folder":{"name":"folder","type":"option","description":"folder associated with the component; required for components that use folders; folder names are case-sensitive"}},"args":[]},"force:source:convert":{"id":"force:source:convert","description":"convert source into Metadata API format \n Converts source-formatted files into metadata that you can deploy using Metadata API. \nTo convert source-formatted files into the metadata format, so that you can deploy them using Metadata API,\nrun \"sfdx force:source:convert\". Then deploy the metadata using \"sfdx force:mdapi:deploy\".\n\nTo convert Metadata API–formatted files into the source format, run \"sfdx force:mdapi:convert\".\n\nTo specify a package name that includes spaces, enclose the name in single quotes.","usage":"<%= command.id %> [-r <directory>] [-d <directory>] [-n <string>] [-p <array> | -x <string> | -m <array>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"examples":["$ sfdx force:source:convert -r path/to/source","$ sfdx force:source:convert -r path/to/source -d path/to/outputdir -n 'My Package'"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"rootdir":{"name":"rootdir","type":"option","char":"r","description":"a source directory other than the default package to convert"},"outputdir":{"name":"outputdir","type":"option","char":"d","description":"output directory to store the Metadata API–formatted files in","default":"metadataPackage_1651265372665"},"packagename":{"name":"packagename","type":"option","char":"n","description":"name of the package to associate with the metadata-formatted files"},"manifest":{"name":"manifest","type":"option","char":"x","description":"file path to manifest (package.xml) of metadata types to convert."},"sourcepath":{"name":"sourcepath","type":"option","char":"p","description":"comma-separated list of paths to the local source files to convert"},"metadata":{"name":"metadata","type":"option","char":"m","description":"comma-separated list of metadata component names to convert"}},"args":[]},"force:source:delete":{"id":"force:source:delete","description":"delete source from your project and from a non-source-tracked org\nIMPORTANT: Where possible, we changed noninclusive terms to align with our company value of Equality. We maintained certain terms to avoid any effect on customer implementations.\n\nUse this command to delete components from orgs that don’t have source tracking.\nTo remove deleted items from scratch orgs, which have change tracking, use \"sfdx force:source:push\".","usage":"<%= command.id %> [-w <minutes>] [-l NoTestRun|RunLocalTests|RunAllTestsInOrg] [-r] [-m <array>] [-p <array>] [-f [-t | -c]] [-u <string>] [--apiversion <string>] [--verbose] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"examples":["$ sfdx force:source:delete -m <metadata>","$ sfdx force:source:delete -p path/to/source"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"checkonly":{"name":"checkonly","type":"boolean","char":"c","description":"validate delete command but do not delete from the org or delete files locally","allowNo":false},"wait":{"name":"wait","type":"option","char":"w","description":"wait time for command to finish in minutes","default":{"quantity":33,"unit":0}},"testlevel":{"name":"testlevel","type":"option","char":"l","description":"deployment testing level","helpValue":"(NoTestRun|RunLocalTests|RunAllTestsInOrg)","options":["NoTestRun","RunLocalTests","RunAllTestsInOrg"],"default":"NoTestRun"},"noprompt":{"name":"noprompt","type":"boolean","char":"r","description":"do not prompt for delete confirmation","allowNo":false},"metadata":{"name":"metadata","type":"option","char":"m","description":"comma-separated list of names of metadata components to delete"},"sourcepath":{"name":"sourcepath","type":"option","char":"p","description":"comma-separated list of source file paths to delete"},"tracksource":{"name":"tracksource","type":"boolean","char":"t","description":"If the delete succeeds, update the source tracking information, similar to push","allowNo":false},"forceoverwrite":{"name":"forceoverwrite","type":"boolean","char":"f","description":"ignore conflict warnings and overwrite changes to the org","allowNo":false},"verbose":{"name":"verbose","type":"boolean","description":"verbose output of delete result","allowNo":false}},"args":[]},"force:source:deploy":{"id":"force:source:deploy","description":"deploy source to an org\nIMPORTANT: Where possible, we changed noninclusive terms to align with our company value of Equality. We maintained certain terms to avoid any effect on customer implementations.\n\nUse this command to deploy source (metadata that’s in source format) to an org.\nTo take advantage of change tracking with scratch orgs, use \"sfdx force:source:push\".\nTo deploy metadata that’s in metadata format, use \"sfdx force:mdapi:deploy\".\n\nThe source you deploy overwrites the corresponding metadata in your org. This command does not attempt to merge your source with the versions in your org.\n\nTo run the command asynchronously, set --wait to 0, which immediately returns the job ID. This way, you can continue to use the CLI.\nTo check the status of the job, use force:source:deploy:report.\n\nIf the comma-separated list you’re supplying contains spaces, enclose the entire comma-separated list in one set of double quotes. On Windows, if the list contains commas, also enclose the entire list in one set of double quotes.\n If you use the --manifest, --predestructivechanges, or --postdestructivechanges parameters, run the force:source:manifest:create command to easily generate the different types of manifest files.","usage":"<%= command.id %> [--soapdeploy] [-w <minutes>] [--purgeondelete -x <filepath>] [-q <id> | -c | -l NoTestRun|RunSpecifiedTests|RunLocalTests|RunAllTestsInOrg | -r <array> | -o | -g | -t] [-m <array>] [-p <array>] [--predestructivechanges <filepath> ] [--postdestructivechanges <filepath> ] [-f ] [-u <string>] [--apiversion <string>] [--verbose] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"examples":["To deploy the source files in a directory:","\t $ sfdx force:source:deploy -p path/to/source","To deploy a specific Apex class and the objects whose source is in a directory: ","\t$ sfdx force:source:deploy -p \"path/to/apex/classes/MyClass.cls,path/to/source/objects\"","To deploy source files in a comma-separated list that contains spaces:","   $ sfdx force:source:deploy -p \"path/to/objects/MyCustomObject/fields/MyField.field-meta.xml, path/to/apex/classes\"","To deploy all Apex classes:","   $ sfdx force:source:deploy -m ApexClass","To deploy a specific Apex class:","   $ sfdx force:source:deploy -m ApexClass:MyApexClass","To deploy a specific Apex class and update source tracking files :","   $ sfdx force:source:deploy -m ApexClass:MyApexClass --tracksource","To deploy all custom objects and Apex classes:","   $ sfdx force:source:deploy -m \"CustomObject,ApexClass\"","To deploy all Apex classes and two specific profiles (one of which has a space in its name):","   $ sfdx force:source:deploy -m \"ApexClass, Profile:My Profile, Profile: AnotherProfile\"","To deploy all components listed in a manifest:","   $ sfdx force:source:deploy -x path/to/package.xml","To run the tests that aren’t in any managed packages as part of a deployment:","   $ sfdx force:source:deploy -m ApexClass -l RunLocalTests","To check whether a deployment would succeed (to prepare for Quick Deploy):","   $ sfdx force:source:deploy -m ApexClass -l RunAllTestsInOrg -c","To deploy an already validated deployment (Quick Deploy):","    $ sfdx force:source:deploy -q 0Af9A00000FTM6pSAH`","To run a destructive operation before the deploy occurs:","    $ sfdx force:source:deploy --manifest package.xml --predestructivechanges destructiveChangesPre.xml","To run a destructive operation after the deploy occurs:","    $ sfdx force:source:deploy --manifest package.xml --postdestructivechanges destructiveChangesPost.xml"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"checkonly":{"name":"checkonly","type":"boolean","char":"c","description":"validate deploy but don’t save to the org","allowNo":false},"soapdeploy":{"name":"soapdeploy","type":"boolean","description":"deploy metadata with SOAP API instead of REST API","allowNo":false},"wait":{"name":"wait","type":"option","char":"w","description":"wait time for command to finish in minutes","default":{"quantity":33,"unit":0}},"testlevel":{"name":"testlevel","type":"option","char":"l","description":"deployment testing level","helpValue":"(NoTestRun|RunSpecifiedTests|RunLocalTests|RunAllTestsInOrg)","options":["NoTestRun","RunSpecifiedTests","RunLocalTests","RunAllTestsInOrg"],"default":"NoTestRun"},"runtests":{"name":"runtests","type":"option","char":"r","description":"tests to run if --testlevel RunSpecifiedTests","default":[]},"ignoreerrors":{"name":"ignoreerrors","type":"boolean","char":"o","description":"ignore any errors and do not roll back deployment","allowNo":false},"ignorewarnings":{"name":"ignorewarnings","type":"boolean","char":"g","description":"whether a warning will allow a deployment to complete successfully","allowNo":false},"purgeondelete":{"name":"purgeondelete","type":"boolean","description":"specify that deleted components in the destructive changes manifest file are immediately eligible for deletion rather than being stored in the Recycle Bin","allowNo":false},"validateddeployrequestid":{"name":"validateddeployrequestid","type":"option","char":"q","description":"deploy request ID of the validated deployment to run a Quick Deploy"},"verbose":{"name":"verbose","type":"boolean","description":"verbose output of deploy result","allowNo":false},"metadata":{"name":"metadata","type":"option","char":"m","description":"comma-separated list of metadata component names"},"sourcepath":{"name":"sourcepath","type":"option","char":"p","description":"comma-separated list of source file paths to deploy"},"manifest":{"name":"manifest","type":"option","char":"x","description":"file path for manifest (package.xml) of components to deploy"},"predestructivechanges":{"name":"predestructivechanges","type":"option","description":"file path for a manifest (destructiveChangesPre.xml) of components to delete before the deploy"},"postdestructivechanges":{"name":"postdestructivechanges","type":"option","description":"file path for a manifest (destructiveChangesPost.xml) of components to delete after the deploy"},"tracksource":{"name":"tracksource","type":"boolean","char":"t","description":"if the deploy succeeds, update source tracking information; doesn't delete locally deleted files from org unless you also specify --predestructivechanges or --postdestructivechanges","allowNo":false},"forceoverwrite":{"name":"forceoverwrite","type":"boolean","char":"f","description":"ignore conflict warnings and overwrite changes to the org","allowNo":false}},"args":[]},"force:source:open":{"id":"force:source:open","description":"edit a Lightning Page with Lightning App Builder\nOpens the specified Lightning Page in Lightning App Builder. Lightning Page files have the suffix .flexipage-meta.xml, and are stored in the flexipages directory. \nIf you specify a Visualforce page, which has a .page suffix, the page opens in your browser so you can preview it. If you specify a different type of file, this command opens your org’s home page.\n\nThe file opens in your default browser.\nIf no browser-based editor is available for the selected file, this command opens your org's home page.\nTo generate a URL for the browser-based editor but not open the editor, use --urlonly.","usage":"<%= command.id %> -f <filepath> [-r] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"examples":["$ sfdx force:source:open -f path/to/source","$ sfdx force:source:open -r -f path/to/source","$ sfdx force:source:open -f path/to/source -u my-user@my-org.com"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"sourcefile":{"name":"sourcefile","type":"option","char":"f","description":"file to edit","required":true},"urlonly":{"name":"urlonly","type":"boolean","char":"r","description":"generate a navigation URL; don’t launch the editor","allowNo":false}},"args":[]},"force:source:pull":{"id":"force:source:pull","description":"pull source from the scratch org to the project","usage":"<%= command.id %> [-f] [-w <minutes>] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":["force:source:beta:pull"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"forceoverwrite":{"name":"forceoverwrite","type":"boolean","char":"f","description":"ignore conflict warnings and overwrite changes to the project","allowNo":false},"wait":{"name":"wait","type":"option","char":"w","description":"The number of minutes to wait for the command to complete and display results to the terminal window. If the command continues to run after the wait period, the CLI returns control of the terminal window to you. The default is 33 minutes.","default":{"quantity":33,"unit":0}}},"args":[]},"force:source:push":{"id":"force:source:push","description":"push source to a scratch org from the project","usage":"<%= command.id %> [-f] [-w <minutes>] [-g] [-u <string>] [--apiversion <string>] [--quiet] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":["force:source:beta:push"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"forceoverwrite":{"name":"forceoverwrite","type":"boolean","char":"f","description":"ignore conflict warnings and overwrite changes to scratch org","allowNo":false},"wait":{"name":"wait","type":"option","char":"w","description":"Number of minutes to wait for the command to complete and display results to the terminal window. If the command continues to run after the wait period, the CLI returns control of the terminal window to you. The default is 33 minutes.","default":{"quantity":33,"unit":0}},"ignorewarnings":{"name":"ignorewarnings","type":"boolean","char":"g","description":"deploy changes even if warnings are generated","allowNo":false},"quiet":{"name":"quiet","type":"boolean","description":"minimize json and sdtout output on success","allowNo":false}},"args":[]},"force:source:retrieve":{"id":"force:source:retrieve","description":"retrieve source from an org \nUse this command to retrieve source (metadata that’s in source format) from an org.\nTo take advantage of change tracking with scratch orgs, use \"sfdx force:source:pull\".\nTo retrieve metadata that’s in metadata format, use \"sfdx force:mdapi:retrieve\".\n\nThe source you retrieve overwrites the corresponding source files in your local project. This command does not attempt to merge the source from your org with your local source files.\n\nIf the comma-separated list you’re supplying contains spaces, enclose the entire comma-separated list in one set of double quotes. On Windows, if the list contains commas, also enclose it in one set of double quotes.","usage":"<%= command.id %> [-p <array> | -x <filepath> | -m <array>] [-w <minutes>] [-n <array>] [-f -t] [-u <string>] [-a <string>] [--verbose] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"examples":["To retrieve the source files in a directory:","   $ sfdx force:source:retrieve -p path/to/source","To retrieve a specific Apex class and the objects whose source is in a directory:","   $ sfdx force:source:retrieve -p \"path/to/apex/classes/MyClass.cls,path/to/source/objects\"","To retrieve source files in a comma-separated list that contains spaces:","   $ sfdx force:source:retrieve -p \"path/to/objects/MyCustomObject/fields/MyField.field-meta.xml, path/to/apex/classes\"","To retrieve all Apex classes:","   $ sfdx force:source:retrieve -m ApexClass","To retrieve a specific Apex class:","   $ sfdx force:source:retrieve -m ApexClass:MyApexClass","To retrieve a specific Apex class and update source tracking files:","   $ sfdx force:source:retrieve -m ApexClass:MyApexClass -t","To retrieve all custom objects and Apex classes:","   $ sfdx force:source:retrieve -m \"CustomObject,ApexClass\"","To retrieve all Apex classes and two specific profiles (one of which has a space in its name):","   $ sfdx force:source:retrieve -m \"ApexClass, Profile:My Profile, Profile: AnotherProfile\"","To retrieve all metadata components listed in a manifest:","   $ sfdx force:source:retrieve -x path/to/package.xml","To retrieve metadata from a package or multiple packages:","   $ sfdx force:source:retrieve -n MyPackageName","   $ sfdx force:source:retrieve -n \"Package1, PackageName With Spaces, Package3\"","To retrieve all metadata from a package and specific components that aren’t in the package, specify both -n | --packagenames and one other scoping parameter:","   $ sfdx force:source:retrieve -n MyPackageName -p path/to/apex/classes","   $ sfdx force:source:retrieve -n MyPackageName -m ApexClass:MyApexClass","   $ sfdx force:source:retrieve -n MyPackageName -x path/to/package.xml"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","char":"a","description":"override the api version used for api requests made by this command"},"sourcepath":{"name":"sourcepath","type":"option","char":"p","description":"comma-separated list of source file paths to retrieve"},"wait":{"name":"wait","type":"option","char":"w","description":"wait time for command to finish in minutes","default":{"quantity":33,"unit":0}},"manifest":{"name":"manifest","type":"option","char":"x","description":"file path for manifest (package.xml) of components to retrieve"},"metadata":{"name":"metadata","type":"option","char":"m","description":"comma-separated list of metadata component names"},"packagenames":{"name":"packagenames","type":"option","char":"n","description":"a comma-separated list of packages to retrieve"},"tracksource":{"name":"tracksource","type":"boolean","char":"t","description":"if the retrieve succeeds, update source tracking information; doesn't delete local files that were deleted in the org","allowNo":false},"forceoverwrite":{"name":"forceoverwrite","type":"boolean","char":"f","description":"ignore conflict warnings and overwrite changes to the project","allowNo":false},"verbose":{"name":"verbose","type":"boolean","description":"verbose output of retrieve result","allowNo":false}},"args":[]},"force:source:status":{"id":"force:source:status","description":"list local changes and/or changes in a scratch org","usage":"<%= command.id %> [-l | -r] [-u <string>] [--apiversion <string>] [--concise] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":["force:source:beta:status"],"examples":["sfdx force:source:status -l","sfdx force:source:status -r","sfdx force:source:status -a","sfdx force:source:status -a -u me@example.com --json"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"local":{"name":"local","type":"boolean","char":"l","description":"list the changes that have been made locally","allowNo":false},"remote":{"name":"remote","type":"boolean","char":"r","description":"list the changes that have been made in the scratch org","allowNo":false},"concise":{"name":"concise","type":"boolean","description":"show only the changes that will be pushed or pulled; omits files that are forceignored","allowNo":false}},"args":[]},"force:mdapi:beta:convert":{"id":"force:mdapi:beta:convert","description":"convert metadata from the Metadata API format into the source format\nConverts metadata retrieved via Metadata API into the source format used in Salesforce DX projects.\n\nTo use Salesforce CLI to work with components that you retrieved via Metadata API, first convert your files from the metadata format to the source format using \"sfdx force:mdapi:convert\".\n\nTo convert files from the source format back to the metadata format, so that you can deploy them using \"sfdx force:mdapi:deploy\", run \"sfdx force:source:convert\".","usage":"<%= command.id %> -r <directory> [-d <directory>] [-p <array> | -x <string> | -m <array>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"examples":["$ sfdx force:mdapi:beta:convert -r path/to/metadata","$ sfdx force:mdapi:beta:convert -r path/to/metadata -d path/to/outputdir"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"rootdir":{"name":"rootdir","type":"option","char":"r","description":"the root directory containing the Metadata API–formatted metadata","required":true},"outputdir":{"name":"outputdir","type":"option","char":"d","description":"the output directory to store the source–formatted files"},"manifest":{"name":"manifest","type":"option","char":"x","description":"file path to manifest (package.xml) of metadata types to convert."},"metadatapath":{"name":"metadatapath","type":"option","char":"p","description":"comma-separated list of metadata file paths to convert"},"metadata":{"name":"metadata","type":"option","char":"m","description":"comma-separated list of metadata component names to convert"}},"args":[]},"force:mdapi:beta:deploy":{"id":"force:mdapi:beta:deploy","description":"deploy metadata to an org using Metadata API","usage":"<%= command.id %> [-d <directory>] [-w <minutes>] [-q <id> | -l NoTestRun|RunSpecifiedTests|RunLocalTests|RunAllTestsInOrg | -r <array> | -o | -g | -c] [-f <filepath>] [-s] [--soapdeploy] [--purgeondelete] [-u <string>] [--apiversion <string>] [--verbose] [--concise] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"examples":["Return a job ID you can use to check the deploy status:","  sfdx force:mdapi:beta:deploy -d some/path","Deploy and poll for 1000 minutes:","  sfdx force:mdapi:beta:deploy -d some/path -w 1000","Deploy a ZIP file:","  sfdx force:mdapi:beta:deploy -f stuff.zip","Validate a deployment so the ID can be used for a quick deploy:","  sfdx force:mdapi:beta:deploy -d some/path -w 1000 -c --testlevel RunAllTestsInOrg","Quick deploy using a previously validated deployment:","  sfdx force:mdapi:beta:deploy -q MyValidatedId"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"checkonly":{"name":"checkonly","type":"boolean","char":"c","description":"validate deploy but don’t save to the org","allowNo":false},"deploydir":{"name":"deploydir","type":"option","char":"d","description":"root of directory tree of files to deploy"},"wait":{"name":"wait","type":"option","char":"w","description":"wait time for command to finish in minutes (default: 0)","default":{"quantity":0,"unit":0}},"testlevel":{"name":"testlevel","type":"option","char":"l","description":"deployment testing level","helpValue":"(NoTestRun|RunSpecifiedTests|RunLocalTests|RunAllTestsInOrg)","options":["NoTestRun","RunSpecifiedTests","RunLocalTests","RunAllTestsInOrg"],"default":"NoTestRun"},"runtests":{"name":"runtests","type":"option","char":"r","description":"tests to run if --testlevel RunSpecifiedTests","default":[]},"ignoreerrors":{"name":"ignoreerrors","type":"boolean","char":"o","description":"ignore any errors and do not roll back deployment","allowNo":false},"ignorewarnings":{"name":"ignorewarnings","type":"boolean","char":"g","description":"whether a warning will allow a deployment to complete successfully","allowNo":false},"validateddeployrequestid":{"name":"validateddeployrequestid","type":"option","char":"q","description":"request ID of the validated deployment to run a Quick Deploy"},"verbose":{"name":"verbose","type":"boolean","description":"verbose output of deploy results","allowNo":false},"zipfile":{"name":"zipfile","type":"option","char":"f","description":"path to .zip file of metadata to deploy"},"singlepackage":{"name":"singlepackage","type":"boolean","char":"s","description":"Indicates that the zip file points to a directory structure for a single package","allowNo":false},"soapdeploy":{"name":"soapdeploy","type":"boolean","description":"deploy metadata with SOAP API instead of REST API","allowNo":false},"purgeondelete":{"name":"purgeondelete","type":"boolean","description":"specify that deleted components in the destructive changes manifest file are immediately eligible for deletion rather than being stored in the Recycle Bin","allowNo":false},"concise":{"name":"concise","type":"boolean","description":"omit success messages for smaller JSON output","allowNo":false}},"args":[]},"force:mdapi:beta:retrieve":{"id":"force:mdapi:beta:retrieve","description":"retrieve metadata from an org using Metadata API\nUses Metadata API to retrieve a .zip of XML files that represent metadata from the targeted org. The default target username is the admin user for the default scratch org. You can retrieve and deploy up to 10,000 files or 400 MB (39 MB compressed) at one time.","usage":"<%= command.id %> -r <directory> [-k <filepath> | -d <directory> | -p <array>] [-s] [-n <string>] [-z] [-w <minutes>] [-u <string>] [-a <string>] [--verbose] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"examples":["Retrieve metadata in the default project directory into the target directory:","  sfdx force:mdapi:beta:retrieve -r path/to/retrieve/dir","Retrieve metadata defined in the specified manifest into the target directory:","  sfdx force:mdapi:beta:retrieve -r path/to/retrieve/dir -k package.xml","Retrieve metadata defined by the specified directory, name the retrieved zipfile and extract all contents","  sfdx force:mdapi:beta:retrieve -d path/to/apexClasses -r path/to/retrieve/dir --unzip --zipfilename apexClasses.zip","Enqueue a retrieve request but do not wait for the metadata to be retrieved:","  sfdx force:mdapi:beta:retrieve -r path/to/retrieve/dir --wait 0"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","char":"a","description":"target API version for the retrieve"},"retrievetargetdir":{"name":"retrievetargetdir","type":"option","char":"r","description":"directory root for the retrieved files","required":true},"unpackaged":{"name":"unpackaged","type":"option","char":"k","description":"file path of manifest of components to retrieve"},"sourcedir":{"name":"sourcedir","type":"option","char":"d","description":"source dir to use instead of the default package dir in sfdx-project.json"},"packagenames":{"name":"packagenames","type":"option","char":"p","description":"a comma-separated list of packages to retrieve"},"singlepackage":{"name":"singlepackage","type":"boolean","char":"s","description":"indicates that the zip file points to a directory structure for a single package","allowNo":false},"zipfilename":{"name":"zipfilename","type":"option","char":"n","description":"file name to use for the retrieved zip file"},"unzip":{"name":"unzip","type":"boolean","char":"z","description":"extract all files from the retrieved zip file","allowNo":false},"wait":{"name":"wait","type":"option","char":"w","description":"wait time for command to finish in minutes","default":{"quantity":1440,"unit":0}},"verbose":{"name":"verbose","type":"boolean","description":"verbose output of retrieve result","allowNo":false}},"args":[]},"force:mdapi:deploy:cancel":{"id":"force:mdapi:deploy:cancel","description":"cancel a metadata deployment \n Use this command to cancel a specified asynchronous metadata deployment. You can also specify a wait time (in minutes) to check for updates to the canceled deploy status.","usage":"<%= command.id %> [-w <minutes>] [-i <id>] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"examples":["Deploy a directory of files to the org","  $ sfdx force:mdapi:deploy -d <directory>","Now cancel this deployment and wait two minutes","  $ sfdx force:mdapi:deploy:cancel -w 2","If you have multiple deployments in progress and want to cancel a specific one, specify the job ID","  $ sfdx force:mdapi:deploy:cancel -i <jobid>","Check the status of the cancel job","  $ sfdx force:mdapi:deploy:report"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"wait":{"name":"wait","type":"option","char":"w","description":"wait time for command to finish in minutes","default":{"quantity":33,"unit":0}},"jobid":{"name":"jobid","type":"option","char":"i","description":"job ID of the deployment you want to cancel; defaults to your most recent CLI deployment if not specified"}},"args":[]},"force:source:deploy:cancel":{"id":"force:source:deploy:cancel","description":"cancel a source deployment\n Use this command to cancel a specified asynchronous source deployment. You can also specify a wait time (in minutes) to check for updates to the canceled deploy status.\n\nTo run the command asynchronously, set --wait to 0, which immediately returns the job ID. This way, you can continue to use the CLI.\nTo check the status of the job, use force:source:deploy:report.","usage":"<%= command.id %> [-w <minutes>] [-i <id>] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"examples":["Deploy a directory of files to the org","  $ sfdx force:source:deploy -d <directory>","Now cancel this deployment and wait two minutes","  $ sfdx force:source:deploy:cancel -w 2","If you have multiple deployments in progress and want to cancel a specific one, specify the job ID","  $ sfdx force:source:deploy:cancel -i <jobid>","Check the status of the cancel job","  $ sfdx force:source:deploy:report"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"wait":{"name":"wait","type":"option","char":"w","description":"wait time for command to finish in minutes","default":{"quantity":33,"unit":0}},"jobid":{"name":"jobid","type":"option","char":"i","description":"job ID of the deployment you want to cancel; defaults to your most recent CLI deployment if not specified"}},"args":[]},"force:source:deploy:report":{"id":"force:source:deploy:report","description":"check the status of a metadata deployment \nSpecify the job ID for the deploy you want to check. You can also specify a wait time (minutes) to check for updates to the deploy status.","usage":"<%= command.id %> [-w <minutes>] [-i <id>] [-u <string>] [--apiversion <string>] [--verbose] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"examples":["Deploy a directory of files to the org"," $ sfdx force:source:deploy -d <directory>","Now cancel this deployment and wait two minutes"," $ sfdx force:source:deploy:cancel -w 2","If you have multiple deployments in progress and want to cancel a specific one, specify the job ID"," $ sfdx force:source:deploy:cancel -i <jobid>","Check the status of the cancel job"," $ sfdx force:source:deploy:report"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"wait":{"name":"wait","type":"option","char":"w","description":"wait time for command to finish in minutes","default":{"quantity":33,"unit":0}},"jobid":{"name":"jobid","type":"option","char":"i","description":"job ID of the deployment you want to check; defaults to your most recent CLI deployment if not specified"},"verbose":{"name":"verbose","type":"boolean","description":"verbose output of deploy result","allowNo":false}},"args":[]},"force:source:ignored:list":{"id":"force:source:ignored:list","description":"check your local project package directories for forceignored files","usage":"<%= command.id %> [-p <filepath>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"sourcepath":{"name":"sourcepath","type":"option","char":"p","description":"file or directory of files that the command checks for foreceignored files"}},"args":[]},"force:source:manifest:create":{"id":"force:source:manifest:create","description":"create a project manifest that lists the metadata components you want to deploy or retrieve \n Create a manifest from a list of metadata components (--metadata) or from one or more local directories that contain source files (--sourcepath). You can specify either of these parameters, not both.\n\nUse --manifesttype to specify the type of manifest you want to create. The resulting manifest files have specific names, such as the standard package.xml or destructiveChanges.xml to delete metadata. Valid values for this parameter, and their respective file names, are:\n\n  package :  package.xml (default)\n  pre : destructiveChangesPre.xml\n  post : destructiveChangesPost.xml\n  destroy : destructiveChanges.xml\n\nSee https://developer.salesforce.com/docs/atlas.en-us.api_meta.meta/api_meta/meta_deploy_deleting_files.htm for information about these destructive manifest files. \n\nUse --manifestname to specify a custom name for the generated manifest if the pre-defined ones don’t suit your needs. You can specify either --manifesttype or --manifestname, but not both.\n","usage":"<%= command.id %> [-m <array>] [-p <array>] [-n <string> | -t pre|post|destroy|package] [-c <array> --fromorg <string>] [-o <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"examples":["$ sfdx force:source:manifest:create -m ApexClass","$ sfdx force:source:manifest:create -m ApexClass:MyApexClass --manifesttype destroy","$ sfdx force:source:manifest:create --sourcepath force-app --manifestname myNewManifest","$ sfdx force:source:manifest:create --fromorg test@myorg.com --includepackages unlocked"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"metadata":{"name":"metadata","type":"option","char":"m","description":"comma-separated list of names of metadata components to include in the manifest"},"sourcepath":{"name":"sourcepath","type":"option","char":"p","description":"comma-separated list of paths to the local source files to include in the manifest"},"manifestname":{"name":"manifestname","type":"option","char":"n","description":"name of a custom manifest file to create"},"manifesttype":{"name":"manifesttype","type":"option","char":"t","description":"type of manifest to create; the type determines the name of the created file","helpValue":"(pre|post|destroy|package)","options":["pre","post","destroy","package"]},"includepackages":{"name":"includepackages","type":"option","char":"c","description":"comma-separated list of package types (managed, unlocked) whose metadata is included in the manifest; by default, metadata in packages is ignored"},"fromorg":{"name":"fromorg","type":"option","description":"username or alias of the org that contains the metadata components from which to build a manifest"},"outputdir":{"name":"outputdir","type":"option","char":"o","description":"directory to save the created manifest"}},"args":[]},"force:source:tracking:clear":{"id":"force:source:tracking:clear","description":"clear all local source tracking information\n\nWARNING: This command deletes or overwrites all existing source tracking files. Use with extreme caution.\n\nClears all local source tracking information. When you next run force:source:status, the CLI displays all local and remote files as changed, and any files with the same name are listed as conflicts.","usage":"<%= command.id %> [-p] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":["force:source:beta:tracking:clear"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"noprompt":{"name":"noprompt","type":"boolean","char":"p","description":"do not prompt for source tracking override confirmation","required":false,"allowNo":false}},"args":[]},"force:source:tracking:reset":{"id":"force:source:tracking:reset","description":"reset local and remote source tracking\n\n WARNING: This command deletes or overwrites all existing source tracking files. Use with extreme caution. \n\nResets local and remote source tracking so that the CLI no longer registers differences between your local files and those in the org. When you next run force:source:status, the CLI returns no results, even though conflicts might actually exist. The CLI then resumes tracking new source changes as usual.\n\nUse the --revision parameter to reset source tracking to a specific revision number of an org source member. To get the revision number, query the SourceMember Tooling API object with the force:data:soql:query command. For example:\n $ sfdx force:data:soql:query -q \"SELECT MemberName, MemberType, RevisionCounter FROM SourceMember\" -t","usage":"<%= command.id %> [-r <integer>] [-p] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":["force:source:beta:tracking:reset"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"revision":{"name":"revision","type":"option","char":"r","description":"reset to a specific SourceMember revision counter number"},"noprompt":{"name":"noprompt","type":"boolean","char":"p","description":"do not prompt for source tracking override confirmation","allowNo":false}},"args":[]},"force:mdapi:beta:deploy:report":{"id":"force:mdapi:beta:deploy:report","description":"check the status of a metadata deployment","usage":"<%= command.id %> [-w <minutes>] [-i <id>] [-u <string>] [--apiversion <string>] [--verbose] [--concise] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"examples":["Check the status of the most recent deployment"," sfdx force:mdapi:beta:deploy:report","Check the status of a deploy with job ID 1234 and wait for 10 minutes for the result:"," sfdx force:mdapi:beta:deploy:report -i 1234 -w 10"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"wait":{"name":"wait","type":"option","char":"w","description":"wait time for command to finish in minutes (default: 33)","default":{"quantity":33,"unit":0}},"jobid":{"name":"jobid","type":"option","char":"i","description":"job ID of the deployment to check; required if you’ve never deployed using Salesforce CLI; if not specified, defaults to your most recent CLI deployment"},"verbose":{"name":"verbose","type":"boolean","description":"verbose output of deploy results","allowNo":false},"concise":{"name":"concise","type":"boolean","description":"omit success messages for smaller JSON output","allowNo":false}},"args":[]},"force:mdapi:beta:retrieve:report":{"id":"force:mdapi:beta:retrieve:report","description":"check the status of a metadata retrieval\nSpecify the job ID and a target directory for the retrieve you want to check. You can also specify a wait time (minutes) to check for updates to the retrieve status. If the retrieve was successful, the resulting zip file will be saved to the location passed in with the retrieve target parameter.","usage":"<%= command.id %> [-r <directory>] [-i <id>] [-n <string>] [-z] [-w <minutes>] [-u <string>] [--apiversion <string>] [--verbose] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"examples":["Poll until the metadata is retrieved (or timeout is reached) using data from the last force:mdapi:retrieve command:","  sfdx force:mdapi:beta:retrieve:report","Report the current status of the last retrieve command. If the retrieve is complete the zip file of metadata is written to the target directoy:","  sfdx force:mdapi:beta:retrieve:report -r path/to/retrieve/dir -w 0","Poll until the metadata is retrieved (or timeout is reached) using the provided RetrieveID, naming the zip file and extracting all contents:","  sfdx force:mdapi:beta:retrieve:report -i retrieveId -r path/to/retrieve/dir --unzip --zipfilename apexClasses.zip"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"retrievetargetdir":{"name":"retrievetargetdir","type":"option","char":"r","description":"directory root for the retrieved files"},"jobid":{"name":"jobid","type":"option","char":"i","description":"job ID of the retrieve you want to check; defaults to your most recent CLI retrieval if not specified"},"zipfilename":{"name":"zipfilename","type":"option","char":"n","description":"file name to use for the retrieved zip file"},"unzip":{"name":"unzip","type":"boolean","char":"z","description":"extract all files from the retrieved zip file","allowNo":false},"wait":{"name":"wait","type":"option","char":"w","description":"wait time for command to finish in minutes","default":{"quantity":1440,"unit":0}},"verbose":{"name":"verbose","type":"boolean","description":"verbose output of retrieve result","allowNo":false}},"args":[]}}}
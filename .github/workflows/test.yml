# This is a basic workflow to elp you get started with Actions

name: Test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
 
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
            
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.1.1
        with:
          node-version: '>=14'
          check-latest: true

      - name: Install Salesforce CLI
        run: |
          npm install sfdx-cli
          node_modules/sfdx-cli/bin/run --version
          node_modules/sfdx-cli/bin/run plugins --core

      - name: install yaml parser
        run: pip install -U niet       
        
      - name: Directory structure
        working-directory: ./user-registeration
        run: |
          ls -ltr
        
      - name: Setup ScratchOrg
        working-directory: ./user-registeration
        run: |
          scratchOrg=$(niet -f json .scratch_org deploy-config.yml)
          def=$(niet .definition_file <<< $scratchOrg)
          alias=$(niet .alias <<< $scratchOrg)
          alive=$(niet .alive <<< $scratchOrg)
          wait=$(niet .wait <<< $scratchOrg)
          apexSuit=$(niet .apex_suite <<< $scratchOrg)
          metadata_path=$(niet .metadata <<< $scratchOrg)
          echo '${{ secrets.MY_DEVHUB }}' > sfdcCred.json
          ../node_modules/sfdx-cli/bin/run force:auth:sfdxurl:store -f ./sfdcCred.json -d -a devhub
          ../node_modules/sfdx-cli/bin/run force:org:list --json
          ../node_modules/sfdx-cli/bin/run force:org:create -f $def -d $alive -a $alias -w $wait -s
          ../node_modules/sfdx-cli/bin/run force:org:list
          for el in $(niet -s .dependencies <<< $scratchOrg); do ../node_modules/sfdx-cli/bin/run force:package:install -p ${el} -r -w $wait; done
          ../node_modules/sfdx-cli/bin/run force:package:installed:list
          ../node_modules/sfdx-cli/bin/run force:source:push -f
          if [ $metadata_path ]; then ../node_modules/sfdx-cli/bin/run force:mdapi:deploy -d $metadata_path -w $wait; fi
          if [ $apexSuit ]; then ../node_modules/sfdx-cli/bin/run force:apex:test:run -s $apexSuit -c -v -r human; fi
          
          
      - name: cleanup
        if: always()
        working-directory: ./user-registeration
        run: |
          ../node_modules/sfdx-cli/bin/run force:org:delete -p

  pmd:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: pmd
        uses: pmd/pmd-github-action@v1
        with:
          rulesets: 'rulesets/apex/quickstart.xml'
          
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: pmd-report.sarif

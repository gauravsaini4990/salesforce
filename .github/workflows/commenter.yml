# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: commenter
on:
  issue_comment:
    types: 
      - created
      - edited
      
jobs:
  comment:
    if: contains(github.event.comment.body, '!deploy')
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: show data
        run:   echo "$GITHUB_CONTEXT"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
    
      - uses: actions/checkout@v3
            
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.1.1
        with:
          node-version: '>=14'
          check-latest: true

      - name: Install Salesforce CLI
        run: |
          npm install sfdx-cli
          node_modules/sfdx-cli/bin/run --version
          node_modules/sfdx-cli/bin/run plugins --core

      - name: install yaml parser
        run: pip install -U niet       
        
      - name: Directory structure
        working-directory: ./user-registeration
        run: |
          ls -ltr
        
      - name: Create package
        working-directory: ./user-registeration
        run: |
          packageAlreadyExits=false
          package=$(niet -f json .package deploy-config.yml)
          name=$(niet .name <<< $package)
          type=$(niet .type <<< $package)
          wait=$(niet .wait <<< $package)
          description=$(niet .description <<< $package)
          echo '${{ secrets.MY_DEVHUB }}' >> sfdcCred.json
          ../node_modules/sfdx-cli/bin/run force:auth:sfdxurl:store -f ./sfdcCred.json -d -a devhub
          packageList=$(../node_modules/sfdx-cli/bin/run force:package:list --json)
          for packageName in $(niet -s .result <<< $packageList); do if [ $(niet -s .Name <<< $packageName) == $name]; then packageAlreadyExits=true; fi;  done
          if [ "$packageAlreadyExits" = false ]; then ../node_modules/sfdx-cli/bin/run  force:package:create -t $type -w $wait --orgdependent; fi
          ../node_modules/sfdx-cli/bin/run force:package:list
          ../node_modules/sfdx-cli/bin/run force:package:version:create -p $name -x -c -w $wait
          ../node_modules/sfdx-cli/bin/run force:package:version:list -p $name


      - name: install package
        working-directory: ./user-registeration
        run: |
          package=$(niet -f json .scratch_org deploy-config.yml)
          name=$(niet .name <<< $package)
          type=$(niet .type <<< $package)
          wait=$(niet .wait <<< $package)
          apexSuit=$(niet .apex_suite <<< $scratchOrg)
          metadata_path=$(niet .metadata <<< $scratchOrg)
          echo '${{ secrets.MY_DEVHUB }}' >> sfdcCred.json
          ../node_modules/sfdx-cli/bin/run force:auth:sfdxurl:store -f ./sfdcCred.json -d -a devhub
          ../node_modules/sfdx-cli/bin/run force:package:version:list -p $name
